"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MethodMemberDoc_1 = require("./MethodMemberDoc");
/**
 * This represents a getter or setter overload of an accessor property.
 * There will be a PropertyMemberDoc that contains these docs.
 */
var AccessorInfoDoc = /** @class */ (function (_super) {
    __extends(AccessorInfoDoc, _super);
    function AccessorInfoDoc(host, accessorType, propertyDoc, declaration) {
        var _this = _super.call(this, host, propertyDoc.containerDoc, propertyDoc.symbol, declaration) || this;
        _this.accessorType = accessorType;
        _this.propertyDoc = propertyDoc;
        _this.docType = _this.accessorType + "-accessor-info";
        _this.name = _this.propertyDoc.name + ":" + _this.accessorType;
        _this.id = _this.propertyDoc.id + ":" + _this.accessorType;
        _this.aliases = _this.propertyDoc.aliases.map(function (alias) { return alias + ":" + _this.accessorType; });
        _this.anchor = _this.name;
        return _this;
    }
    return AccessorInfoDoc;
}(MethodMemberDoc_1.MethodMemberDoc));
exports.AccessorInfoDoc = AccessorInfoDoc;
//# sourceMappingURL=AccessorInfoDoc.js.map