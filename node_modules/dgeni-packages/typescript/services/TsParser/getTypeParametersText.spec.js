"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _1 = require(".");
var getTypeParametersText_1 = require("./getTypeParametersText");
var path = require('canonical-path');
describe('getTypeParametersText', function () {
    var parser;
    var basePath;
    beforeEach(function () {
        parser = new _1.TsParser(require('dgeni/lib/mocks/log')(false));
        basePath = path.resolve(__dirname, '../../mocks');
    });
    it('should return text representation of types', function () {
        var parseInfo = parser.parse(['tsParser/getTypeParametersText.test.ts'], basePath);
        var moduleExports = parseInfo.moduleSymbols[0].exportArray;
        var testFunction = moduleExports[0].getDeclarations()[0];
        expect(getTypeParametersText_1.getTypeParametersText(testFunction)).toEqual('<T, U, V>');
        var testClass = moduleExports[1];
        expect(getTypeParametersText_1.getTypeParametersText(testClass.getDeclarations()[0])).toEqual('<T>');
        expect(getTypeParametersText_1.getTypeParametersText(testClass.members.get('method').getDeclarations()[0])).toEqual('<U>');
    });
});
//# sourceMappingURL=getTypeParametersText.spec.js.map