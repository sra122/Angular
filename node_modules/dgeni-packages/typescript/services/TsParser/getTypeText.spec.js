"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _1 = require(".");
var getTypeText_1 = require("./getTypeText");
var path = require('canonical-path');
describe('getTypeText', function () {
    var parser;
    var basePath;
    beforeEach(function () {
        parser = new _1.TsParser(require('dgeni/lib/mocks/log')(false));
        basePath = path.resolve(__dirname, '../../mocks');
    });
    it('should return text representation of types', function () {
        var parseInfo = parser.parse(['tsParser/getTypeText.test.ts'], basePath);
        var moduleExports = parseInfo.moduleSymbols[0].exportArray;
        expect(getTypeText_1.getTypeText(getType(moduleExports[1]))).toEqual('TestClass');
        expect(getTypeText_1.getTypeText(getType(moduleExports[2]))).toEqual('string');
        expect(getTypeText_1.getTypeText(getType(moduleExports[3]))).toEqual('number');
        expect(getTypeText_1.getTypeText(getType(moduleExports[4]))).toEqual('TestType');
        expect(getTypeText_1.getTypeText(getType(moduleExports[5]))).toEqual('TestClass | string');
        expect(getTypeText_1.getTypeText(getType(moduleExports[6]))).toEqual([
            '{',
            '    x: number;',
            '    y: string;',
            '}',
        ].join('\n'));
        expect(getTypeText_1.getTypeText(getType(moduleExports[7]))).toEqual('Array<string>');
        expect(getTypeText_1.getTypeText(getType(moduleExports[8]))).toEqual('Array<T>');
    });
    it('should remove comments from the rendered text', function () {
        var parseInfo = parser.parse(['tsParser/getTypeText.test.ts'], basePath);
        var moduleExports = parseInfo.moduleSymbols[0].exportArray;
        expect(getTypeText_1.getTypeText(getType(moduleExports[12]))).toEqual([
            '{',
            '    a: number;',
            '    b: string;',
            '} & {',
            '    a: string;',
            '}',
        ].join('\n'));
    });
});
function getType(symbol) {
    return symbol.getDeclarations()[0].type;
}
//# sourceMappingURL=getTypeText.spec.js.map