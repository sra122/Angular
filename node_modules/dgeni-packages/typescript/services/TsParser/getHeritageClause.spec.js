"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _1 = require(".");
var getHeritageClause_1 = require("./getHeritageClause");
var path = require('canonical-path');
describe('getHeritageClause', function () {
    var parser;
    var basePath;
    beforeEach(function () {
        parser = new _1.TsParser(require('dgeni/lib/mocks/log')(false));
        basePath = path.resolve(__dirname, '../../mocks');
    });
    it('should return the accessibility of class members', function () {
        var parseInfo = parser.parse(['tsParser/getHeritageClause.test.ts'], basePath);
        var moduleExports = parseInfo.moduleSymbols[0].exportArray;
        var test1 = expect(getHeritageClause_1.getHeritageClause(find(moduleExports, 'Test1'))).toEqual(' extends Base1');
        var test2 = expect(getHeritageClause_1.getHeritageClause(find(moduleExports, 'Test2'))).toEqual(' extends Base1, Base2');
        var test3 = expect(getHeritageClause_1.getHeritageClause(find(moduleExports, 'Test3'))).toEqual(' extends Base3');
        var test4 = expect(getHeritageClause_1.getHeritageClause(find(moduleExports, 'Test4'))).toEqual(' implements Base1');
        var test5 = expect(getHeritageClause_1.getHeritageClause(find(moduleExports, 'Test5'))).toEqual(' implements Base1, Base2');
        var test6 = expect(getHeritageClause_1.getHeritageClause(find(moduleExports, 'Test6'))).toEqual(' extends Base3 implements Base1');
        var test7 = expect(getHeritageClause_1.getHeritageClause(find(moduleExports, 'Test7'))).toEqual(' extends Base3 implements Base1, Base2');
    });
});
function find(moduleExports, name) {
    return moduleExports.find(function (value) { return value.name === name; }).declarations[0];
}
//# sourceMappingURL=getHeritageClause.spec.js.map