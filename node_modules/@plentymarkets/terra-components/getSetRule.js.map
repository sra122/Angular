{"version":3,"sources":["getSetRule.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA,6BAA+B;AAE/B;IAA0B,wBAAuB;IAAjD;;IAMA,CAAC;IAJU,oBAAK,GAAZ,UAAa,UAAwB;QAEjC,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IAC/E,CAAC;IACL,WAAC;AAAD,CANA,AAMC,CANyB,IAAI,CAAC,KAAK,CAAC,YAAY,GAMhD;AANY,oBAAI;AAQjB,yCAAyC;AACzC;IAAyB,8BAAe;IAAxC;QAAA,qEAkDC;QAhDW,iBAAW,GAAiB,EAAE,CAAC;QAC/B,iBAAW,GAAiB,EAAE,CAAC;;IA+C3C,CAAC;IA7CU,qCAAgB,GAAvB,UAAwB,IAA2B;QAE/C,IAAI,UAAU,GAAU,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;QACvD,IAAI,MAAM,GAAU,IAAI,MAAM,CAAC,UAAU,GAAG,UAAU,GAAG,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QAEpH,IAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC;eAC9B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EACvE;YACI,IAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAC5C;gBACI,IAAI,CAAC,YAAY,CACb,IAAI,CAAC,QAAQ,EAAE,EACf,IAAI,CAAC,QAAQ,EAAE,EACf,mBAAmB,GAAG,UAAU,GAAG,oEAAoE,CAC1G,CAAC;aACL;iBAED;gBACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACrC;SACJ;IACL,CAAC;IAEM,qCAAgB,GAAvB,UAAwB,IAA2B;QAE/C,IAAI,UAAU,GAAU,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;QACvD,IAAI,MAAM,GAAU,IAAI,MAAM,CAAC,uBAAuB,GAAG,UAAU,GAAG,UAAU,CAAC,CAAC;QAElF,IAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC;eAC9B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EACvE;YACI,IAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAC5C;gBACI,IAAI,CAAC,YAAY,CACb,IAAI,CAAC,QAAQ,EAAE,EACf,IAAI,CAAC,QAAQ,EAAE,EACf,gBAAgB,GAAG,UAAU,GAAG,mEAAmE,CACtG,CAAC;aACL;iBAED;gBACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACrC;SACJ;IACL,CAAC;IACL,iBAAC;AAAD,CAlDA,AAkDC,CAlDwB,IAAI,CAAC,UAAU,GAkDvC;AACD,wCAAwC","file":"getSetRule.js","sourcesContent":["/* tslint:disable:max-classes-per-file */\nimport * as ts from 'typescript';\nimport * as Lint from 'tslint';\n\nexport class Rule extends Lint.Rules.AbstractRule\n{\n    public apply(sourceFile:ts.SourceFile):Lint.RuleFailure[]\n    {\n        return this.applyWithWalker(new GetSetRule(sourceFile, this.getOptions()));\n    }\n}\n\n// The walker takes care of all the work.\nclass GetSetRule extends Lint.RuleWalker\n{\n    private knownGetter:Array<string> = [];\n    private knownSetter:Array<string> = [];\n\n    public visitSetAccessor(node:ts.AccessorDeclaration):void\n    {\n        let setterName:string = node.name.getFullText().trim();\n        let regExp:RegExp = new RegExp('this\\\\._' + setterName + '[ \\\\t]*=[ \\\\t]*' + node.parameters[0].name.getFullText());\n\n        if(node.body.statements.length === 1\n           && node.body.statements[0].getFullText().trim().search(regExp) === 0)\n        {\n            if(this.knownGetter.indexOf(setterName) >= 0)\n            {\n                this.addFailureAt(\n                    node.getStart(),\n                    node.getWidth(),\n                    'Simple setter of ' + setterName + '\\n\\tSimple getter still exist => Use public local field instead!!!'\n                );\n            }\n            else\n            {\n                this.knownSetter.push(setterName);\n            }\n        }\n    }\n\n    public visitGetAccessor(node:ts.AccessorDeclaration):void\n    {\n        let getterName:string = node.name.getFullText().trim();\n        let regExp:RegExp = new RegExp('return[ \\\\t]*this\\\\._' + getterName + '[ \\\\t]*;');\n\n        if(node.body.statements.length === 1\n           && node.body.statements[0].getFullText().trim().search(regExp) === 0)\n        {\n            if(this.knownSetter.indexOf(getterName) >= 0)\n            {\n                this.addFailureAt(\n                    node.getStart(),\n                    node.getWidth(),\n                    'Simple getter ' + getterName + '\\n\\tSimple setter still exist=> Use public local field instead!!!'\n                );\n            }\n            else\n            {\n                this.knownGetter.push(getterName);\n            }\n        }\n    }\n}\n/* tslint:enable:max-classes-per-file */\n"]}