{"version":3,"sources":["restrictLeadingUnderscoreRule.ts"],"names":[],"mappings":"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","file":"restrictLeadingUnderscoreRule.js","sourcesContent":["/* tslint:disabble:max-classes-per-file */\nimport * as ts from 'typescript';\nimport * as Lint from 'tslint';\nimport { isNullOrUndefined } from 'util';\nimport set = Reflect.set;\n\nexport class Rule extends Lint.Rules.AbstractRule\n{\n    public apply(sourceFile:ts.SourceFile):Lint.RuleFailure[]\n    {\n        return this.applyWithWalker(new RestrictLeadingUnderscoreWalker(sourceFile, this.getOptions()));\n    }\n}\n\n// The walker takes care of all the work.\nclass RestrictLeadingUnderscoreWalker extends Lint.RuleWalker\n{\n    private underscoreProperties:Array<ts.NamedDeclaration> = [];\n    private propertiesWithGetOrSet:Array<string> = [];\n\n    public visitConstructorDeclaration(node:ts.ConstructorDeclaration):void\n    {\n        node.parameters.forEach((parameter:ts.ParameterDeclaration) =>\n            {\n                let propertyName:string = parameter.name.getFullText().trim();\n                if(propertyName.startsWith('_'))\n                {\n                    this.underscoreProperties.push(parameter);\n                }\n            }\n        );\n\n        super.visitConstructorDeclaration(node);\n    }\n\n    public visitPropertyDeclaration(node:ts.PropertyDeclaration):void\n    {\n        let propertyName:string = node.name.getFullText().trim();\n\n        if(propertyName.startsWith('_'))\n        {\n            this.underscoreProperties.push(node);\n        }\n\n        super.visitPropertyDeclaration(node);\n    }\n\n    public visitSetAccessor(node:ts.AccessorDeclaration):void\n    {\n        let setterName:string = '_' + node.name.getFullText().trim();\n        this.propertiesWithGetOrSet.push(setterName);\n    }\n\n    public visitGetAccessor(node:ts.AccessorDeclaration):void\n    {\n        let getterName:string = '_' + node.name.getFullText().trim();\n        this.propertiesWithGetOrSet.push(getterName);\n    }\n\n    public visitEndOfFileToken(node:ts.Node):void\n    {\n        this.propertiesWithGetOrSet.forEach((propertyName:string) =>\n            {\n                let index:number = this.underscoreProperties.findIndex((property:ts.NamedDeclaration) =>\n                {\n                    return property.name.getFullText().trim() === propertyName;\n                });\n\n                if(index >= 0)\n                {\n                    this.underscoreProperties.splice(index, 1);\n                }\n            }\n        );\n\n        this.underscoreProperties.forEach((parameter:ts.ParameterDeclaration) =>\n        {\n            let propertyName:string = parameter.name.getFullText().trim();\n\n            this.addFailureFromStartToEnd(\n                node.getStart(),\n                node.getWidth(),\n                'Property: ' + propertyName + ' --- Leading underscores are only needed if you have to use a get or set method for this field.'\n            );\n        });\n    }\n}\n\n/* tslint:enable:max-classes-per-file */\n"]}