{"version":3,"sources":["app/helpers/query-param.helper.ts"],"names":[],"mappings":";;AACA,iDAA+C;AAE/C;IAAA;IAaA,CAAC;IAXiB,oCAAmB,GAAjC,UAAkC,QAAiB;QAE/C,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,KAAY,IAAK,OAAA,KAAK,GAAG,GAAG,GAAG,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAArD,CAAqD,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAChH,CAAC;IAEa,uCAAsB,GAApC,UAAqC,GAAU,EAAE,QAAiB;QAE9D,IAAI,WAAW,GAAU,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;QAE5D,OAAO,4BAAY,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,WAAW,CAAC;IAC5F,CAAC;IACL,uBAAC;AAAD,CAbA,AAaC,IAAA;AAbY,4CAAgB","file":"query-param.helper.js","sourcesContent":["import { ParamMap } from '@angular/router';\nimport { StringHelper } from './string.helper';\n\nexport class QueryParamHelper\n{\n    public static getQueryParamString(paramMap:ParamMap):string\n    {\n        return paramMap.keys.map((param:string) => param + '=' + encodeURIComponent(paramMap.get(param))).join('&');\n    }\n\n    public static appendQueryParamsToUrl(url:string, paramMap:ParamMap):string\n    {\n        let paramString:string = this.getQueryParamString(paramMap);\n\n        return StringHelper.isNullUndefinedOrEmpty(paramString) ? url : url + '?' + paramString;\n    }\n}\n"]}