{"version":3,"sources":["app/helpers/clipboard.helper.ts"],"names":[],"mappings":";;AAAA;IAAA;IA0DA,CAAC;IAxDiB,6BAAa,GAA3B;QAEI,IAAI,OAAO,GAAW,KAAK,CAAC;QAC5B,IACA;YACI,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAM,GAAG,EACT;YACI,OAAO,GAAG,KAAK,CAAC;SACnB;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IAEa,wBAAQ,GAAtB,UAAuB,IAAW;QAE9B,IAAI,SAAS,GAAe,eAAe,CAAC,aAAa,CAAC,KAAK,EAAE;YAC7D,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAM,KAAK;YACf,GAAG,EAAO,KAAK;YACf,KAAK,EAAK,KAAK;YACf,MAAM,EAAI,KAAK;YACf,OAAO,EAAG,OAAO;YACjB,OAAO,EAAG,GAAG;YACb,MAAM,EAAI,OAAO;SACpB,CAAC,CAAC;QAEH,IAAI,QAAQ,GAAuB,eAAe,CAAC,aAAa,CAAsB,UAAU,EAAE;YAC9F,KAAK,EAAI,KAAK;YACd,MAAM,EAAG,KAAK;YACd,OAAO,EAAE,KAAK;SACjB,CAAC,CAAC;QAEH,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAChC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,QAAQ,CAAC,MAAM,EAAE,CAAC;QAElB,IAAI,OAAO,GAAW,eAAe,CAAC,aAAa,EAAE,CAAC;QAEtD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAErC,OAAO,OAAO,CAAC;IACnB,CAAC;IAEc,6BAAa,GAA5B,UAAoD,OAAc,EAAE,MAAmC;QAAnC,uBAAA,EAAA,WAAmC;QAEnG,IAAI,OAAO,GAAS,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAC,KAAY;YAErC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACnB,CAAC;IACL,sBAAC;AAAD,CA1DA,AA0DC,IAAA;AA1DY,0CAAe","file":"clipboard.helper.js","sourcesContent":["export class ClipboardHelper\n{\n    public static copySelection():boolean\n    {\n        let success:boolean = false;\n        try\n        {\n            success = document.execCommand('copy');\n        }\n        catch(err)\n        {\n            success = false;\n        }\n\n        return success;\n    }\n\n    public static copyText(text:string):boolean\n    {\n        let container:HTMLElement = ClipboardHelper.createElement('div', {\n            position: 'fixed',\n            left:     '0px',\n            top:      '0px',\n            width:    '0px',\n            height:   '0px',\n            display:  'block',\n            opacity:  '0',\n            zIndex:   '10000'\n        });\n\n        let textarea:HTMLTextAreaElement = ClipboardHelper.createElement<HTMLTextAreaElement>('textarea', {\n            width:   '1px',\n            height:  '1px',\n            padding: '0px'\n        });\n\n        textarea.value = text;\n        container.appendChild(textarea);\n        document.body.appendChild(container);\n        textarea.focus();\n        textarea.select();\n\n        let success:boolean = ClipboardHelper.copySelection();\n\n        document.body.removeChild(container);\n\n        return success;\n    }\n\n    private static createElement<T extends HTMLElement>(tagName:string, styles:{ [key:string]:string } = {}):T\n    {\n        let element:T = <T> document.createElement(tagName);\n        Object.keys(styles).forEach((style:string):void =>\n        {\n            element.style[style] = styles[style];\n        });\n        return element;\n    }\n}\n"]}