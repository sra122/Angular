{"version":3,"sources":["app/service/terra-base.service.ts"],"names":[],"mappings":"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","file":"terra-base.service.js","sourcesContent":["/* tslint:disable:restrict-leading-underscore */\nimport { Injectable } from '@angular/core';\nimport {\n    Headers,\n    Http,\n    Response,\n    URLSearchParams\n} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs';\nimport { Exception } from './data/exception.interface';\nimport {\n    isArray,\n    isNull,\n    isNullOrUndefined\n} from 'util';\nimport { TerraAlertComponent } from '../components/alert/terra-alert.component';\nimport { TerraLoadingSpinnerService } from '../components/loading-spinner/service/terra-loading-spinner.service';\nimport { TerraBaseParameterInterface } from '../components/data/terra-base-parameter.interface';\nimport { tap } from 'rxjs/operators';\nimport { of } from 'rxjs/observable/of';\nimport { TerraQueryEncoder } from './data/terra-query-encoder';\n\n/**\n * @author mfrank\n */\n@Injectable()\n// Please keep the todo comments until TerraBaseService refactoring\n// TODO TerraBaseService<D> or maybe TerraBaseService<D extends BaseData>\nexport class TerraBaseService\n{\n    public headers:Headers;\n    public url:string;\n\n    // TODO use D instead of any\n    protected dataModel:{ [dataId:number]:any } = {};\n\n    private _alert:TerraAlertComponent = TerraAlertComponent.getInstance();\n\n    constructor(private terraLoadingSpinnerService:TerraLoadingSpinnerService,\n                private _baseHttp:Http,\n                private baseUrl:string,\n                private isPlugin?:boolean)\n    {\n        this.headers = new Headers({'Content-Type': 'application/json'});\n        this.setAuthorization();\n        this.url = baseUrl;\n\n        if(isNullOrUndefined(this.isPlugin))\n        {\n            this.isPlugin = false;\n        }\n    }\n\n    public get http():Http\n    {\n        return this._baseHttp;\n    }\n\n    public get isLoading():boolean\n    {\n        return this.terraLoadingSpinnerService.isLoading;\n    }\n\n    protected setToHeader(key:string, value:string):void\n    {\n        this.headers.set(key, value);\n    }\n\n    protected deleteFromHeader(key:string):void\n    {\n        this.headers.delete(key);\n    }\n\n    protected setAuthorization():void\n    {\n        if(localStorage.getItem('accessToken'))\n        {\n            this.setToHeader('Authorization', 'Bearer ' + localStorage.getItem('accessToken'));\n        }\n    }\n\n    // TODO use D instead of any, use a meaningful error type\n    protected mapRequest(request:Observable<any>, err?:(error:any) => void, isRaw?:boolean):Observable<any>\n    {\n        this.terraLoadingSpinnerService.start();\n\n        return request.map((response:Response) =>\n        {\n            if(response.status === 204)\n            {\n                return response.text();\n            }\n            else if(isRaw)\n            {\n                return response;\n            }\n            else\n            {\n                return response.text() === '' ? {} : response.json();\n            }\n        }).catch((error:any) =>\n        {\n            if(err)\n            {\n                err(error);\n            }\n            else\n            {\n                this.handleException(error);\n            }\n\n            if(error.status === 403 && this.getErrorClass(error) === 'UIHashExpiredException')\n            {\n                let routeToLoginEvent:CustomEvent = new CustomEvent('CustomEvent');\n\n                routeToLoginEvent.initCustomEvent('routeToLogin', true, true, {});\n\n                this.dispatchEvent(routeToLoginEvent);\n            }\n            else if(error.status === 403) // unauthorized\n            {\n                let missingUserPermissionAlertMessage:string = this.getMissingUserPermissionAlertMessage(error);\n\n                if(this.isPlugin)\n                {\n                    this._alert.addAlertForPlugin({\n                        msg:              missingUserPermissionAlertMessage,\n                        type:             'danger',\n                        dismissOnTimeout: 0\n                    });\n                }\n                else\n                {\n                    this._alert.addAlert({\n                        msg:              missingUserPermissionAlertMessage,\n                        type:             'danger',\n                        dismissOnTimeout: 0\n                    });\n                }\n            }\n            // END Very unclean workaround!\n            else if(error.status === 401) // unauthenticated\n            {\n                let loginEvent:CustomEvent = new CustomEvent('login');\n                // Workaround for plugins in Angular (loaded via iFrame)\n                this.dispatchEvent(loginEvent);\n            }\n\n            return Observable.throw(error);\n        }).finally(() => this.terraLoadingSpinnerService.stop());\n    }\n\n    private dispatchEvent(eventToDispatch:Event | CustomEvent):void\n    {\n        if(!isNullOrUndefined(window.parent))\n        {\n            // workaround for plugins in GWT (loaded via iFrame)\n            if(!isNullOrUndefined(window.parent.window.parent))\n            {\n                window.parent.window.parent.window.dispatchEvent(eventToDispatch);\n            }\n            else\n            {\n                window.parent.window.dispatchEvent(eventToDispatch);\n            }\n        }\n        else\n        {\n            window.dispatchEvent(eventToDispatch);\n        }\n    }\n\n    // TODO use a meaningful error type\n    private getErrorMessage(error:any):string\n    {\n        try\n        {\n            let errorMessage:string;\n\n            if(!isNullOrUndefined(error.json().error))\n            {\n                errorMessage = error.json().error.message;\n            }\n\n            return errorMessage;\n        }\n        catch(e)\n        {\n            return null;\n        }\n    }\n\n    // TODO use a meaningful error type\n    private getErrorClass(error:any):string\n    {\n        try\n        {\n            let errorClass:string = error.json().class;\n            return errorClass;\n        }\n        catch(e)\n        {\n            return null;\n        }\n    }\n\n    /**\n     * Workaround to prevent the injection of the TranslationService in every Service, that extends TerraBaseService\n     * @returns {string}\n     */\n    protected getErrorString():string\n    {\n        // get language from localStorage\n        let langInLocalStorage:string = localStorage.getItem('plentymarkets_lang_');\n\n        // translate error string\n        switch(langInLocalStorage)\n        {\n            case 'de':\n                return 'Fehler';\n            case 'en':\n                return 'Error';\n            default:\n                return 'Error';\n        }\n    }\n\n    /**\n     * Handles exceptions that are returned from the server on a failed rest call\n     * @param exception\n     */\n    // TODO rename exception to error and use a meaningful type\n    private handleException(exception:any):void\n    {\n        // parse response object\n        let response:any = JSON.parse(exception._body);\n\n        // check which exception type has been received\n        if(!isNullOrUndefined(response.error) && !isNullOrUndefined(response.message))\n        {\n            if(this.isPlugin)\n            {\n                this._alert.addAlertForPlugin({\n                    msg:              this.getErrorString() + ': ' + response.message,\n                    type:             'danger',\n                    dismissOnTimeout: 0\n                });\n            }\n            else\n            {\n                this._alert.addAlert({\n                    msg:              this.getErrorString() + ': ' + response.message,\n                    type:             'danger',\n                    dismissOnTimeout: 0\n                });\n            }\n        }\n        // return if error code is null\n        else if(isNullOrUndefined(response.error) || isNull(response.error.code))\n        {\n            return;\n        }\n        // default exception type\n        else\n        {\n            // parse exception string\n            let error:Exception = response.error;\n\n            // get error code\n            let errorCode:string = error.code ? ' ' + error.code : '';\n\n            if(this.isPlugin)\n            {\n                this._alert.addAlertForPlugin({\n                    msg:              this.getErrorString() + errorCode + ': ' + error.message,\n                    type:             'danger',\n                    dismissOnTimeout: 0\n                });\n            }\n            else\n            {\n                this._alert.addAlert({\n                    msg:              this.getErrorString() + errorCode + ': ' + error.message,\n                    type:             'danger',\n                    dismissOnTimeout: 0\n                });\n            }\n        }\n    }\n\n    /**\n     * @param {TerraBaseParameterInterface} params\n     * @param {boolean} arrayAsArray - Defines if an array search param should interpret and parsed as an array or not. Default is false.\n     * @returns {URLSearchParams}\n     */\n    protected createUrlSearchParams(params:TerraBaseParameterInterface, arrayAsArray:boolean = false):URLSearchParams\n    {\n        let searchParams:URLSearchParams = new URLSearchParams('', new TerraQueryEncoder());\n\n        if(!isNullOrUndefined(params))\n        {\n            Object.keys(params).forEach((key:string) =>\n            {\n                if(!isNullOrUndefined(params[key]) && params[key] !== '')\n                {\n                    if(arrayAsArray && isArray(params[key]))\n                    {\n                        searchParams.appendAll(this.createArraySearchParams(key, params[key]));\n                    }\n                    else\n                    {\n                        searchParams.set(key, params[key]);\n                    }\n                }\n\n            });\n        }\n\n        return searchParams;\n    }\n\n    private createArraySearchParams(key:string, params:Array<string>):URLSearchParams\n    {\n        let arraySearchParams:URLSearchParams = new URLSearchParams();\n\n        params.forEach((param:string) =>\n        {\n            arraySearchParams.append(key + '[]', param);\n        });\n\n        return arraySearchParams;\n    }\n\n    private getMissingUserPermissionAlertMessage(error:any):string\n    {\n        let missingRights:string = '';\n        let langInLocalStorage:string = localStorage.getItem('plentymarkets_lang_');\n        let isGerman:boolean = langInLocalStorage === 'de';\n\n\n        if(isGerman)\n        {\n            missingRights = 'Fehlende Berechtigungen für: <br/> • ';\n        }\n        else\n        {\n            missingRights = 'Missing permissions for: <br/> • ';\n        }\n\n        let body:{} = JSON.parse(error['_body']);\n\n        if(!isNullOrUndefined(body))\n        {\n            let errorFromBody:{} = body['error'];\n\n            if(!isNullOrUndefined(errorFromBody))\n            {\n                let missingPermissions:{ [key:string]:{ [key:string]:string } } = errorFromBody['missing_permissions'];\n\n                let permissionTranslations:Array<{ [key:string]:string }> = [];\n\n                Object.keys(missingPermissions).forEach((key:string) =>\n                {\n                    if(missingPermissions.hasOwnProperty(key))\n                    {\n                        permissionTranslations.push(missingPermissions[key]);\n                    }\n                });\n\n                let english:Array<string> = [];\n                let german:Array<string> = [];\n\n                permissionTranslations.forEach((translations:{ [key:string]:string }) =>\n                {\n                    Object.keys(translations).forEach((key:string) =>\n                    {\n                        switch(key)\n                        {\n                            case 'de':\n                                german.push(translations[key]);\n                                break;\n                            case 'en':\n                                english.push(translations[key]);\n                                break;\n                        }\n                    });\n                });\n\n                let concatedPermissions:string;\n\n                if(isGerman)\n                {\n                    concatedPermissions = german.reverse().join('<br/> • ');\n                }\n                else\n                {\n                    concatedPermissions = english.reverse().join('<br/> • ');\n                }\n\n                missingRights += concatedPermissions;\n            }\n        }\n\n\n        return missingRights;\n    }\n\n    // TODO remove generic if the BaseService get a generic itself\n    protected handleLocalDataModelGetList(getRequest$:Observable<Response>, params?:TerraBaseParameterInterface):Observable<Array<any>>\n    {\n        if(Object.keys(this.dataModel).length > 0 && this.hasAllParamsLoaded(params))\n        {\n            return of(Object.values(this.dataModel));\n        }\n\n        this.setAuthorization();\n\n        return this.mapRequest(getRequest$).pipe(\n            tap((dataList:Array<any>) =>\n                dataList.forEach((data:any) =>\n                {\n                    this.dataModel[data.id] = Object.assign(data, this.dataModel[data.id]);\n                })\n            )\n        );\n    }\n\n    private hasAllParamsLoaded(params:TerraBaseParameterInterface):boolean\n    {\n        if(!isNullOrUndefined(params) && !isNullOrUndefined(params['with']))\n        {\n            return Object.values(this.dataModel).every((value:any) =>\n            {\n                return params['with'].every((param:string) => value.hasOwnProperty(param));\n            });\n        }\n        else\n        {\n            return true;\n        }\n    }\n\n    // TODO remove generic if the BaseService get a generic itself\n    protected handleLocalDataModelGet(getRequest$:Observable<Response>, dataId:number):Observable<any>\n    {\n        if(!isNullOrUndefined(this.dataModel[dataId]))\n        {\n            return Observable.of(this.dataModel[dataId]);\n        }\n\n        this.setAuthorization();\n\n        return this.mapRequest(getRequest$).pipe(\n            tap((data:any) => this.dataModel[dataId] = data)\n        );\n    }\n\n    // TODO remove generic if the BaseService get a generic itself\n    protected handleLocalDataModelPost(postRequest$:Observable<Response>, dataId:number):Observable<any>\n    {\n        this.setAuthorization();\n\n        return this.mapRequest(postRequest$).pipe(\n            tap((data:any) =>\n            {\n                if(isNullOrUndefined(this.dataModel[dataId]))\n                {\n                    this.dataModel[dataId] = [];\n                }\n                this.dataModel[dataId].push(data);\n            })\n        );\n    }\n\n    // TODO remove generic if the BaseService get a generic itself\n    protected handleLocalDataModelPut(putRequest$:Observable<Response>, dataId:number):Observable<any>\n    {\n        this.setAuthorization();\n\n        return this.mapRequest(putRequest$).pipe(\n            tap((data:any) =>\n            {\n                let dataToUpdate:any;\n\n                if(!isNullOrUndefined(this.dataModel[dataId]))\n                {\n                    dataToUpdate = this.dataModel[dataId].find((dataItem:any) => dataItem.id === data.id);\n                }\n\n                if(!isNullOrUndefined(dataToUpdate))\n                {\n                    dataToUpdate = data;\n                }\n                else\n                {\n                    if(isNullOrUndefined(this.dataModel[dataId]))\n                    {\n                        this.dataModel[dataId] = [];\n                    }\n                    this.dataModel[dataId].push(data);\n                }\n            })\n        );\n    }\n\n    // TODO remove generic if the BaseService get a generic itself\n    protected handleLocalDataModelDelete(deleteRequest$:Observable<Response>, dataId:number):Observable<void>\n    {\n        this.setAuthorization();\n\n        return this.mapRequest(deleteRequest$).pipe(\n            tap(() =>\n            {\n                Object.keys(this.dataModel).forEach((comparisonId:string) =>\n                {\n                    let dataIndex:number = this.dataModel[comparisonId].findIndex((data:any) => data.id === dataId);\n                    if(dataIndex >= 0)\n                    {\n                        this.dataModel[comparisonId].splice(dataIndex, 1);\n                    }\n                });\n            })\n        );\n    }\n}\n"]}