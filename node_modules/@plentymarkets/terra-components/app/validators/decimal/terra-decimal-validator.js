"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("util");
/**
 * @author mfrank
 */
var separator = '.';
var maxSplittedParts = 2;
var beforeSeparator = 0;
var afterSeparator = 1;
function terraDecimalValidator(maxLength, decimals) {
    return function (control) {
        var value = control.value;
        if (!util_1.isNullOrUndefined(value)) {
            var splittedValue = value.toString().split(separator);
            var invalidSeparatorCount = splittedValue.length > maxSplittedParts;
            var invalidMaxLengthBeforeSeparator = splittedValue[beforeSeparator].length > maxLength - decimals;
            var invalidMaxLengthAfterSeparator = util_1.isNullOrUndefined(splittedValue[afterSeparator]) ?
                false :
                splittedValue[afterSeparator].length > decimals;
            if (invalidSeparatorCount) {
                return { 'terraDecimal': 'Invalid amount of separators' };
            }
            if (invalidMaxLengthBeforeSeparator) {
                return { 'terraDecimal': 'Invalid max length before separator' };
            }
            if (invalidMaxLengthAfterSeparator) {
                return { 'terraDecimal': 'Invalid max length after separator' };
            }
        }
        return null;
    };
}
exports.terraDecimalValidator = terraDecimalValidator;

//# sourceMappingURL=terra-decimal-validator.js.map
