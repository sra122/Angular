{"version":3,"sources":["app/components/forms/form/form-entry-list/terra-form-entry-list.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAOuB;AAEvB,6BAIc;AACd,wEAAgE;AAQhE;IALA;QAyDW,wBAAmB,GAA8B,EAAE,CAAC;QAGpD,oBAAe,GAAW,KAAK,CAAC;QAGhC,2BAAsB,GAAqB,IAAI,mBAAY,EAAO,CAAC;QAKlE,UAAK,GAAoC,EAAE,CAAC;QAE5C,eAAU,GAAyB,EAAE,CAAC;IAuIlD,CAAC;oCAxMY,2BAA2B;IAWpC,sBAAW,uDAAc;aAAzB,UAA0B,SAAoB;YAD9C,iBAiCC;YA9BG,IAAG,wBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,cAAO,CAAC,SAAS,CAAC,EACtD;gBACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,UAAU,CAAC;oBAEP,KAAI,CAAC,SAAS,EAAE,CAAC;gBACrB,CAAC,CAAC,CAAC;aACN;iBAED;gBACI,IAAG,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EACjC;oBACI,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,UAAC,KAAS;wBAEjC,OAAO;4BACH,GAAG,EAAI,6BAA2B,CAAC,SAAS,EAAE;4BAC9C,KAAK,EAAE,KAAK;yBACf,CAAC;oBACN,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,KAA+B;wBAE7D,OAAO,KAAI,CAAC,UAAU,CAAC,gBAAgB,CACnC,KAAI,CAAC,oBAAoB,CAAE,KAAK,CAAC,KAAK,CAAE,CAC3C,CAAC;oBACN,CAAC,CAAC,CAAC;iBACN;aACJ;YACD,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;;;OAAA;IAwBM,8CAAQ,GAAf;QAEI,IAAG,eAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,EAChC;YACI,IAAI,KAAK,GAAmB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACzE,IAAG,KAAK,KAAK,IAAI,EACjB;gBACI,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBAClC,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;aACrC;iBAED;gBACI,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAG,MAAM;gBAC1B,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAG,MAAM;aAC7B;YACD,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;IACL,CAAC;IAED,sBAAc,sDAAa;aAA3B;YAEI,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QAC/D,CAAC;;;OAAA;IAES,gDAAU,GAApB;QAEI,IAAG,IAAI,CAAC,aAAa,EACrB;YACI,IAAI,YAAY,GAAO,wBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC;YACrH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACZ,GAAG,EAAI,6BAA2B,CAAC,SAAS,EAAE;gBAC9C,KAAK,EAAE,YAAY;aACtB,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAChB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAC5B,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAC1C,CACJ,CAAC;YACF,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;IACL,CAAC;IAED,sBAAc,yDAAgB;aAA9B;YAEI,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;QAC3D,CAAC;;;OAAA;IAES,mDAAa,GAAvB,UAAwB,GAAU;QAE9B,IAAI,KAAK,GAAU,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,KAA+B,IAAK,OAAA,KAAK,CAAC,GAAG,KAAK,GAAG,EAAjB,CAAiB,CAAC,CAAC;QAChG,IAAG,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EACzC;YACI,OAAO;SACV;QAED,IAAG,IAAI,CAAC,gBAAgB,EACxB;YACI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;IACL,CAAC;IAES,+CAAS,GAAnB;QAEI,IAAI,YAAY,GAAO,CAAC,wBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC;QACzG,OAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EACtD;YACI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACZ,GAAG,EAAI,6BAA2B,CAAC,SAAS,EAAE;gBAC9C,KAAK,EAAE,YAAY;aACtB,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAChB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC,CAC5E,CAAC;SACL;QACD,OAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EACtD;YACI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;SACpB;IACL,CAAC;IAES,2DAAqB,GAA/B,UAAgC,GAAU,EAAE,KAAS;QAEjD,IAAI,GAAG,GAAU,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,CAA2B,IAAK,OAAA,CAAC,CAAC,GAAG,KAAK,GAAG,EAAb,CAAa,CAAC,CAAC;QACtF,IAAG,GAAG,IAAI,CAAC,EACX;YACI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;IACL,CAAC;IAES,+CAAS,GAAnB,UAAoB,KAAY,EAAE,IAA8B;QAE5D,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAEO,+CAAS,GAAjB;QAEI,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAC5B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,KAA+B,IAAK,OAAA,KAAK,CAAC,KAAK,EAAX,CAAW,CAAC,CACnE,CAAC;IACN,CAAC;IAEO,mDAAa,GAArB,UAAsB,MAAiB;QAEnC,IAAG,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EACtC;YACI,OAAO,KAAK,CAAC;SAChB;QAED,IAAI,WAAW,GAAW,IAAI,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,KAA+B,EAAE,KAAY;YAE7D,IAAG,KAAK,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,EAChC;gBACI,WAAW,GAAG,KAAK,CAAC;aACvB;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACvB,CAAC;IAEO,0DAAoB,GAA5B,UAA6B,KAAS;QAElC,IAAI,OAAO,GAAU,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAClD,IAAI,SAAS,GAAO,EAAE,CAAC;QACvB,SAAS,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;QAE3B,OAAO,SAAS,CAAC;IACrB,CAAC;IApMc,qCAAS,GAAU,CAAC,CAAC;IAGpC;QADC,YAAK,EAAE;;uEACsC;IAG9C;QADC,YAAK,EAAE;;0EACwB;IAGhC;QADC,YAAK,EAAE;kCAC4B,KAAK;yCAAL,KAAK;qEAgCxC;IAGD;QADC,YAAK,EAAE;;uEAC+B;IAGvC;QADC,YAAK,EAAE;kCACU,sCAAc;mEAAC;IAGjC;QADC,YAAK,EAAE;;4EACmD;IAG3D;QADC,YAAK,EAAE;;wEAC+B;IAGvC;QADC,aAAM,EAAE;kCACqB,mBAAY;+EAAgC;IA1DjE,2BAA2B;QALvC,gBAAS,CAAC;YACP,QAAQ,EAAE,uBAAuB;YACjC,QAAQ,EAAE,OAAO,CAAC,wCAAwC,CAAC;YAC3D,MAAM,EAAI,CAAC,OAAO,CAAC,wCAAwC,CAAC,CAAC;SAChE,CAAC;OACW,2BAA2B,CAwMvC;IAAD,kCAAC;;CAxMD,AAwMC,IAAA;AAxMY,kEAA2B","file":"terra-form-entry-list.component.js","sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type\n} from '@angular/core';\nimport { TerraFormFieldInterface } from '../model/terra-form-field.interface';\nimport {\n    isArray,\n    isNullOrUndefined,\n    isString\n} from 'util';\nimport { TerraFormScope } from '../model/terra-form-scope.data';\nimport { TerraKeyValuePairInterface } from '../../../../models/terra-key-value-pair.interface';\n\n@Component({\n    selector: 'terra-form-entry-list',\n    template: require('./terra-form-entry-list.component.html'),\n    styles:   [require('./terra-form-entry-list.component.scss')]\n})\nexport class TerraFormEntryListComponent implements OnInit\n{\n    private static itemCount:number = 0;\n\n    @Input()\n    public inputFormField:TerraFormFieldInterface;\n\n    @Input()\n    public inputFormFieldKey:string;\n\n    @Input()\n    public set inputFormValue(valueList:Array<any>)\n    {\n        if(isNullOrUndefined(valueList) || !isArray(valueList))\n        {\n            this.value = [];\n            this.itemScopes = [];\n            setTimeout(() =>\n            {\n                this.emitValue();\n            });\n        }\n        else\n        {\n            if(!this.compareValues(valueList))\n            {\n                this.value = valueList.map((value:any) =>\n                {\n                    return {\n                        key:   TerraFormEntryListComponent.itemCount++,\n                        value: value\n                    };\n                });\n\n                this.itemScopes = this.value.map((entry:{ key:number, value:any }) =>\n                {\n                    return this.inputScope.createChildScope(\n                        this.createChildScopeData( entry.value )\n                    );\n                });\n            }\n        }\n        this.fillRange();\n    }\n\n    @Input()\n    public inputListRange:boolean | string;\n\n    @Input()\n    public inputScope:TerraFormScope;\n\n    @Input()\n    public inputControlTypeMap:{ [key:string]:Type<any> } = {};\n\n    @Input()\n    public inputIsDisabled:boolean = false;\n\n    @Output()\n    public outputFormValueChanged:EventEmitter<any> = new EventEmitter<any>();\n\n    protected min:number;\n    protected max:number;\n\n    private value:Array<{ key:number, value:any }> = [];\n\n    private itemScopes:Array<TerraFormScope> = [];\n\n    public ngOnInit():void\n    {\n        if(isString(this.inputListRange))\n        {\n            let match:RegExpExecArray = /^\\[(\\d*),(\\d*)]$/.exec(this.inputListRange);\n            if(match !== null)\n            {\n                this.min = parseInt(match[1], 10);\n                this.max = parseInt(match[2], 10);\n            }\n            else\n            {\n                this.min = 1 / 0;   // NaN\n                this.max = 1 / 0;   // NaN\n            }\n            this.fillRange();\n        }\n    }\n\n    protected get canAddElement():boolean\n    {\n        return isNaN(this.max) || this.value.length - 1 < this.max;\n    }\n\n    protected addElement():void\n    {\n        if(this.canAddElement)\n        {\n            let defaultValue:any = isNullOrUndefined(this.inputFormField.defaultValue) ? null : this.inputFormField.defaultValue;\n            this.value.push({\n                key:   TerraFormEntryListComponent.itemCount++,\n                value: defaultValue\n            });\n            this.itemScopes.push(\n                this.inputScope.createChildScope(\n                    this.createChildScopeData(defaultValue)\n                )\n            );\n            this.emitValue();\n        }\n    }\n\n    protected get canRemoveElement():boolean\n    {\n        return isNaN(this.min) || this.value.length > this.min;\n    }\n\n    protected removeElement(key:number):void\n    {\n        let index:number = this.value.findIndex((entry:{ key:number, value:any }) => entry.key === key);\n        if(index < 0 || index > this.value.length)\n        {\n            return;\n        }\n\n        if(this.canRemoveElement)\n        {\n            this.value.splice(index, 1);\n            this.itemScopes.splice(index, 1);\n            this.emitValue();\n        }\n    }\n\n    protected fillRange():void\n    {\n        let defaultValue:any = !isNullOrUndefined(this.inputFormField) ? this.inputFormField.defaultValue : null;\n        while(!isNaN(this.min) && this.min > this.value.length)\n        {\n            this.value.push({\n                key:   TerraFormEntryListComponent.itemCount++,\n                value: defaultValue\n            });\n            this.itemScopes.push(\n                this.inputScope.createChildScope(this.createChildScopeData(defaultValue))\n            );\n        }\n        while(!isNaN(this.max) && this.max < this.value.length)\n        {\n            this.value.pop();\n        }\n    }\n\n    protected onElementValueChanged(key:number, value:any):void\n    {\n        let idx:number = this.value.findIndex((e:{ key:number, value:any }) => e.key === key);\n        if(idx >= 0)\n        {\n            this.value[idx].value = value;\n            this.itemScopes[idx].data = this.createChildScopeData(value);\n            this.emitValue();\n        }\n    }\n\n    protected trackByFn(index:number, item:{ key:number, value:any }):number\n    {\n        return item.key;\n    }\n\n    private emitValue():void\n    {\n        this.outputFormValueChanged.next(\n            this.value.map((entry:{ key:number, value:any }) => entry.value)\n        );\n    }\n\n    private compareValues(values:Array<any>):boolean\n    {\n        if(values.length !== this.value.length)\n        {\n            return false;\n        }\n\n        let valueEquals:boolean = true;\n        this.value.forEach((entry:{ key:number, value:any }, index:number) =>\n        {\n            if(entry.value !== values[index])\n            {\n                valueEquals = false;\n            }\n        });\n\n        return valueEquals;\n    }\n\n    private createChildScopeData(value:any):any\n    {\n        let loopKey:string = '$' + this.inputFormFieldKey;\n        let childData:any = {};\n        childData[loopKey] = value;\n\n        return childData;\n    }\n\n}\n"]}