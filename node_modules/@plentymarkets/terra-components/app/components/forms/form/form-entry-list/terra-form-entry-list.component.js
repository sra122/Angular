"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var util_1 = require("util");
var terra_form_scope_data_1 = require("../model/terra-form-scope.data");
var TerraFormEntryListComponent = /** @class */ (function () {
    function TerraFormEntryListComponent() {
        this.inputControlTypeMap = {};
        this.inputIsDisabled = false;
        this.outputFormValueChanged = new core_1.EventEmitter();
        this.value = [];
        this.itemScopes = [];
    }
    TerraFormEntryListComponent_1 = TerraFormEntryListComponent;
    Object.defineProperty(TerraFormEntryListComponent.prototype, "inputFormValue", {
        set: function (valueList) {
            var _this = this;
            if (util_1.isNullOrUndefined(valueList) || !util_1.isArray(valueList)) {
                this.value = [];
                this.itemScopes = [];
                setTimeout(function () {
                    _this.emitValue();
                });
            }
            else {
                if (!this.compareValues(valueList)) {
                    this.value = valueList.map(function (value) {
                        return {
                            key: TerraFormEntryListComponent_1.itemCount++,
                            value: value
                        };
                    });
                    this.itemScopes = this.value.map(function (entry) {
                        return _this.inputScope.createChildScope(_this.createChildScopeData(entry.value));
                    });
                }
            }
            this.fillRange();
        },
        enumerable: true,
        configurable: true
    });
    TerraFormEntryListComponent.prototype.ngOnInit = function () {
        if (util_1.isString(this.inputListRange)) {
            var match = /^\[(\d*),(\d*)]$/.exec(this.inputListRange);
            if (match !== null) {
                this.min = parseInt(match[1], 10);
                this.max = parseInt(match[2], 10);
            }
            else {
                this.min = 1 / 0; // NaN
                this.max = 1 / 0; // NaN
            }
            this.fillRange();
        }
    };
    Object.defineProperty(TerraFormEntryListComponent.prototype, "canAddElement", {
        get: function () {
            return isNaN(this.max) || this.value.length - 1 < this.max;
        },
        enumerable: true,
        configurable: true
    });
    TerraFormEntryListComponent.prototype.addElement = function () {
        if (this.canAddElement) {
            var defaultValue = util_1.isNullOrUndefined(this.inputFormField.defaultValue) ? null : this.inputFormField.defaultValue;
            this.value.push({
                key: TerraFormEntryListComponent_1.itemCount++,
                value: defaultValue
            });
            this.itemScopes.push(this.inputScope.createChildScope(this.createChildScopeData(defaultValue)));
            this.emitValue();
        }
    };
    Object.defineProperty(TerraFormEntryListComponent.prototype, "canRemoveElement", {
        get: function () {
            return isNaN(this.min) || this.value.length > this.min;
        },
        enumerable: true,
        configurable: true
    });
    TerraFormEntryListComponent.prototype.removeElement = function (key) {
        var index = this.value.findIndex(function (entry) { return entry.key === key; });
        if (index < 0 || index > this.value.length) {
            return;
        }
        if (this.canRemoveElement) {
            this.value.splice(index, 1);
            this.itemScopes.splice(index, 1);
            this.emitValue();
        }
    };
    TerraFormEntryListComponent.prototype.fillRange = function () {
        var defaultValue = !util_1.isNullOrUndefined(this.inputFormField) ? this.inputFormField.defaultValue : null;
        while (!isNaN(this.min) && this.min > this.value.length) {
            this.value.push({
                key: TerraFormEntryListComponent_1.itemCount++,
                value: defaultValue
            });
            this.itemScopes.push(this.inputScope.createChildScope(this.createChildScopeData(defaultValue)));
        }
        while (!isNaN(this.max) && this.max < this.value.length) {
            this.value.pop();
        }
    };
    TerraFormEntryListComponent.prototype.onElementValueChanged = function (key, value) {
        var idx = this.value.findIndex(function (e) { return e.key === key; });
        if (idx >= 0) {
            this.value[idx].value = value;
            this.itemScopes[idx].data = this.createChildScopeData(value);
            this.emitValue();
        }
    };
    TerraFormEntryListComponent.prototype.trackByFn = function (index, item) {
        return item.key;
    };
    TerraFormEntryListComponent.prototype.emitValue = function () {
        this.outputFormValueChanged.next(this.value.map(function (entry) { return entry.value; }));
    };
    TerraFormEntryListComponent.prototype.compareValues = function (values) {
        if (values.length !== this.value.length) {
            return false;
        }
        var valueEquals = true;
        this.value.forEach(function (entry, index) {
            if (entry.value !== values[index]) {
                valueEquals = false;
            }
        });
        return valueEquals;
    };
    TerraFormEntryListComponent.prototype.createChildScopeData = function (value) {
        var loopKey = '$' + this.inputFormFieldKey;
        var childData = {};
        childData[loopKey] = value;
        return childData;
    };
    TerraFormEntryListComponent.itemCount = 0;
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TerraFormEntryListComponent.prototype, "inputFormField", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraFormEntryListComponent.prototype, "inputFormFieldKey", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], TerraFormEntryListComponent.prototype, "inputFormValue", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TerraFormEntryListComponent.prototype, "inputListRange", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", terra_form_scope_data_1.TerraFormScope)
    ], TerraFormEntryListComponent.prototype, "inputScope", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TerraFormEntryListComponent.prototype, "inputControlTypeMap", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraFormEntryListComponent.prototype, "inputIsDisabled", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], TerraFormEntryListComponent.prototype, "outputFormValueChanged", void 0);
    TerraFormEntryListComponent = TerraFormEntryListComponent_1 = __decorate([
        core_1.Component({
            selector: 'terra-form-entry-list',
            template: require('./terra-form-entry-list.component.html'),
            styles: [require('./terra-form-entry-list.component.scss')]
        })
    ], TerraFormEntryListComponent);
    return TerraFormEntryListComponent;
    var TerraFormEntryListComponent_1;
}());
exports.TerraFormEntryListComponent = TerraFormEntryListComponent;

//# sourceMappingURL=terra-form-entry-list.component.js.map
