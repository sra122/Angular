"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
var util_1 = require("util");
var terra_form_scope_data_1 = require("./model/terra-form-scope.data");
var terra_form_type_map_enum_1 = require("./model/terra-form-type-map.enum");
var terra_form_field_helper_1 = require("./helper/terra-form-field.helper");
var TerraFormComponent = /** @class */ (function () {
    function TerraFormComponent() {
        this.inputIsDisabled = false;
        this.scope = new terra_form_scope_data_1.TerraFormScope();
        this.values = {};
        this.onChangeCallback = function (_) { return undefined; };
        this.onTouchedCallback = function () { return undefined; };
    }
    TerraFormComponent_1 = TerraFormComponent;
    Object.defineProperty(TerraFormComponent.prototype, "inputFormFields", {
        get: function () {
            if (util_1.isNullOrUndefined(this.formFields)) {
                this.formFields = terra_form_field_helper_1.TerraFormFieldHelper.extractFormFields(this.values);
            }
            return this.formFields || {};
        },
        set: function (fields) {
            this.formFields = terra_form_field_helper_1.TerraFormFieldHelper.detectLegacyFormFields(fields);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TerraFormComponent.prototype, "inputControlTypeMap", {
        get: function () {
            if (util_1.isNullOrUndefined(this.controlTypeMap)) {
                return new terra_form_type_map_enum_1.TerraFormTypeMap();
            }
            return this.controlTypeMap;
        },
        set: function (map) {
            this.controlTypeMap = map;
        },
        enumerable: true,
        configurable: true
    });
    TerraFormComponent.prototype.parseFormField = function (field) {
        var _this = this;
        if (!util_1.isNullOrUndefined(field.children)) {
            var result_1 = {};
            Object.keys(field.children)
                .forEach(function (fKey) {
                result_1[fKey] = _this.parseFormField(field.children[fKey]);
            });
            return result_1;
        }
        return field.defaultValue || null;
    };
    TerraFormComponent.prototype.writeValue = function (values) {
        var _this = this;
        if (util_1.isNullOrUndefined(values)) {
            var defaultValues_1 = {};
            Object.keys(this.inputFormFields)
                .forEach(function (key) {
                defaultValues_1[key] = _this.parseFormField(_this.inputFormFields[key]);
            });
            this.values = defaultValues_1;
            this.scope.data = defaultValues_1;
        }
        else if (this.scope.data !== values) {
            this.values = values;
            this.scope.data = values;
        }
    };
    TerraFormComponent.prototype.registerOnChange = function (callback) {
        this.onChangeCallback = callback;
    };
    TerraFormComponent.prototype.registerOnTouched = function (callback) {
        this.onTouchedCallback = callback;
    };
    TerraFormComponent.prototype.onValueChanged = function (key, value) {
        this.values[key] = value;
        this.scope.data[key] = value;
        this.scope.onDataChanged.next(this.scope.data);
        this.onChangeCallback(this.values);
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], TerraFormComponent.prototype, "inputFormFields", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], TerraFormComponent.prototype, "inputControlTypeMap", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraFormComponent.prototype, "inputIsDisabled", void 0);
    TerraFormComponent = TerraFormComponent_1 = __decorate([
        core_1.Component({
            selector: 'terra-form',
            template: require('./terra-form.component.html'),
            styles: [require('./terra-form.component.scss')],
            providers: [
                {
                    provide: forms_1.NG_VALUE_ACCESSOR,
                    useExisting: core_1.forwardRef(function () { return TerraFormComponent_1; }),
                    multi: true
                }
            ]
        })
    ], TerraFormComponent);
    return TerraFormComponent;
    var TerraFormComponent_1;
}());
exports.TerraFormComponent = TerraFormComponent;

//# sourceMappingURL=terra-form.component.js.map
