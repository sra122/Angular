{"version":3,"sources":["app/components/forms/form/model/terra-form-scope.data.ts"],"names":[],"mappings":";;AAAA,6BAAyC;AACzC,wDAAuD;AAGvD;IAeI,wBAAoB,KAAc,EAAU,MAAsB;QAA9C,sBAAA,EAAA,UAAc;QAAd,UAAK,GAAL,KAAK,CAAS;QAAU,WAAM,GAAN,MAAM,CAAgB;QAb3D,kBAAa,GAAwB,IAAI,iCAAe,CAAM,EAAE,CAAC,CAAC;IAezE,CAAC;IAbD,sBAAW,gCAAI;aAAf;YAEI,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;aAED,UAAgB,KAAS;YAErB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC;;;OANA;IAYM,iCAAQ,GAAf,UAAmB,UAAiB;QAEhC,IACA;YACI,IAAG,wBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,EAChC;gBACI,OAAO,CAAC,IAAI,QAAQ,CAAC,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC7D;iBAED;gBACI,IAAI,MAAI,GAA+B,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAChE,IAAI,IAAI,GAAiB,MAAM,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC;gBAC3C,IAAI,MAAM,GAAc,IAAI,CAAC,GAAG,CAAC,UAAC,GAAU,IAAK,OAAA,MAAI,CAAC,GAAG,CAAC,IAAI,IAAI,EAAjB,CAAiB,CAAC,CAAC;gBAEpE,OAAO,MAAK,QAAQ,YAAR,QAAQ,kBAAI,IAAI,GAAE,SAAS,GAAG,UAAU,OAAE,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;aAC9E;SACJ;QACD,OAAM,CAAC,EACP;YACI,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAEM,yCAAgB,GAAvB,UAAwB,IAAa;QAAb,qBAAA,EAAA,SAAa;QAEjC,IAAI,KAAK,GAAkB,IAAI,cAAc,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;QAC5D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,KAAS;YAEnC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACjB,CAAC;IAES,0CAAiB,GAA3B;QAAA,iBAeC;QAbG,IAAI,MAAM,GAA+B,EAAE,CAAC;QAE5C,IAAK,CAAC,wBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,EACpC;YACI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC;SAC5C;QAED,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC,OAAO,CAAC,UAAC,GAAU;YAEzC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IAClB,CAAC;IACL,qBAAC;AAAD,CApEA,AAoEC,IAAA;AApEY,wCAAc","file":"terra-form-scope.data.js","sourcesContent":["import { isNullOrUndefined } from 'util';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { TerraKeyValueInterface } from '../../../../../';\n\nexport class TerraFormScope\n{\n    public onDataChanged:BehaviorSubject<any> = new BehaviorSubject<any>({});\n\n    public get data():any\n    {\n        return this._data;\n    }\n\n    public set data(value:any)\n    {\n        this._data = value;\n        this.onDataChanged.next(value);\n    }\n\n    constructor(private _data:any = {}, private parent?:TerraFormScope)\n    {\n    }\n\n    public evaluate<T>(expression:string):T\n    {\n        try\n        {\n            if(isNullOrUndefined(this._data))\n            {\n                return (new Function('return ' + expression)).apply(null);\n            }\n            else\n            {\n                let data:TerraKeyValueInterface<any> = this.getEvaluationData();\n                let keys:Array<string> = Object.keys(data);\n                let values:Array<any> = keys.map((key:string) => data[key] || null);\n\n                return (new Function(...keys, 'return ' + expression)).apply(null, values);\n            }\n        }\n        catch(e)\n        {\n            return null;\n        }\n    }\n\n    public createChildScope(data:any = {}):TerraFormScope\n    {\n        let scope:TerraFormScope = new TerraFormScope( data, this );\n        this.onDataChanged.subscribe((value:any) =>\n        {\n            scope.onDataChanged.next(scope.data);\n        });\n        return scope;\n    }\n\n    protected getEvaluationData():TerraKeyValueInterface<any>\n    {\n        let result:TerraKeyValueInterface<any> = {};\n\n        if ( !isNullOrUndefined(this.parent) )\n        {\n            result = this.parent.getEvaluationData();\n        }\n\n        Object.keys( this._data ).forEach((key:string) =>\n        {\n            result[key] = this._data[key] || null;\n        });\n\n        return result;\n    }\n}\n"]}