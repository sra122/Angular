import 'reflect-metadata';
import { TerraFormFieldBase, TerraFormFieldInterface } from '../../../../../';
export declare class TerraFormFieldHelper {
    private static readonly CONTROL_TYPE_MAP;
    static extractFormFields(formModel: any): {
        [key: string]: TerraFormFieldInterface;
    };
    static injectOption(formFields: {
        [key: string]: TerraFormFieldInterface;
    }, type: string, optionKey: string, optionValue: any): {
        [key: string]: TerraFormFieldInterface;
    };
    static isLegacyFormFields(formFields: {
        [key: string]: any;
    } | Array<TerraFormFieldBase<any>>): boolean;
    static detectLegacyFormFields(formFields: {
        [key: string]: any;
    } | Array<TerraFormFieldBase<any>>): {
        [key: string]: TerraFormFieldInterface;
    };
    private static transformLegacyFormField(field);
    private static transformCodeEditorField(result, field);
    private static transformDoubleField(result, field);
    private static transformFileField(result, field);
    private static transformCheckboxGroupField(result, field);
    private static transformTextField(result, field);
    private static transformSelectField(result, field);
}
