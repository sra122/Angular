{"version":3,"sources":["app/components/forms/multi-check-box/terra-multi-check-box.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAMuB;AACvB,wCAGwB;AACxB,6CAAkD;AAClD,6BAAyC;AACzC,iFAA8E;AAe9E;IAuBI,qCAAmB,WAA8B;QAA9B,gBAAW,GAAX,WAAW,CAAmB;QAXvC,cAAS,GAA2C,EAAE,CAAC;QASzD,eAAU,GAAU,oBAAoB,CAAC;QAgFzC,sBAAiB,GAAc,cAAW,OAAA,SAAS,EAAT,CAAS,CAAC;QAEpD,qBAAgB,GAAmB,UAAC,CAAK,IAAU,OAAA,SAAS,EAAT,CAAS,CAAC;IA9ErE,CAAC;oCAzBQ,2BAA2B;IA2B7B,gDAAU,GAAjB,UAAkB,SAAiD;QAE/D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEhC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAEM,sDAAgB,GAAvB,UAAwB,EAAM;QAE1B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAEM,uDAAiB,GAAxB,UAAyB,EAAM;QAE3B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAChC,CAAC;IAEM,8CAAQ,GAAf;QAAA,iBAcC;QAZG,IAAG,CAAC,IAAI,CAAC,SAAS,EAClB;YACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,CAAC;YAE5E,wCAAwC;YACxC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC;gBAE5C,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,CAAC;YAChF,CAAC,CAAC,CAAC;SACN;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,CAAC;IAES,4DAAsB,GAAhC,UAAiC,SAAiB;QAE9C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,KAAsC;YAE1D,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAES,8DAAwB,GAAlC;QAEI,IAAG,CAAC,wBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,EACrC;YACI,IAAI,cAAc,GAA2C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAC,KAAsC;gBAEtH,OAAO,KAAK,CAAC,QAAQ,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;SACzD;IACL,CAAC;IAEO,+DAAyB,GAAjC,UAAkC,cAAqB;QAEnD,IAAG,cAAc,KAAK,CAAC,EACvB;YACI,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;SACpC;aACI,IAAG,cAAc,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,EAChD;YACI,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACnC;aAED;YACI,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;YACrC,IAAI,CAAC,uBAAuB,CAAC,eAAe,GAAG,IAAI,CAAC;SACvD;IACL,CAAC;IA9FQ;QAAR,YAAK,EAAE;;wEAAgC;IAK/B;QAAR,YAAK,EAAE;;kEAAyB;IAKjC;QADC,gBAAS,CAAC,yBAAyB,CAAC;kCACH,iDAAsB;gFAAC;IAfhD,2BAA2B;QAZvC,gBAAS,CAAC;YACP,QAAQ,EAAE,uBAAuB;YACjC,MAAM,EAAI,CAAC,OAAO,CAAC,wCAAwC,CAAC,CAAC;YAC7D,QAAQ,EAAE,OAAO,CAAC,wCAAwC,CAAC;YAC3D,SAAS,EAAE;gBACP;oBACI,OAAO,EAAM,yBAAiB;oBAC9B,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,6BAA2B,EAA3B,CAA2B,CAAC;oBAC1D,KAAK,EAAQ,IAAI;iBACpB;aACJ;SACJ,CAAC;yCAwBiC,iCAAkB;OAvBxC,2BAA2B,CAwGvC;IAAD,kCAAC;;CAxGD,AAwGC,IAAA;AAxGY,kEAA2B","file":"terra-multi-check-box.component.js","sourcesContent":["import {\n    Component,\n    forwardRef,\n    Input,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { TranslationService } from 'angular-l10n';\nimport { isNullOrUndefined } from 'util';\nimport { TerraCheckboxComponent } from '../checkbox/terra-checkbox.component';\nimport { TerraMultiCheckBoxValueInterface } from './data/terra-multi-check-box-value.interface';\n\n@Component({\n    selector: 'terra-multi-check-box',\n    styles:   [require('./terra-multi-check-box.component.scss')],\n    template: require('./terra-multi-check-box.component.html'),\n    providers: [\n        {\n            provide:     NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TerraMultiCheckBoxComponent),\n            multi:       true\n        }\n    ]\n})\nexport class TerraMultiCheckBoxComponent implements OnInit, ControlValueAccessor\n{\n    /**\n     * @description If true, the multi check box will be disabled. Default false.\n     * */\n    @Input() public inputIsDisabled:boolean;\n\n    /**\n     * @description If true, the multi check box will be disabled. Default false.\n     * */\n    @Input() public inputName:string;\n\n    protected valueList:Array<TerraMultiCheckBoxValueInterface> = [];\n\n    @ViewChild('viewChildHeaderCheckbox')\n    protected viewChildHeaderCheckbox:TerraCheckboxComponent;\n\n    protected headerCheckboxValue:boolean;\n\n    private isInit:boolean;\n\n    private langPrefix:string = 'terraMultiCheckBox';\n\n    constructor(public translation:TranslationService)\n    {\n    }\n\n    public writeValue(valueList:Array<TerraMultiCheckBoxValueInterface>):void\n    {\n        this.valueList = valueList;\n\n        this.checkHeaderCheckboxState();\n\n        this.onTouchedCallback();\n        this.onChangeCallback(this.valueList);\n    }\n\n    public registerOnChange(fn:any):void\n    {\n        this.onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn:any):void\n    {\n        this.onTouchedCallback = fn;\n    }\n\n    public ngOnInit():void\n    {\n        if(!this.inputName)\n        {\n            this.inputName = this.translation.translate(this.langPrefix + '.selectAll');\n\n            // this is necessary for language switch\n            this.translation.translationChanged().subscribe(() =>\n            {\n                this.inputName = this.translation.translate(this.langPrefix + '.selectAll');\n            });\n        }\n\n        this.isInit = true;\n    }\n\n    protected onHeaderCheckboxChange(isChecked:boolean):void\n    {\n        this.valueList.forEach((value:TerraMultiCheckBoxValueInterface) =>\n        {\n            value.selected = isChecked;\n        });\n    }\n\n    protected checkHeaderCheckboxState():void\n    {\n        if(!isNullOrUndefined(this.valueList))\n        {\n            let filteredValues:Array<TerraMultiCheckBoxValueInterface> = this.valueList.filter((entry:TerraMultiCheckBoxValueInterface) =>\n            {\n                return entry.selected;\n            });\n\n            this.changeHeaderCheckboxState(filteredValues.length);\n        }\n    }\n\n    private changeHeaderCheckboxState(filteredLength:number):void\n    {\n        if(filteredLength === 0)\n        {\n            this.headerCheckboxValue = false;\n        }\n        else if(filteredLength === this.valueList.length)\n        {\n            this.headerCheckboxValue = true;\n        }\n        else\n        {\n            this.headerCheckboxValue = undefined;\n            this.viewChildHeaderCheckbox.isIndeterminate = true;\n        }\n    }\n\n    private onTouchedCallback:() => void = ():void => undefined;\n\n    private onChangeCallback:(_:any) => void = (_:any):void => undefined;\n}\n"]}