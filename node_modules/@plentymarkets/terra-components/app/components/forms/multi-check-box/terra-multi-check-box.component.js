"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
var angular_l10n_1 = require("angular-l10n");
var util_1 = require("util");
var terra_checkbox_component_1 = require("../checkbox/terra-checkbox.component");
var TerraMultiCheckBoxComponent = /** @class */ (function () {
    function TerraMultiCheckBoxComponent(translation) {
        this.translation = translation;
        this.valueList = [];
        this.langPrefix = 'terraMultiCheckBox';
        this.onTouchedCallback = function () { return undefined; };
        this.onChangeCallback = function (_) { return undefined; };
    }
    TerraMultiCheckBoxComponent_1 = TerraMultiCheckBoxComponent;
    TerraMultiCheckBoxComponent.prototype.writeValue = function (valueList) {
        this.valueList = valueList;
        this.checkHeaderCheckboxState();
        this.onTouchedCallback();
        this.onChangeCallback(this.valueList);
    };
    TerraMultiCheckBoxComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    TerraMultiCheckBoxComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    TerraMultiCheckBoxComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (!this.inputName) {
            this.inputName = this.translation.translate(this.langPrefix + '.selectAll');
            // this is necessary for language switch
            this.translation.translationChanged().subscribe(function () {
                _this.inputName = _this.translation.translate(_this.langPrefix + '.selectAll');
            });
        }
        this.isInit = true;
    };
    TerraMultiCheckBoxComponent.prototype.onHeaderCheckboxChange = function (isChecked) {
        this.valueList.forEach(function (value) {
            value.selected = isChecked;
        });
    };
    TerraMultiCheckBoxComponent.prototype.checkHeaderCheckboxState = function () {
        if (!util_1.isNullOrUndefined(this.valueList)) {
            var filteredValues = this.valueList.filter(function (entry) {
                return entry.selected;
            });
            this.changeHeaderCheckboxState(filteredValues.length);
        }
    };
    TerraMultiCheckBoxComponent.prototype.changeHeaderCheckboxState = function (filteredLength) {
        if (filteredLength === 0) {
            this.headerCheckboxValue = false;
        }
        else if (filteredLength === this.valueList.length) {
            this.headerCheckboxValue = true;
        }
        else {
            this.headerCheckboxValue = undefined;
            this.viewChildHeaderCheckbox.isIndeterminate = true;
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraMultiCheckBoxComponent.prototype, "inputIsDisabled", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraMultiCheckBoxComponent.prototype, "inputName", void 0);
    __decorate([
        core_1.ViewChild('viewChildHeaderCheckbox'),
        __metadata("design:type", terra_checkbox_component_1.TerraCheckboxComponent)
    ], TerraMultiCheckBoxComponent.prototype, "viewChildHeaderCheckbox", void 0);
    TerraMultiCheckBoxComponent = TerraMultiCheckBoxComponent_1 = __decorate([
        core_1.Component({
            selector: 'terra-multi-check-box',
            styles: [require('./terra-multi-check-box.component.scss')],
            template: require('./terra-multi-check-box.component.html'),
            providers: [
                {
                    provide: forms_1.NG_VALUE_ACCESSOR,
                    useExisting: core_1.forwardRef(function () { return TerraMultiCheckBoxComponent_1; }),
                    multi: true
                }
            ]
        }),
        __metadata("design:paramtypes", [angular_l10n_1.TranslationService])
    ], TerraMultiCheckBoxComponent);
    return TerraMultiCheckBoxComponent;
    var TerraMultiCheckBoxComponent_1;
}());
exports.TerraMultiCheckBoxComponent = TerraMultiCheckBoxComponent;

//# sourceMappingURL=terra-multi-check-box.component.js.map
