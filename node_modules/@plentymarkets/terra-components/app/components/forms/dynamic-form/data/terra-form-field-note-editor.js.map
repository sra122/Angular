{"version":3,"sources":["app/components/forms/dynamic-form/data/terra-form-field-note-editor.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iEAGiC;AACjC,2EAAuE;AAUvE;IAA8C,4CAA0B;IAIpE,kCAAY,GAAU,EAAE,KAAY,EAAE,QAAgB,EAAG,OAA4C;QAA5C,wBAAA,EAAA,YAA4C;QAArG,YAEI,kBAAM,GAAG,EAAE,8CAAoB,CAAC,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,SAGzE;QADG,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;;IACnC,CAAC;IACL,+BAAC;AAAD,CAVA,AAUC,CAV6C,0CAAkB,GAU/D;AAVY,4DAAwB","file":"terra-form-field-note-editor.js","sourcesContent":["import {\n    TerraFormFieldBase,\n    TerraFormFieldBaseOptions\n} from './terra-form-field-base';\nimport { TerraControlTypeEnum } from '../enum/terra-control-type.enum';\n\n/**\n *@author Tim Wieder & Maxi Roell\n */\nexport interface TerraFormFieldNoteEditorOptions extends TerraFormFieldBaseOptions<number>\n{\n    type?:string;\n}\n\nexport class TerraFormFieldNoteEditor extends TerraFormFieldBase<number>\n{\n    public type:string;\n\n    constructor(key:string, label:string, required:boolean,  options:TerraFormFieldNoteEditorOptions = {})\n    {\n        super(key, TerraControlTypeEnum.NOTE_EDITOR, label, required, options);\n\n        this.type = options.type || '';\n    }\n}\n"]}