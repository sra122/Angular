"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var terra_form_field_base_1 = require("./terra-form-field-base");
var terra_control_type_enum_1 = require("../enum/terra-control-type.enum");
/**
 * @deprecated
 */
var TerraFormFieldConditionalContainer = /** @class */ (function (_super) {
    __extends(TerraFormFieldConditionalContainer, _super);
    function TerraFormFieldConditionalContainer(key, conditionalType, label, options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, key, terra_control_type_enum_1.TerraControlTypeEnum.CONDITIONAL_CONTAINER, label, false, options) || this;
        _this.conditionalType = conditionalType;
        _this.conditionalValues = options['conditionalValues'] || [];
        _this.conditionalEntries = options['conditionalEntries'] || {};
        return _this;
    }
    return TerraFormFieldConditionalContainer;
}(terra_form_field_base_1.TerraFormFieldBase));
exports.TerraFormFieldConditionalContainer = TerraFormFieldConditionalContainer;

//# sourceMappingURL=terra-form-field-conditional-container.js.map
