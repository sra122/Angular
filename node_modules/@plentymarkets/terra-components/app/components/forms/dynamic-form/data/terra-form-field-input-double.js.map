{"version":3,"sources":["app/components/forms/dynamic-form/data/terra-form-field-input-double.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iEAGiC;AACjC,2EAAuE;AAYvE;IAA+C,6CAA0B;IAMrE,mCAAY,GAAU,EAAE,KAAY,EAAE,QAAgB,EAAE,OAA6C;QAA7C,wBAAA,EAAA,YAA6C;QAArG,YAEI,kBAAM,GAAG,EAAE,8CAAoB,CAAC,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,SAK1E;QAHG,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;QAC/B,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;QACjC,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,4DAA4D;;IAC5G,CAAC;IACL,gCAAC;AAAD,CAdA,AAcC,CAd8C,0CAAkB,GAchE;AAdY,8DAAyB","file":"terra-form-field-input-double.js","sourcesContent":["import {\n    TerraFormFieldBase,\n    TerraFormFieldBaseOptions\n} from './terra-form-field-base';\nimport { TerraControlTypeEnum } from '../enum/terra-control-type.enum';\n\n/**\n * @author dtrauf\n */\nexport interface TerraFormFieldInputDoubleOptions extends TerraFormFieldBaseOptions<number>\n{\n    type?:string;\n    isPrice?:boolean;\n    decimalCount?:number;\n}\n\nexport class TerraFormFieldInputDouble extends TerraFormFieldBase<number>\n{\n    public type:string;\n    public isPrice:boolean;\n    public decimalCount:number;\n\n    constructor(key:string, label:string, required:boolean, options:TerraFormFieldInputDoubleOptions = {})\n    {\n        super(key, TerraControlTypeEnum.INPUT_DOUBLE, label, required, options);\n\n        this.type = options.type || '';\n        this.isPrice = !!options.isPrice;\n        this.decimalCount = this.decimalCount || 2; // default value 2 analogous to terra-double-input.component\n    }\n}\n"]}