{"version":3,"sources":["app/components/forms/dynamic-form/data/terra-form-field-conditional-container.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iEAGiC;AAEjC,2EAAuE;AAWvE;;GAEG;AACH;IAAwD,sDAA0B;IAM9E,4CAAY,GAAU,EAAE,eAAsB,EAAE,KAAY,EAAE,OAAsD;QAAtD,wBAAA,EAAA,YAAsD;QAApH,YAEI,kBAAM,GAAG,EAAE,8CAAoB,CAAC,qBAAqB,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,SAKhF;QAHG,KAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,KAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;QAC5D,KAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;;IAClE,CAAC;IACL,yCAAC;AAAD,CAdA,AAcC,CAduD,0CAAkB,GAczE;AAdY,gFAAkC","file":"terra-form-field-conditional-container.js","sourcesContent":["import {\n    TerraFormFieldBase,\n    TerraFormFieldBaseOptions\n} from './terra-form-field-base';\nimport { TerraSelectBoxValueInterface } from '../../select-box/data/terra-select-box.interface';\nimport { TerraControlTypeEnum } from '../enum/terra-control-type.enum';\n\n/**\n * @author mfrank\n */\nexport interface TerraFormFieldConditionalContainerOptions extends TerraFormFieldBaseOptions<string>\n{\n    conditionalValues?:Array<TerraSelectBoxValueInterface> | Array<{ [key:string]:string | number | boolean }>;\n    conditionalEntries?:{ [key:string]:Array<TerraFormFieldBase<any>> };\n}\n\n/**\n * @deprecated\n */\nexport class TerraFormFieldConditionalContainer extends TerraFormFieldBase<string>\n{\n    public conditionalType:string;\n    public conditionalValues:Array<TerraSelectBoxValueInterface> | Array<{ [key:string]:string | number | boolean }>;\n    public conditionalEntries:{ [key:string]:Array<TerraFormFieldBase<any>> };\n\n    constructor(key:string, conditionalType:string, label:string, options:TerraFormFieldConditionalContainerOptions = {})\n    {\n        super(key, TerraControlTypeEnum.CONDITIONAL_CONTAINER, label, false, options);\n\n        this.conditionalType = conditionalType;\n        this.conditionalValues = options['conditionalValues'] || [];\n        this.conditionalEntries = options['conditionalEntries'] || {};\n    }\n}\n"]}