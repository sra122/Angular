{"version":3,"sources":["app/components/forms/dynamic-form/data/terra-form-field-input-number.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iEAGiC;AACjC,2EAAuE;AAUvE;IAA+C,6CAA0B;IAIrE,mCAAY,GAAU,EAAE,KAAY,EAAE,QAAgB,EAAE,OAA6C;QAA7C,wBAAA,EAAA,YAA6C;QAArG,YAEI,kBAAM,GAAG,EAAE,8CAAoB,CAAC,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,SAG1E;QADG,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;;IACtC,CAAC;IACL,gCAAC;AAAD,CAVA,AAUC,CAV8C,0CAAkB,GAUhE;AAVY,8DAAyB","file":"terra-form-field-input-number.js","sourcesContent":["import {\n    TerraFormFieldBase,\n    TerraFormFieldBaseOptions\n} from './terra-form-field-base';\nimport { TerraControlTypeEnum } from '../enum/terra-control-type.enum';\n\n/**\n * @author mfrank\n */\nexport interface TerraFormFieldInputNumberOptions extends TerraFormFieldBaseOptions<number>\n{\n    type?:string;\n}\n\nexport class TerraFormFieldInputNumber extends TerraFormFieldBase<number>\n{\n    public type:string;\n\n    constructor(key:string, label:string, required:boolean, options:TerraFormFieldInputNumberOptions = {})\n    {\n        super(key, TerraControlTypeEnum.INPUT_NUMBER, label, required, options);\n\n        this.type = options['type'] || '';\n    }\n}\n"]}