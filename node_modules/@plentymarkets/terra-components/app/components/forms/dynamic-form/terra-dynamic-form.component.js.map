{"version":3,"sources":["app/components/forms/dynamic-form/terra-dynamic-form.component.ts"],"names":[],"mappings":"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","file":"terra-dynamic-form.component.js","sourcesContent":["import {\n    Component,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges\n} from '@angular/core';\nimport { isNullOrUndefined } from 'util';\nimport { TerraFormFieldControlService } from './service/terra-form-field-control.service';\nimport { TerraFormFieldBase } from './data/terra-form-field-base';\nimport { TerraDynamicFormFunctionsHandler } from './handler/terra-dynamic-form-functions.handler';\nimport { TerraDynamicFormService } from './service/terra-dynamic-form.service';\nimport { Observable } from 'rxjs/Observable';\nimport { debounceTime } from 'rxjs/operators';\n\nexport enum TerraHtmlMethods\n{\n    GET = 'get',\n    POST = 'post',\n    PUT = 'put',\n    DELETE = 'delete'\n}\n\nexport interface TerraDynamicFormRequestParams\n{\n    route:string;\n    htmlMethod:TerraHtmlMethods;\n    params?:{};\n}\n\n/**\n * @author mfrank\n */\n@Component({\n    selector:  'terra-dynamic-form',\n    template:  require('./terra-dynamic-form.component.html'),\n    styles:    [require('./terra-dynamic-form.component.scss')],\n    providers: [TerraDynamicFormService]\n})\nexport class TerraDynamicFormComponent implements OnInit, OnChanges\n{\n    @Input()\n    public inputFormFunctions:TerraDynamicFormFunctionsHandler<any>;\n\n    @Input()\n    public inputFormFields:Array<TerraFormFieldBase<any>>;\n\n    @Input()\n    public inputPortletStyle:string;\n\n    @Input()\n    public inputRequestParams:TerraDynamicFormRequestParams;\n\n    @Input()\n    public inputHasNoSaveButton:boolean;\n\n    @Input()\n    public inputHasNoResetButton:boolean;\n\n    @Input()\n    public inputIsDisabled:boolean;\n\n    @Input()\n    public inputUsePortlet:boolean = true;\n\n    constructor(protected formFieldControlService:TerraFormFieldControlService)\n    {\n        this.inputPortletStyle = 'col-xs-12 col-md-8 col-lg-5';\n        this.inputRequestParams = {\n            route:      '',\n            htmlMethod: null,\n            params:     {}\n        };\n\n        this.inputHasNoSaveButton = false;\n        this.inputHasNoResetButton = false;\n        this.inputIsDisabled = false;\n    }\n\n    public ngOnInit():void\n    {\n        if(isNullOrUndefined(this.inputFormFields) || isNullOrUndefined(this.inputFormFunctions))\n        {\n            console.error('inputFormFields and inputFormFunctions must be set.');\n        }\n        else\n        {\n            this.formFieldControlService.createFormGroup(this.inputFormFields);\n            this.inputFormFunctions.formFieldControlService = this.formFieldControlService;\n\n            this.registerValueChange();\n        }\n    }\n\n    public ngOnChanges(changes:SimpleChanges):void\n    {\n        if(changes['inputFormFields'])\n        {\n            this.formFieldControlService.createFormGroup(this.inputFormFields);\n            this.registerValueChange();\n        }\n    }\n\n    protected validate():void\n    {\n        if(this.formFieldControlService.dynamicFormGroup.valid)\n        {\n            this.inputFormFunctions.saveCallback(this.formFieldControlService.dynamicFormGroup.value);\n        }\n        else\n        {\n            this.inputFormFunctions.errorCallback(this.formFieldControlService.dynamicFormGroup,\n                this.formFieldControlService.translationMapping);\n        }\n    }\n\n    protected onResetClick():void\n    {\n        this.formFieldControlService.resetForm();\n    }\n\n    private registerValueChange():void\n    {\n        if(!isNullOrUndefined(this.inputFormFunctions.onValueChangedCallback))\n        {\n            let stream$:Observable<any> = this.formFieldControlService\n                .dynamicFormGroup\n                .valueChanges;\n\n            if(this.inputFormFunctions.valueChangeDebounce > 0)\n            {\n                stream$ = stream$.pipe(\n                    debounceTime(this.inputFormFunctions.valueChangeDebounce)\n                );\n            }\n\n            stream$.subscribe((value:any) =>\n            {\n                this.inputFormFunctions.onValueChangedCallback(value);\n            });\n        }\n    }\n}\n"]}