"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var terra_form_field_base_1 = require("../data/terra-form-field-base");
var terra_control_type_enum_1 = require("../enum/terra-control-type.enum");
var terra_form_field_input_text_1 = require("../data/terra-form-field-input-text");
var terra_form_field_input_number_1 = require("../data/terra-form-field-input-number");
var terra_form_field_input_double_1 = require("../data/terra-form-field-input-double");
var terra_form_field_text_area_1 = require("../data/terra-form-field-text-area");
var terra_form_field_date_picker_1 = require("../data/terra-form-field-date-picker");
var terra_form_field_select_box_1 = require("../data/terra-form-field-select-box");
var terra_form_field_check_box_1 = require("../data/terra-form-field-check-box");
var terra_form_field_base_container_1 = require("../data/terra-form-field-base-container");
var terra_form_field_category_picker_1 = require("../data/terra-form-field-category-picker");
var terra_form_field_input_file_1 = require("../data/terra-form-field-input-file");
var terra_form_field_color_picker_1 = require("../data/terra-form-field-color-picker");
var terra_form_field_multi_check_box_1 = require("../data/terra-form-field-multi-check-box");
var terra_form_field_note_editor_1 = require("../data/terra-form-field-note-editor");
var terra_form_field_code_editor_1 = require("../data/terra-form-field-code-editor");
/**
 * @author mfrank
 *
 */
var TerraJsonToFormFieldService = /** @class */ (function () {
    function TerraJsonToFormFieldService() {
    }
    TerraJsonToFormFieldService.generateFormFields = function (formFieldsJSON) {
        var _this = this;
        var formFields = [];
        Object.keys(formFieldsJSON).forEach(function (formFieldKey) {
            formFields.push(_this.createFormField(formFieldKey, formFieldsJSON[formFieldKey]));
        });
        return formFields;
    };
    TerraJsonToFormFieldService.createFormField = function (formFieldKey, formFieldData) {
        var formField;
        switch (formFieldData.type) {
            case terra_control_type_enum_1.TerraControlTypeEnum.INPUT_TEXT:
                formField = new terra_form_field_input_text_1.TerraFormFieldInputText(formFieldKey, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.INPUT_FILE:
                formField = new terra_form_field_input_file_1.TerraFormFieldInputFile(formFieldKey, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.INPUT_NUMBER:
                formField = new terra_form_field_input_number_1.TerraFormFieldInputNumber(formFieldKey, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.INPUT_DOUBLE:
                formField = new terra_form_field_input_double_1.TerraFormFieldInputDouble(formFieldKey, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.INPUT_TEXT_AREA:
                formField = new terra_form_field_text_area_1.TerraFormFieldTextArea(formFieldKey, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.DATE_PICKER:
                formField = new terra_form_field_date_picker_1.TerraFormFieldDatePicker(formFieldKey, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.SELECT_BOX:
                formField = new terra_form_field_select_box_1.TerraFormFieldSelectBox(formFieldKey, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.CHECK_BOX:
                formField = new terra_form_field_check_box_1.TerraFormFieldCheckBox(formFieldKey, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.NOTE_EDITOR:
                formField = new terra_form_field_note_editor_1.TerraFormFieldNoteEditor(formFieldKey, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.CODE_EDITOR:
                formField = new terra_form_field_code_editor_1.TerraFormFieldCodeEditor(formFieldKey, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.CATEGORY_PICKER:
                formField = new terra_form_field_category_picker_1.TerraFormFieldCategoryPicker(formFieldKey, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.COLOR_PICKER:
                formField = new terra_form_field_color_picker_1.TerraFormFieldColorPicker(formFieldKey, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.MULTI_CHECK_BOX:
                formField = new terra_form_field_multi_check_box_1.TerraFormFieldMultiCheckBox(formFieldKey, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.VERTICAL_CONTAINER:
                formField = this.createContainerFormField(formFieldKey, formFieldData, terra_control_type_enum_1.TerraControlTypeEnum.VERTICAL_CONTAINER);
                break;
            case terra_control_type_enum_1.TerraControlTypeEnum.HORIZONTAL_CONTAINER:
                formField = this.createContainerFormField(formFieldKey, formFieldData, terra_control_type_enum_1.TerraControlTypeEnum.HORIZONTAL_CONTAINER);
                break;
            default:
                formField = new terra_form_field_base_1.TerraFormFieldBase(formFieldKey, formFieldData.type, formFieldData.label, formFieldData.required, formFieldData.options);
                break;
        }
        return formField;
    };
    TerraJsonToFormFieldService.createContainerFormField = function (formFieldKey, formFieldData, containerType) {
        var containerFormField = new terra_form_field_base_container_1.TerraFormFieldBaseContainer(formFieldKey, containerType, formFieldData.label);
        containerFormField.containerEntries = this.generateFormFields(formFieldData.options.containerEntries);
        return containerFormField;
    };
    return TerraJsonToFormFieldService;
}());
exports.TerraJsonToFormFieldService = TerraJsonToFormFieldService;

//# sourceMappingURL=terra-json-to-form-field.service.js.map
