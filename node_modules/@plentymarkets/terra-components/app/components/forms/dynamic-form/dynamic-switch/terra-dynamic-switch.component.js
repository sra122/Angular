"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
var terra_control_type_enum_1 = require("../enum/terra-control-type.enum");
/**
 * @author mfrank
 */
var TerraDynamicSwitchComponent = /** @class */ (function () {
    function TerraDynamicSwitchComponent() {
        // Necessary for using enum in html
        this.controlTypeEnum = terra_control_type_enum_1.TerraControlTypeEnum;
        this.inputSubSwitch = false;
    }
    // Auf TerraFormFieldConditionalBean umbauen
    TerraDynamicSwitchComponent.prototype.onConditionChanged = function (formField) {
        // Observable.of(null).delay(this.DELAY_FOR_CHANGE_DETECTION).subscribe(() =>
        // {
        //     for(let conditionalEntry in formField.conditionalEntries)
        //     {
        //         if(formField.conditionalEntries.hasOwnProperty(conditionalEntry))
        //         {
        //             if(this.inputFormGroup.get(formField.key).value === conditionalEntry)
        //             {
        //                 formField.conditionalEntries[conditionalEntry].forEach((entry:TerraFormFieldBase<any>) =>
        //                 {
        //                     this.inputFormGroup.get(entry.key).enable({
        //                         onlySelf:  true,
        //                         emitEvent: true
        //                     });
        //                 });
        //             }
        //             else
        //             {
        //                 formField.conditionalEntries[conditionalEntry].forEach((entry:TerraFormFieldBase<any>) =>
        //                 {
        //                     this.inputFormGroup.get(entry.key).disable({
        //                         onlySelf:  true,
        //                         emitEvent: true
        //                     });
        //                 });
        //             }
        //         }
        //     }
        // });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array)
    ], TerraDynamicSwitchComponent.prototype, "inputFormFields", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", forms_1.FormGroup)
    ], TerraDynamicSwitchComponent.prototype, "inputFormGroup", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraDynamicSwitchComponent.prototype, "inputSubSwitch", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraDynamicSwitchComponent.prototype, "inputIsDisabled", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraDynamicSwitchComponent.prototype, "inputPortletHeader", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraDynamicSwitchComponent.prototype, "inputUsePortlet", void 0);
    TerraDynamicSwitchComponent = __decorate([
        core_1.Component({
            selector: 'terra-dynamic-switch',
            template: require('./terra-dynamic-switch.component.html'),
            styles: [require('./terra-dynamic-switch.component.scss')]
        }),
        __metadata("design:paramtypes", [])
    ], TerraDynamicSwitchComponent);
    return TerraDynamicSwitchComponent;
}());
exports.TerraDynamicSwitchComponent = TerraDynamicSwitchComponent;

//# sourceMappingURL=terra-dynamic-switch.component.js.map
