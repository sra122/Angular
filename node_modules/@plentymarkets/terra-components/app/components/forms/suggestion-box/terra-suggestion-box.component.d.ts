import { ElementRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { TerraSuggestionBoxValueInterface } from './data/terra-suggestion-box.interface';
import { ControlValueAccessor } from '@angular/forms';
import { TerraPlacementEnum } from '../../../helpers/enums/terra-placement.enum';
import { TerraBaseData } from '../../data/terra-base.data';
export declare class TerraSuggestionBoxComponent implements OnInit, OnChanges, ControlValueAccessor {
    private elementRef;
    inputName: string;
    inputIsRequired: boolean;
    inputIsDisabled: boolean;
    inputTooltipText: string;
    inputTooltipPlacement: TerraPlacementEnum;
    inputListBoxValues: Array<TerraSuggestionBoxValueInterface>;
    inputWithRecentlyUsed: boolean;
    /**
     * @deprecated since it notifies the user at exactly the same time as ngModelChange <-> onChangeCallback
     */
    outputValueChanged: EventEmitter<TerraSuggestionBoxValueInterface>;
    outputClicked: EventEmitter<Event>;
    textInputValueChange: EventEmitter<string>;
    isValid: boolean;
    protected displayListBoxValues: Array<TerraSuggestionBoxValueInterface>;
    protected lastSelectedValues: Array<TerraSuggestionBoxValueInterface>;
    protected listBoxHeadingKey: string;
    protected noEntriesTextKey: string;
    protected _selectedValue: TerraSuggestionBoxValueInterface;
    protected tmpSelectedValue: TerraSuggestionBoxValueInterface;
    protected _textInputValue: string;
    protected _toggleOpen: boolean;
    private hasLabel;
    private clickListener;
    private renderedListBoxValues;
    constructor(elementRef: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: () => void): void;
    private onTouchedCallback;
    private onChangeCallback;
    writeValue(value: any): void;
    value: number | string | TerraBaseData;
    protected onClick(evt: Event): void;
    toggleOpen: boolean;
    private clickedOutside(event);
    private select(value);
    private updateLastSelectedValues();
    onChange(): void;
    /**
     * @deprecated use ngModel instead to reset the selected value
     */
    resetComponentValue(): void;
    protected onKeyDown(event: KeyboardEvent): void;
    private focusSelectedElement();
    /**
     * workaround to prevent calling the select() method on the label click
     * @param event
     */
    protected onInputClick(event: any): void;
    protected textInputValue: string;
    selectedValue: TerraSuggestionBoxValueInterface;
    private setSelectedValue(value, onChange?);
}
