"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var util_1 = require("util");
var terra_slider_tick_1 = require("./data/terra-slider-tick");
var TerraSliderComponent = /** @class */ (function () {
    function TerraSliderComponent(element, changeDetector) {
        this.element = element;
        this.changeDetector = changeDetector;
        this.inputValueChange = new core_1.EventEmitter();
        this.inputMin = 0;
        this.inputMax = 1;
        this.inputInterval = 0;
        this.inputPrecision = null;
        this.inputShowMinMax = false;
        this.inputShowTicks = false;
        this.inputIsDisabled = false;
    }
    Object.defineProperty(TerraSliderComponent.prototype, "handlePosition", {
        get: function () {
            var sliderWidth = this.sliderBarElement.nativeElement.getBoundingClientRect().width;
            var percentage = Math.abs(this.inputMin - this.inputValue) / this.calculateRangeOfSlider();
            if (percentage < 0) {
                return 0;
            }
            if (percentage > 1) {
                return sliderWidth;
            }
            return sliderWidth * percentage;
        },
        set: function (value) {
            var sliderWidth = this.sliderBarElement.nativeElement.getBoundingClientRect().width;
            var percentage = (value / sliderWidth) * 100;
            var valuePerPercent = this.calculateRangeOfSlider() / 100;
            this.inputValue = this.inputMin + (percentage * valuePerPercent);
            if (this.inputInterval > 0) {
                var diff = this.inputValue % this.inputInterval;
                if (diff !== 0) {
                    if (diff < this.inputInterval / 2) {
                        this.inputValue -= diff;
                    }
                    else {
                        this.inputValue += this.inputInterval - diff;
                    }
                }
            }
            if (this.inputValue < this.inputMin) {
                this.inputValue = this.inputMin;
            }
            if (this.inputValue > this.inputMax) {
                this.inputValue = this.inputMax;
            }
            this.inputValueChange.emit(this.inputValue);
            this.changeDetector.detectChanges();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TerraSliderComponent.prototype, "grid", {
        get: function () {
            if (this.inputInterval > 0) {
                return {
                    x: this.element.nativeElement.getBoundingClientRect().width / this.calculateNumberOfSteps(),
                    y: 0
                };
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    TerraSliderComponent.prototype.ngOnInit = function () {
        if (util_1.isNullOrUndefined(this.inputValue)) {
            this.inputValue = this.inputMin + (this.calculateRangeOfSlider() / 2);
        }
        if (util_1.isNullOrUndefined(this.inputPrecision)) {
            if (this.inputInterval > 0) {
                var stepSize = this.inputInterval;
                var steps = [];
                var current = this.inputMin;
                while (current <= this.inputMax) {
                    steps.push(current);
                    current += stepSize;
                }
                this.inputPrecision = Math.max.apply(Math, steps.map(function (step) {
                    var parts = ('' + step).split('.');
                    if (!parts[1]) {
                        return 0;
                    }
                    else {
                        var match = /[1-9]/g.exec(parts[1].substr(0, 3));
                        if (match) {
                            return match.index;
                        }
                        else {
                            return 0;
                        }
                    }
                }));
            }
            else {
                this.inputPrecision = 5 - Math.max(('' + this.inputMin).length, ('' + this.inputMax).length);
            }
        }
        if (this.inputPrecision > 3) {
            this.inputPrecision = 3;
        }
    };
    TerraSliderComponent.prototype.onDrag = function (event) {
        this.moveToPosition(event.pageX);
    };
    TerraSliderComponent.prototype.onBarClicked = function (event) {
        this.moveToPosition(event.pageX);
    };
    TerraSliderComponent.prototype.moveToPosition = function (position) {
        if (!this.inputIsDisabled) {
            var sliderRect = this.sliderBarElement.nativeElement.getBoundingClientRect();
            this.handlePosition = position - sliderRect.left;
        }
    };
    TerraSliderComponent.prototype.getTicks = function () {
        var ticks = [];
        var numberOfTicks = 10;
        if (this.inputInterval > 0) {
            numberOfTicks = this.calculateNumberOfSteps();
        }
        for (var i = 1; i < numberOfTicks; i++) {
            var positionInPercent = i * (100 / numberOfTicks);
            ticks.push(new terra_slider_tick_1.TerraSliderTick(positionInPercent, this.calculateValueFromPercent(positionInPercent)));
        }
        return ticks;
    };
    TerraSliderComponent.prototype.calculateRangeOfSlider = function () {
        return Math.abs(this.inputMin - this.inputMax);
    };
    TerraSliderComponent.prototype.calculateValueFromPercent = function (positionInPercent) {
        return this.inputMin + (this.calculateRangeOfSlider() * (positionInPercent / 100));
    };
    TerraSliderComponent.prototype.calculateNumberOfSteps = function () {
        return this.calculateRangeOfSlider() / this.inputInterval;
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], TerraSliderComponent.prototype, "inputValue", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], TerraSliderComponent.prototype, "inputValueChange", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraSliderComponent.prototype, "inputName", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], TerraSliderComponent.prototype, "inputMin", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], TerraSliderComponent.prototype, "inputMax", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], TerraSliderComponent.prototype, "inputInterval", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], TerraSliderComponent.prototype, "inputPrecision", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraSliderComponent.prototype, "inputShowMinMax", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraSliderComponent.prototype, "inputShowTicks", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraSliderComponent.prototype, "inputIsDisabled", void 0);
    __decorate([
        core_1.ViewChild('sliderBar', { read: core_1.ElementRef }),
        __metadata("design:type", core_1.ElementRef)
    ], TerraSliderComponent.prototype, "sliderBarElement", void 0);
    TerraSliderComponent = __decorate([
        core_1.Component({
            selector: 'terra-slider',
            template: require('./terra-slider.component.html'),
            styles: [require('./terra-slider.component.scss')]
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, core_1.ChangeDetectorRef])
    ], TerraSliderComponent);
    return TerraSliderComponent;
}());
exports.TerraSliderComponent = TerraSliderComponent;

//# sourceMappingURL=terra-slider.component.js.map
