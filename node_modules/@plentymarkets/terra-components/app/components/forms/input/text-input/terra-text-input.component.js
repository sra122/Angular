"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var terra_input_component_1 = require("../terra-input.component");
var forms_1 = require("@angular/forms");
var util_1 = require("util");
var IBAN = require("iban");
var angular_l10n_1 = require("angular-l10n");
var terra_regex_1 = require("../../../../helpers/regex/terra-regex");
var nextId = 0;
var TerraTextInputComponent = /** @class */ (function (_super) {
    __extends(TerraTextInputComponent, _super);
    function TerraTextInputComponent(translation) {
        var _this = _super.call(this, terra_regex_1.TerraRegex.MIXED) || this;
        _this.translation = translation;
        _this.outputOnInput = new core_1.EventEmitter();
        if (util_1.isNullOrUndefined(_this.inputIsPassword)) {
            _this.inputIsPassword = false;
        }
        // generate the id of the input instance
        _this.id = "text-input_#" + nextId++;
        _this.inputIsIban = false;
        return _this;
    }
    TerraTextInputComponent_1 = TerraTextInputComponent;
    Object.defineProperty(TerraTextInputComponent.prototype, "inputType", {
        /**
         * @deprecated inputType is no longer used.  It will be removed in one of the upcoming releases.
         * @param v
         */
        set: function (v) {
            console.warn('inputType is no longer used.  It will be removed in one of the upcoming releases.');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TerraTextInputComponent.prototype, "inputValue", {
        /**
         * @deprecated inputValue is deprecated. It will be removed in one of the upcoming releases. Please use ngModel instead.
         * @param v
         */
        set: function (v) {
            console.warn('inputValue is deprecated. It will be removed in one of the upcoming releases. Please use ngModel instead.');
            this.value = v;
        },
        enumerable: true,
        configurable: true
    });
    TerraTextInputComponent.prototype.onInput = function () {
        this.outputOnInput.emit();
    };
    TerraTextInputComponent.prototype.focusNativeInput = function () {
        var _this = this;
        setTimeout(function () {
            var input = document.getElementById(_this.id);
            input.focus();
        });
    };
    TerraTextInputComponent.prototype.selectNativeInput = function () {
        var _this = this;
        setTimeout(function () {
            var input = document.getElementById(_this.id);
            input.select();
        });
    };
    TerraTextInputComponent.prototype.onCustomBlur = function (iban) {
        if (this.inputIsIban) {
            this.isValid = IBAN.isValid(iban);
            this.inputTooltipText = this.isValid ? null : this.translation.translate('terraTextInput.invalidIban');
        }
        this.onBlur();
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraTextInputComponent.prototype, "inputIsPassword", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraTextInputComponent.prototype, "inputIsIban", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraTextInputComponent.prototype, "inputIsReadonly", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], TerraTextInputComponent.prototype, "outputOnInput", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], TerraTextInputComponent.prototype, "inputType", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], TerraTextInputComponent.prototype, "inputValue", null);
    TerraTextInputComponent = TerraTextInputComponent_1 = __decorate([
        core_1.Component({
            selector: 'terra-text-input',
            styles: [
                require('./terra-text-input.component.scss'),
                require('../terra-input.component.glob.scss').toString()
            ],
            template: require('./terra-text-input.component.html'),
            providers: [
                {
                    provide: forms_1.NG_VALUE_ACCESSOR,
                    useExisting: core_1.forwardRef(function () { return TerraTextInputComponent_1; }),
                    multi: true
                }
            ]
        }),
        __metadata("design:paramtypes", [angular_l10n_1.TranslationService])
    ], TerraTextInputComponent);
    return TerraTextInputComponent;
    var TerraTextInputComponent_1;
}(terra_input_component_1.TerraInputComponent));
exports.TerraTextInputComponent = TerraTextInputComponent;

//# sourceMappingURL=terra-text-input.component.js.map
