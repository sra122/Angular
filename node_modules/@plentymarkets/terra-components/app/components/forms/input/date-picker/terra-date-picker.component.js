"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
var mydatepicker_1 = require("mydatepicker");
var moment = require("moment");
var util_1 = require("util");
var nextId = 0;
/**
 * @author mfrank
 */
var TerraDatePickerComponent = /** @class */ (function () {
    function TerraDatePickerComponent() {
        this.onTouchedCallback = function () {
            /* */
        };
        this.onChangeCallback = function (_) {
            /* */
        };
        this.inputIsRequired = false;
        this.inputIsDisabled = false;
        this.inputIsValid = true;
        this.inputOpenCalendarTop = false;
        this.inputDisplayDateFormat = 'dd.mm.yyyy';
        this.currentLocale = localStorage.getItem('plentymarkets_lang_');
        // generate the id of the input instance
        this.id = "date-picker_#" + nextId++;
    }
    TerraDatePickerComponent_1 = TerraDatePickerComponent;
    TerraDatePickerComponent.prototype.ngOnChanges = function () {
        this.updateDatePickerOptions();
    };
    TerraDatePickerComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    TerraDatePickerComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    TerraDatePickerComponent.prototype.writeValue = function (value) {
        if (!util_1.isNullOrUndefined(value) && typeof (value) === 'string' && isNaN(Date.parse(value)) === false) {
            var newDate = new Date(value);
            this.value = {
                date: {
                    year: newDate.getFullYear(),
                    month: newDate.getMonth() + 1,
                    day: newDate.getDate()
                },
                jsdate: newDate,
                formatted: null,
                epoc: null
            };
        }
        else {
            this.clearDate();
        }
    };
    Object.defineProperty(TerraDatePickerComponent.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (value) {
            if (!util_1.isNullOrUndefined(value) && typeof (value) === 'object') {
                this._value = value;
                this.onTouchedCallback();
                this.onChangeCallback(moment(value.jsdate).format());
            }
            else {
                this._value = null;
                this.onTouchedCallback();
                this.onChangeCallback(null);
            }
        },
        enumerable: true,
        configurable: true
    });
    TerraDatePickerComponent.prototype.clearDate = function () {
        this.viewChildMyDatePicker.clearDate();
    };
    TerraDatePickerComponent.prototype.updateDatePickerOptions = function () {
        this.datePickerOptions = {
            height: 'inherit',
            componentDisabled: this.inputIsDisabled,
            openSelectorTopOfInput: this.inputOpenCalendarTop,
            showSelectorArrow: !this.inputOpenCalendarTop,
            inline: false,
            editableDateField: true,
            openSelectorOnInputClick: false,
            dateFormat: this.inputDisplayDateFormat,
        };
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraDatePickerComponent.prototype, "inputName", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraDatePickerComponent.prototype, "inputIsRequired", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraDatePickerComponent.prototype, "inputIsValid", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraDatePickerComponent.prototype, "inputIsDisabled", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraDatePickerComponent.prototype, "inputOpenCalendarTop", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraDatePickerComponent.prototype, "inputDisplayDateFormat", void 0);
    __decorate([
        core_1.ViewChild('viewChildMyDatePicker'),
        __metadata("design:type", mydatepicker_1.MyDatePicker)
    ], TerraDatePickerComponent.prototype, "viewChildMyDatePicker", void 0);
    TerraDatePickerComponent = TerraDatePickerComponent_1 = __decorate([
        core_1.Component({
            selector: 'terra-date-picker',
            styles: [
                require('./terra-date-picker.component.scss'),
                require('./terra-date-picker.component.glob.scss').toString()
            ],
            template: require('./terra-date-picker.component.html'),
            providers: [
                {
                    provide: forms_1.NG_VALUE_ACCESSOR,
                    useExisting: core_1.forwardRef(function () { return TerraDatePickerComponent_1; }),
                    multi: true
                }
            ]
        }),
        __metadata("design:paramtypes", [])
    ], TerraDatePickerComponent);
    return TerraDatePickerComponent;
    var TerraDatePickerComponent_1;
}());
exports.TerraDatePickerComponent = TerraDatePickerComponent;

//# sourceMappingURL=terra-date-picker.component.js.map
