{"version":3,"sources":["app/components/forms/input/double-input/terra-double-input.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,sCAKuB;AACvB,kEAA+D;AAC/D,wCAAmD;AACnD,qEAAmE;AACnE,6CAA6C;AAE7C,IAAI,MAAM,GAAU,CAAC,CAAC;AActB;IAA+C,6CAAmB;IAqC9D;QAAA,YAEI,kBAAM,wBAAU,CAAC,MAAM,CAAC,SAI3B;QAnCD;;;WAGG;QAEI,uBAAiB,GAAU,CAAC,CAAC;QA4BhC,wCAAwC;QACxC,KAAI,CAAC,EAAE,GAAG,mBAAiB,MAAM,EAAI,CAAC;;IAC1C,CAAC;kCA3CQ,yBAAyB;IA8BlC,sBAAW,iDAAU;QALrB;;;WAGG;aAEH,UAAsB,CAAQ;YAE1B,OAAO,CAAC,IAAI,CAAC,2GAA2G,CAAC,CAAC;YAE1H,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACnB,CAAC;;;OAAA;IAUM,4CAAQ,GAAf;QAEI,IAAI,CAAC,KAAK,GAAG,wBAAU,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED;;OAEG;IACI,oDAAgB,GAAvB;QAAA,iBAOC;QALG,UAAU,CAAC;YAEP,IAAI,KAAK,GAAuC,QAAQ,CAAC,cAAc,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC;YACjF,KAAK,CAAC,KAAK,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACI,qDAAiB,GAAxB;QAAA,iBAOC;QALG,UAAU,CAAC;YAEP,IAAI,KAAK,GAAuC,QAAQ,CAAC,cAAc,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC;YACjF,KAAK,CAAC,MAAM,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAnED;QADC,YAAK,EAAE;;wEACyB;IAOjC;QADC,YAAK,EAAE;;wEAC4B;IAGpC;QADC,4BAAa,EAAE;;6DACQ;IAcxB;QADC,YAAK,EAAE;;;+DAMP;IAnCQ,yBAAyB;QAZrC,gBAAS,CAAC;YACP,QAAQ,EAAG,oBAAoB;YAC/B,MAAM,EAAK,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;YAC3D,QAAQ,EAAG,OAAO,CAAC,qCAAqC,CAAC;YACzD,SAAS,EAAE;gBACP;oBACI,OAAO,EAAM,yBAAiB;oBAC9B,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,2BAAyB,EAAzB,CAAyB,CAAC;oBACxD,KAAK,EAAQ,IAAI;iBACpB;aACJ;SACJ,CAAC;;OACW,yBAAyB,CA0ErC;IAAD,gCAAC;;CA1ED,AA0EC,CA1E8C,2CAAmB,GA0EjE;AA1EY,8DAAyB","file":"terra-double-input.component.js","sourcesContent":["import {\n    Component,\n    forwardRef,\n    Input,\n    OnInit\n} from '@angular/core';\nimport { TerraInputComponent } from '../terra-input.component';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TerraRegex } from '../../../../helpers/regex/terra-regex';\nimport { DefaultLocale } from 'angular-l10n';\n\nlet nextId:number = 0;\n\n@Component({\n    selector:  'terra-double-input',\n    styles:    [require('./terra-double-input.component.scss')],\n    template:  require('./terra-double-input.component.html'),\n    providers: [\n        {\n            provide:     NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TerraDoubleInputComponent),\n            multi:       true\n        }\n    ]\n})\nexport class TerraDoubleInputComponent extends TerraInputComponent implements OnInit\n{\n    /**\n     * @description If true, the value will be right-aligned.\n     */\n    @Input()\n    public inputIsPriceInput:boolean;\n\n    /**\n     *\n     * @description Set the decimal count. Default is 2. (0.01)\n     */\n    @Input()\n    public inputDecimalCount:number = 2;\n\n    @DefaultLocale()\n    protected locale:string;\n\n    protected step:number;\n\n    /**\n     * @description a unique string identifier for the specific input instance.\n     */\n    protected id:string;\n\n    /**\n     * @deprecated\n     * @param {number} v\n     */\n    @Input()\n    public set inputValue(v:number)\n    {\n        console.warn('inputValue is deprecated. It will be removed in one of the upcoming releases. Please use ngModel instead.');\n\n        this.value = v;\n    }\n\n    constructor()\n    {\n        super(TerraRegex.DOUBLE);\n\n        // generate the id of the input instance\n        this.id = `double-input_#${nextId++}`;\n    }\n\n    public ngOnInit():void\n    {\n        this.regex = TerraRegex.getDouble(this.inputDecimalCount);\n        this.step = 1 / (Math.pow(10, this.inputDecimalCount));\n    }\n\n    /**\n     * Set the focus on the native input element.\n     */\n    public focusNativeInput():void\n    {\n        setTimeout(() =>\n        {\n            let input:HTMLInputElement = <HTMLInputElement> document.getElementById(this.id);\n            input.focus();\n        });\n    }\n\n    /**\n     * Select the content of the native input element.\n     */\n    public selectNativeInput():void\n    {\n        setTimeout(() =>\n        {\n            let input:HTMLInputElement = <HTMLInputElement> document.getElementById(this.id);\n            input.select();\n        });\n    }\n}\n"]}