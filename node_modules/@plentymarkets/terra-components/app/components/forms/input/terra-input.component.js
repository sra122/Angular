"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var terra_alert_component_1 = require("../../alert/terra-alert.component");
var util_1 = require("util");
var terra_placement_enum_1 = require("../../../helpers/enums/terra-placement.enum");
var TerraInputComponent = /** @class */ (function () {
    function TerraInputComponent(inputRegex) {
        this.inputRegex = inputRegex;
        this.alert = terra_alert_component_1.TerraAlertComponent.getInstance();
        // Placeholders for the callbacks which are later provided
        // by the Control Value Accessor
        this.onTouchedCallback = function () { return undefined; };
        this.onChangeCallback = function (_) { return undefined; };
        this.regex = inputRegex;
        this.isValid = true;
        this.inputTooltipPlacement = terra_placement_enum_1.TerraPlacementEnum.TOP;
        this.inputIsSmall = false;
    }
    Object.defineProperty(TerraInputComponent.prototype, "isDisabled", {
        get: function () {
            return this.inputIsDisabled;
        },
        set: function (value) {
            this.inputIsDisabled = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TerraInputComponent.prototype, "value", {
        // get accessor
        get: function () {
            return this.innerValue;
        },
        // set accessor including call the onchange callback
        set: function (v) {
            if (v !== this.innerValue) {
                this.innerValue = v;
                this.onChangeCallback(this.innerValue);
            }
        },
        enumerable: true,
        configurable: true
    });
    // Set touched on blur
    TerraInputComponent.prototype.onBlur = function () {
        this.onTouchedCallback();
    };
    // From ControlValueAccessor interface
    TerraInputComponent.prototype.writeValue = function (value) {
        if (value !== this.innerValue) {
            this.innerValue = value;
        }
    };
    // From ControlValueAccessor interface
    TerraInputComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    // From ControlValueAccessor interface
    TerraInputComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    TerraInputComponent.prototype.validate = function (formControl) {
        if (formControl.valid) {
            this.isValid = true;
        }
        else {
            if (!this.isDisabled) {
                this.isValid = false;
                if (this.inputIsRequired && (util_1.isNullOrUndefined(this.value) || this.value.length === 0)) {
                    var emptyMessage = void 0;
                    if (!this.inputEmptyMessage || this.inputEmptyMessage.length === 0) {
                        // TODO i18n
                        // emptyMessage = 'Mach eine Eingabe!';
                    }
                    else {
                        emptyMessage = this.inputEmptyMessage;
                        this.alert.addAlert({
                            msg: emptyMessage,
                            type: 'danger',
                            dismissOnTimeout: 0
                        });
                    }
                }
                else if (!util_1.isNullOrUndefined(this.value) && this.value.length > 0) {
                    var invalidMessage = void 0;
                    if (!this.inputInvalidMessage || this.inputInvalidMessage.length === 0) {
                        // TODO i18n
                        // invalidMessage = 'Eingabe ung√ºltig!';
                    }
                    else {
                        invalidMessage = this.inputInvalidMessage;
                        this.alert.addAlert({
                            msg: invalidMessage,
                            type: 'danger',
                            dismissOnTimeout: 0
                        });
                    }
                }
            }
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraInputComponent.prototype, "inputName", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraInputComponent.prototype, "inputIsRequired", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraInputComponent.prototype, "inputEmptyMessage", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraInputComponent.prototype, "inputInvalidMessage", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraInputComponent.prototype, "inputTooltipText", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraInputComponent.prototype, "inputIsDisabled", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraInputComponent.prototype, "inputTooltipPlacement", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], TerraInputComponent.prototype, "inputMaxLength", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], TerraInputComponent.prototype, "inputMaxValue", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], TerraInputComponent.prototype, "inputMinLength", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], TerraInputComponent.prototype, "inputMinValue", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraInputComponent.prototype, "inputPlaceholder", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraInputComponent.prototype, "inputIsSmall", void 0);
    return TerraInputComponent;
}());
exports.TerraInputComponent = TerraInputComponent;

//# sourceMappingURL=terra-input.component.js.map
