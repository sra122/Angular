{"version":3,"sources":["app/components/forms/checkbox/terra-checkbox.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAMuB;AACvB,wCAGwB;AACxB,6BAAyC;AAEzC,IAAI,MAAM,GAAU,CAAC,CAAC;AActB;IAyCI;QAbO,gBAAW,GAAyB,IAAI,mBAAY,EAAW,CAAC;QAEhE,YAAO,GAAW,IAAI,CAAC;QAO9B,0BAA0B;QAClB,eAAU,GAAW,KAAK,CAAC;QAC3B,qBAAgB,GAAW,KAAK,CAAC;QAmEjC,sBAAiB,GAAc,cAAW,OAAA,SAAS,EAAT,CAAS,CAAC;QAEpD,qBAAgB,GAAmB,UAAC,CAAK,IAAU,OAAA,SAAS,EAAT,CAAS,CAAC;QAjEjE,wCAAwC;QACxC,IAAI,CAAC,EAAE,GAAG,eAAa,MAAM,EAAI,CAAC;IACtC,CAAC;+BA7CQ,sBAAsB;IAgD/B,sBAAW,yCAAK;QADhB,eAAe;aACf;YAEI,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;QAED,oDAAoD;aAEpD,UAAiB,CAAS;YAEtB,IAAG,CAAC,wBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,UAAU,EACjD;gBACI,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC9B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;aAC5B;QACL,CAAC;;;OAZA;IAcM,yCAAQ,GAAf,UAAgB,KAAa;QAEzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,sCAAsC;IAC/B,2CAAU,GAAjB,UAAkB,KAAa;QAE3B,IAAG,KAAK,KAAK,IAAI,CAAC,UAAU,EAC5B;YACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;IACL,CAAC;IAED,sCAAsC;IAC/B,iDAAgB,GAAvB,UAAwB,EAAkB;QAEtC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAED,sCAAsC;IAC/B,kDAAiB,GAAxB,UAAyB,EAAa;QAElC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAChC,CAAC;IAED,sBAAW,mDAAe;aAA1B;YAEI,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC;aAGD,UAA2B,KAAa;YAEpC,IAAG,KAAK,EACR;gBACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aAC1B;YACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAClC,CAAC;;;OAVA;IAxFD;QADC,YAAK,EAAE;;mEACuB;IAM/B;QADC,YAAK,EAAE;;gEACmB;IAM3B;QADC,YAAK,EAAE;;6DACgB;IAOxB;QADC,YAAK,EAAE;;2DACc;IAGtB;QADC,aAAM,EAAE;kCACU,mBAAY;+DAAwC;IA2BvE;QADC,YAAK,EAAE;;;uDASP;IAkCD;QADC,YAAK,EAAE;;;iEAQP;IAxGQ,sBAAsB;QAZlC,gBAAS,CAAC;YACP,QAAQ,EAAG,gBAAgB;YAC3B,MAAM,EAAK,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;YACvD,QAAQ,EAAG,OAAO,CAAC,iCAAiC,CAAC;YACrD,SAAS,EAAE;gBACP;oBACI,OAAO,EAAM,yBAAiB;oBAC9B,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,wBAAsB,EAAtB,CAAsB,CAAC;oBACrD,KAAK,EAAQ,IAAI;iBACpB;aACJ;SACJ,CAAC;;OACW,sBAAsB,CA6GlC;IAAD,6BAAC;;CA7GD,AA6GC,IAAA;AA7GY,wDAAsB","file":"terra-checkbox.component.js","sourcesContent":["import {\n    Component,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { isNullOrUndefined } from 'util';\n\nlet nextId:number = 0;\n\n@Component({\n    selector:  'terra-checkbox',\n    styles:    [require('./terra-checkbox.component.scss')],\n    template:  require('./terra-checkbox.component.html'),\n    providers: [\n        {\n            provide:     NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TerraCheckboxComponent),\n            multi:       true\n        }\n    ]\n})\nexport class TerraCheckboxComponent implements ControlValueAccessor\n{\n    /**\n     * @description If true, the check box will be disabled. Default false.\n     */\n    @Input()\n    public inputIsDisabled:boolean;\n\n    /**\n     * @description Set the caption.\n     */\n    @Input()\n    public inputCaption:string;\n\n    /**\n     * @description Set an icon (e.g. icon-save).\n     */\n    @Input()\n    public inputIcon:string;\n\n    /**\n     * @description Set the id.\n     * @deprecated inputId will be removed in next major release.\n     */\n    @Input()\n    public inputId:string;\n\n    @Output()\n    public valueChange:EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    public isValid:boolean = true;\n\n    /**\n     * @description a unique string identifier for the specific input instance.\n     */\n    protected id:string;\n\n    // The internal data model\n    private innerValue:boolean = false;\n    private _isIndeterminate:boolean = false;\n\n    constructor()\n    {\n        // generate the id of the input instance\n        this.id = `checkbox_#${nextId++}`;\n    }\n\n    // get accessor\n    public get value():boolean\n    {\n        return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    @Input()\n    public set value(v:boolean)\n    {\n        if(!isNullOrUndefined(v) && v !== this.innerValue)\n        {\n            this._isIndeterminate = false;\n            this.innerValue = v;\n            this.onChangeCallback(v);\n        }\n    }\n\n    public onChange(event:boolean):void\n    {\n        this.valueChange.emit(event);\n    }\n\n    // From ControlValueAccessor interface\n    public writeValue(value:boolean):void\n    {\n        if(value !== this.innerValue)\n        {\n            this.value = value;\n        }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn:(_:any) => void):void\n    {\n        this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn:() => void):void\n    {\n        this.onTouchedCallback = fn;\n    }\n\n    public get isIndeterminate():boolean\n    {\n        return this._isIndeterminate;\n    }\n\n    @Input()\n    public set isIndeterminate(value:boolean)\n    {\n        if(value)\n        {\n            this.innerValue = null;\n        }\n        this._isIndeterminate = value;\n    }\n\n    private onTouchedCallback:() => void = ():void => undefined;\n\n    private onChangeCallback:(_:any) => void = (_:any):void => undefined;\n}\n"]}