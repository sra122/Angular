"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
var util_1 = require("util");
var nextId = 0;
var TerraCheckboxComponent = /** @class */ (function () {
    function TerraCheckboxComponent() {
        this.valueChange = new core_1.EventEmitter();
        this.isValid = true;
        // The internal data model
        this.innerValue = false;
        this._isIndeterminate = false;
        this.onTouchedCallback = function () { return undefined; };
        this.onChangeCallback = function (_) { return undefined; };
        // generate the id of the input instance
        this.id = "checkbox_#" + nextId++;
    }
    TerraCheckboxComponent_1 = TerraCheckboxComponent;
    Object.defineProperty(TerraCheckboxComponent.prototype, "value", {
        // get accessor
        get: function () {
            return this.innerValue;
        },
        // set accessor including call the onchange callback
        set: function (v) {
            if (!util_1.isNullOrUndefined(v) && v !== this.innerValue) {
                this._isIndeterminate = false;
                this.innerValue = v;
                this.onChangeCallback(v);
            }
        },
        enumerable: true,
        configurable: true
    });
    TerraCheckboxComponent.prototype.onChange = function (event) {
        this.valueChange.emit(event);
    };
    // From ControlValueAccessor interface
    TerraCheckboxComponent.prototype.writeValue = function (value) {
        if (value !== this.innerValue) {
            this.value = value;
        }
    };
    // From ControlValueAccessor interface
    TerraCheckboxComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    // From ControlValueAccessor interface
    TerraCheckboxComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    Object.defineProperty(TerraCheckboxComponent.prototype, "isIndeterminate", {
        get: function () {
            return this._isIndeterminate;
        },
        set: function (value) {
            if (value) {
                this.innerValue = null;
            }
            this._isIndeterminate = value;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraCheckboxComponent.prototype, "inputIsDisabled", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraCheckboxComponent.prototype, "inputCaption", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraCheckboxComponent.prototype, "inputIcon", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraCheckboxComponent.prototype, "inputId", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], TerraCheckboxComponent.prototype, "valueChange", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], TerraCheckboxComponent.prototype, "value", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], TerraCheckboxComponent.prototype, "isIndeterminate", null);
    TerraCheckboxComponent = TerraCheckboxComponent_1 = __decorate([
        core_1.Component({
            selector: 'terra-checkbox',
            styles: [require('./terra-checkbox.component.scss')],
            template: require('./terra-checkbox.component.html'),
            providers: [
                {
                    provide: forms_1.NG_VALUE_ACCESSOR,
                    useExisting: core_1.forwardRef(function () { return TerraCheckboxComponent_1; }),
                    multi: true
                }
            ]
        }),
        __metadata("design:paramtypes", [])
    ], TerraCheckboxComponent);
    return TerraCheckboxComponent;
    var TerraCheckboxComponent_1;
}());
exports.TerraCheckboxComponent = TerraCheckboxComponent;

//# sourceMappingURL=terra-checkbox.component.js.map
