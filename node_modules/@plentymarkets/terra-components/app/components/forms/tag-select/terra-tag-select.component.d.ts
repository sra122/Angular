/**
 * @author mfrank
 */
import { OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { TerraTagInterface } from '../../layouts/tag/data/terra-tag.interface';
import { TerraSuggestionBoxValueInterface } from '../suggestion-box/data/terra-suggestion-box.interface';
export declare class TerraTagSelectComponent implements ControlValueAccessor, OnInit, OnChanges {
    lang: string;
    name: string;
    tags: Array<TerraTagInterface>;
    isDisabled: boolean;
    isReadOnly: boolean;
    protected suggestionValues: Array<TerraSuggestionBoxValueInterface>;
    protected selectedTag: TerraTagInterface;
    protected selectedTags: Array<TerraTagInterface>;
    private tagList;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    writeValue(selectedTags: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    /**
     * Writes the selected tag into the model of the component.
     * @param {TerraTagInterface} selectedTag
     */
    protected addSelectedTag(selectedTag: TerraTagInterface): void;
    /**
     * Remove the specific tag id and updates the model of the component.
     * @param {number} tagId
     */
    protected closeTag(tagId: number): void;
    /**
     * Generates the values for the TerraSuggestionsBox from a array of TerraTagInterface.
     * @param {Array<TerraTagInterface>} tagList
     */
    private generateSuggestionValues(tagList);
    /**
     * Returns the name. If the names attribute of the tag is set it returns the name for the current language.
     * @param {TerraTagInterface} tag
     * @return {string}
     */
    private getTranslatedName(tag);
    private onTouchedCallback;
    private onChangeCallback;
}
