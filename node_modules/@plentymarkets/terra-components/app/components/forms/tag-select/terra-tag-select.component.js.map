{"version":3,"sources":["app/components/forms/tag-select/terra-tag-select.component.ts"],"names":[],"mappings":"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","file":"terra-tag-select.component.js","sourcesContent":["/**\n * @author mfrank\n */\nimport {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { TerraTagInterface } from '../../layouts/tag/data/terra-tag.interface';\nimport { TerraSuggestionBoxValueInterface } from '../suggestion-box/data/terra-suggestion-box.interface';\nimport { isNullOrUndefined } from 'util';\nimport { TerraBaseData } from '../../data/terra-base.data';\nimport { TerraTagNameInterface } from '../../layouts/tag/data/terra-tag-name.interface';\nimport { Language } from 'angular-l10n';\n\n@Component({\n    selector: 'terra-tag-select',\n    styles:   [require('./terra-tag-select.component.scss')],\n    template: require('./terra-tag-select.component.html'),\n    providers: [\n        {\n            provide:     NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TerraTagSelectComponent),\n            multi:       true\n        }\n    ]\n})\nexport class TerraTagSelectComponent implements ControlValueAccessor, OnInit, OnChanges\n{\n    @Language()\n    public lang:string;\n\n    @Input()\n    public name:string;\n\n    @Input()\n    public tags:Array<TerraTagInterface>;\n\n    @Input()\n    public isDisabled:boolean = false;\n\n    @Input()\n    public isReadOnly:boolean = false;\n\n    protected suggestionValues:Array<TerraSuggestionBoxValueInterface> = [];\n    protected selectedTag:TerraTagInterface;\n    protected selectedTags:Array<TerraTagInterface> = [];\n\n    private tagList:Array<TerraTagInterface>;\n\n    public ngOnInit():void\n    {\n        this.generateSuggestionValues(this.tagList);\n    }\n\n    public ngOnChanges(changes:SimpleChanges):void\n    {\n        if(changes.hasOwnProperty('tags'))\n        {\n            let tags:Array<TerraTagInterface> = (changes['tags'].currentValue as Array<TerraTagInterface>);\n            tags.forEach((tag:TerraTagInterface) => tag.isClosable = true);\n            this.tagList = tags;\n            this.generateSuggestionValues(tags);\n        }\n    }\n\n    public writeValue(selectedTags:any):void\n    {\n        this.selectedTags = selectedTags;\n\n        this.onTouchedCallback();\n        this.onChangeCallback(selectedTags);\n    }\n\n    public registerOnChange(fn:any):void\n    {\n        this.onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn:any):void\n    {\n        this.onTouchedCallback = fn;\n    }\n\n    /**\n     * Writes the selected tag into the model of the component.\n     * @param {TerraTagInterface} selectedTag\n     */\n    protected addSelectedTag(selectedTag:TerraTagInterface):void\n    {\n        if(!this.isReadOnly && !isNullOrUndefined(selectedTag) && !this.selectedTags.find((tag:TerraTagInterface) => tag === selectedTag))\n        {\n            this.writeValue(this.selectedTags.concat(selectedTag));\n        }\n    }\n\n    /**\n     * Remove the specific tag id and updates the model of the component.\n     * @param {number} tagId\n     */\n    protected closeTag(tagId:number):void\n    {\n        this.selectedTags.splice(\n            this.selectedTags.findIndex((tag:TerraTagInterface) => tag.id === tagId),\n            1\n        );\n\n        this.writeValue(this.selectedTags);\n    }\n\n    /**\n     * Generates the values for the TerraSuggestionsBox from a array of TerraTagInterface.\n     * @param {Array<TerraTagInterface>} tagList\n     */\n    private generateSuggestionValues(tagList:Array<TerraTagInterface>):void\n    {\n        this.suggestionValues = tagList.map((tag:TerraTagInterface) =>\n        {\n            return {\n                value: tag,\n                caption: this.getTranslatedName(tag),\n            };\n        });\n        this.suggestionValues.unshift({value: null, caption: ''});\n    }\n\n    /**\n     * Returns the name. If the names attribute of the tag is set it returns the name for the current language.\n     * @param {TerraTagInterface} tag\n     * @return {string}\n     */\n    private getTranslatedName(tag:TerraTagInterface):string\n    {\n        // Fallback if names or this.lang is not set\n        if(isNullOrUndefined(tag.names) || isNullOrUndefined(this.lang))\n        {\n            return tag.name;\n        }\n        else\n        {\n            const tagName:TerraTagNameInterface = tag.names.find((name:TerraTagNameInterface) => name.language === this.lang);\n\n            // Fallback if no name for this.lang is set\n            if(isNullOrUndefined(tagName))\n            {\n                return tag.name;\n            }\n            else\n            {\n                return tagName.name;\n            }\n        }\n    }\n\n    private onTouchedCallback:() => void = ():void => undefined;\n\n    private onChangeCallback:(_:any) => void = (selectedTagsList:Array<TerraTagInterface>):void => undefined;\n}\n"]}