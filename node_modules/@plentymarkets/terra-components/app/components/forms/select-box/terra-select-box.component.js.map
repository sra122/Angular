{"version":3,"sources":["app/components/forms/select-box/terra-select-box.component.ts"],"names":[],"mappings":"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","file":"terra-select-box.component.js","sourcesContent":["import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges\n} from '@angular/core';\nimport { TerraSelectBoxValueInterface } from './data/terra-select-box.interface';\nimport {\n    FormControl,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport {\n    isNull,\n    isNullOrUndefined\n} from 'util';\nimport { StringHelper } from '../../../helpers/string.helper';\n\n@Component({\n    selector:  'terra-select-box',\n    styles:    [require('./terra-select-box.component.scss')],\n    template:  require('./terra-select-box.component.html'),\n    providers: [\n        {\n            provide:     NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TerraSelectBoxComponent),\n            multi:       true\n        }\n    ]\n})\nexport class TerraSelectBoxComponent implements OnInit, OnChanges\n{\n    @Input()\n    public inputName:string;\n\n    @Input()\n    public inputIsRequired:boolean;\n\n    @Input()\n    public inputIsDisabled:boolean;\n\n    @Input()\n    public inputIsSmall:boolean;\n\n    @Input()\n    public inputOpenOnTop:boolean;\n\n    @Input()\n    public inputTooltipText:string;\n\n    @Input()\n    public inputTooltipPlacement:string;\n\n    @Input()\n    public inputListBoxValues:Array<TerraSelectBoxValueInterface>;\n\n    /**\n     * @deprecated\n     */\n    @Output()\n    public outputValueChanged:EventEmitter<TerraSelectBoxValueInterface> = new EventEmitter<TerraSelectBoxValueInterface>();\n\n    @Output()\n    public inputSelectedValueChange:EventEmitter<TerraSelectBoxValueInterface> = new EventEmitter<TerraSelectBoxValueInterface>();\n\n    public isValid:boolean;\n\n    protected selectedValue:TerraSelectBoxValueInterface;\n    protected hasLabel:boolean;\n\n    private _value:number | string;\n    private _toggleOpen:boolean;\n    private isInit:boolean;\n    private clickListener:(event:Event) => void;\n\n    /**\n     * @deprecated\n     * @param value\n     */\n    @Input()\n    public set inputSelectedValue(value:number | string)\n    {\n        console.warn('inputSelectedValue is deprecated. It will be removed in one of the upcoming releases. Please use ngModel instead.');\n        if(!isNullOrUndefined(value))\n        {\n            this.inputListBoxValues\n                .forEach((item:TerraSelectBoxValueInterface) =>\n                {\n                    if(item.value === value)\n                    {\n                        this.selectedValue = item;\n                    }\n                });\n\n            this.inputSelectedValueChange.emit(this.selectedValue.value);\n        }\n    }\n\n    public get inputSelectedValue():number | string\n    {\n        return this.selectedValue.value;\n    }\n\n    /**\n     *\n     * @param elementRef\n     */\n    constructor(private elementRef:ElementRef)\n    {\n        this.clickListener = (event:Event):void =>\n        {\n            this.clickedOutside(event);\n        };\n\n        this.isInit = false;\n        this.inputTooltipPlacement = 'top';\n        this.inputIsSmall = false;\n        this.inputOpenOnTop = false;\n    }\n\n    public ngOnInit():void\n    {\n        this.isValid = true;\n        this._toggleOpen = false;\n        this.hasLabel = !isNull(this.inputName);\n        this.isInit = true;\n    }\n\n    /**\n     *\n     * @param changes\n     */\n    public ngOnChanges(changes:SimpleChanges):void\n    {\n        if(this.isInit === true\n           && changes['inputListBoxValues']\n           && changes['inputListBoxValues'].currentValue.length > 0\n           && !this.inputListBoxValues.find((x:TerraSelectBoxValueInterface):boolean => this.selectedValue === x))\n        {\n            this.select(this.inputListBoxValues[0]);\n        }\n    }\n\n    public registerOnChange(fn:(_:any) => void):void\n    {\n        this.onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn:() => void):void\n    {\n        this.onTouchedCallback = fn;\n    }\n\n    /**\n     *\n     * Two way data binding by ngModel\n     */\n    private onTouchedCallback:() => void = ():void => undefined;\n\n    private onChangeCallback:(_:any) => void = (_:any):void => undefined;\n\n    public writeValue(value:any):void\n    {\n        this.value = value;\n    }\n\n    public get emptyValueSelected():boolean\n    {\n        return isNullOrUndefined(this.selectedValue) ||\n               (StringHelper.isNullUndefinedOrEmpty(this.selectedValue.caption.toString()) &&\n                StringHelper.isNullUndefinedOrEmpty(this.selectedValue.icon));\n    }\n\n    public get value():any\n    {\n        return this._value;\n    }\n\n    public set value(value:any)\n    {\n        this._value = value;\n\n        if(!isNullOrUndefined(value))\n        {\n            this.inputListBoxValues\n                .forEach((item:TerraSelectBoxValueInterface) =>\n                {\n                    if(item.value === value)\n                    {\n                        this.selectedValue = item;\n                    }\n                });\n        }\n        else if(!isNullOrUndefined(this.inputListBoxValues[0]))\n        {\n            this.selectedValue = this.inputListBoxValues[0];\n            this.onTouchedCallback();\n            this.onChangeCallback(this.inputListBoxValues[0].value);\n        }\n    }\n\n    private set toggleOpen(value:boolean)\n    {\n        if(this._toggleOpen !== value && value === true)\n        {\n            document.addEventListener('click', this.clickListener, true);\n        }\n        else if(this._toggleOpen !== value && value === false)\n        {\n            document.removeEventListener('click', this.clickListener);\n        }\n\n        this._toggleOpen = value;\n    }\n\n    private get toggleOpen():boolean\n    {\n        return this._toggleOpen;\n    }\n\n    /**\n     *\n     * @param event\n     */\n    private clickedOutside(event:Event):void\n    {\n        if(!this.elementRef.nativeElement.contains(event.target))\n        {\n            this.toggleOpen = false;\n        }\n    }\n\n    private onClick(evt:Event):void\n    {\n        evt.stopPropagation(); // prevents the click listener on the document to be fired right after\n        this.toggleOpen = !this.toggleOpen;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    private select(value:TerraSelectBoxValueInterface):void\n    {\n        if(isNullOrUndefined(this.selectedValue) || this.selectedValue.value !== value.value)\n        {\n            this.onChangeCallback(value.value);\n            this.outputValueChanged.emit(value);\n        }\n\n        this.selectedValue = value;\n        this.onTouchedCallback();\n    }\n\n    public validate(formControl:FormControl):void\n    {\n        if(formControl.valid)\n        {\n            this.isValid = true;\n        }\n        else\n        {\n            if(!this.inputIsDisabled)\n            {\n                this.isValid = false;\n\n                // if(this.inputIsRequired && (isNullOrUndefined(this.value) || this.value.length == 0))\n                // {\n                //    let emptyMessage:string;\n                //\n                //    if(!this.inputEmptyMessage || this.inputEmptyMessage.length == 0)\n                //    {\n                //        //// TODO i18n\n                //        // emptyMessage = 'Mach eine Eingabe!';\n                //\n                //    }\n                //    else\n                //    {\n                //        emptyMessage = this.inputEmptyMessage;\n                //\n                //        this.alert.addAlert({\n                //                                 msg:              emptyMessage,\n                //                                 closable:         true,\n                //                                 type:             'danger',\n                //                                 dismissOnTimeout: 0\n                //                             });\n                //    }\n                // }\n                // else if(!isNullOrUndefined(this.value) && this.value.length > 0)\n                // {\n                //    let invalidMessage:string;\n                //\n                //    if(!this.inputInvalidMessage || this.inputInvalidMessage.length == 0)\n                //    {\n                //        //// TODO i18n\n                //        // invalidMessage = 'Eingabe ungültig!';\n                //    }\n                //    else\n                //    {\n                //        invalidMessage = this.inputInvalidMessage;\n                //\n                //        this.alert.addAlert({\n                //                                 msg:              invalidMessage,\n                //                                 closable:         true,\n                //                                 type:             'danger',\n                //                                 dismissOnTimeout: 0\n                //                             });\n                //    }\n                // }\n            }\n        }\n    }\n}\n"]}