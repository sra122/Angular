import { EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import { TerraDataTableHeaderCellInterface } from './cell/terra-data-table-header-cell.interface';
import { TerraDataTableRowInterface } from './row/terra-data-table-row.interface';
import { TerraDataTableCellInterface } from './cell/terra-data-table-cell.interface';
import { TerraBaseService } from '../../../service/terra-base.service';
import { TerraBaseData } from '../../data/terra-base.data';
import { TerraPagerInterface } from '../../pager/data/terra-pager.interface';
import { TerraCheckboxComponent } from '../../forms/checkbox/terra-checkbox.component';
import { TerraButtonInterface } from '../../buttons/button/data/terra-button.interface';
import { TerraSelectBoxValueInterface } from '../../forms/select-box/data/terra-select-box.interface';
import { TerraAlertComponent } from '../../alert/terra-alert.component';
export declare class TerraDataTableComponent<S extends TerraBaseService, D extends TerraBaseData, I extends TerraPagerInterface> implements OnChanges {
    viewChildHeaderCheckbox: TerraCheckboxComponent;
    inputService: S;
    inputDataType: string;
    inputHasCheckboxes: boolean;
    inputHasPager: boolean;
    inputHasInitialLoading: boolean;
    inputNoResultTextPrimary: string;
    inputNoResultTextSecondary: string;
    inputNoResultButtons: Array<TerraButtonInterface>;
    inputShowGroupFunctions: boolean;
    inputGroupFunctionExecuteButtonIsDisabled: boolean;
    outputDoPagingEvent: EventEmitter<TerraPagerInterface>;
    outputRowCheckBoxChanged: EventEmitter<TerraDataTableRowInterface<D>>;
    outputGroupFunctionExecuteButtonClicked: EventEmitter<Array<TerraDataTableRowInterface<D>>>;
    headerList: Array<TerraDataTableHeaderCellInterface>;
    pagingData: TerraPagerInterface;
    pagingSize: Array<TerraSelectBoxValueInterface>;
    onSuccessFunction: (res: I) => void;
    defaultPagingSize: number;
    TerraRefTypeEnum: object;
    protected isHeaderCheckboxChecked: boolean;
    protected initialLoadingMessage: string;
    protected alert: TerraAlertComponent;
    protected langPrefix: string;
    protected requestPending: boolean;
    private _rowList;
    private _selectedRowList;
    /**
     * @deprecated
     */
    private hasCheckboxes;
    constructor();
    rowList: Array<TerraDataTableRowInterface<D>>;
    private readonly getCollapsedState;
    ngOnChanges(changes: SimpleChanges): void;
    onHeaderCheckboxChange(isChecked: boolean): void;
    onRowCheckboxChange(isChecked: boolean, row: TerraDataTableRowInterface<D>): void;
    checkTooltipPlacement(placement: string): string;
    rowClicked(cell: TerraDataTableCellInterface, clickedRow: TerraDataTableRowInterface<D>): void;
    getCellDataType(data: any): string;
    onGroupFunctionExecuteButtonClicked(event: Event): void;
    private changeRowState(isChecked, rowToChange);
    deleteRow(rowToDelete: TerraDataTableRowInterface<D>): void;
    readonly selectedRowList: Array<TerraDataTableRowInterface<D>>;
    doPaging(pagerData: TerraPagerInterface): void;
    doSearch(restCall: Observable<I>): void;
    protected getTextAlign(item: TerraDataTableHeaderCellInterface): string;
}
