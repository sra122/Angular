import { ElementRef, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { TerraSimpleTableHeaderCellInterface } from './cell/terra-simple-table-header-cell.interface';
import { TerraSimpleTableRowInterface } from './row/terra-simple-table-row.interface';
import { TerraCheckboxComponent } from '../../forms/checkbox/terra-checkbox.component';
export declare class TerraSimpleTableComponent<D> implements OnChanges {
    private elementRef;
    inputHeaderList: Array<TerraSimpleTableHeaderCellInterface>;
    inputRowList: Array<TerraSimpleTableRowInterface<D>>;
    inputUseHighlighting: boolean;
    inputIsStriped: boolean;
    inputHasCheckboxes: boolean;
    inputEnableHotkeys: boolean;
    inputHighlightedRow: TerraSimpleTableRowInterface<D>;
    outputHeaderCheckBoxChanged: EventEmitter<boolean>;
    outputRowCheckBoxChanged: EventEmitter<TerraSimpleTableRowInterface<D>>;
    outputRowClicked: EventEmitter<TerraSimpleTableRowInterface<D>>;
    outputHighlightedRowChange: EventEmitter<TerraSimpleTableRowInterface<D>>;
    outputSelectedRowsChange: EventEmitter<Array<TerraSimpleTableRowInterface<D>>>;
    viewChildHeaderCheckbox: TerraCheckboxComponent;
    scrollContainer: ElementRef;
    onRowListChange: EventEmitter<void>;
    readonly selectedRowList: Array<TerraSimpleTableRowInterface<D>>;
    protected headerCheckbox: {
        checked: boolean;
        isIndeterminate: boolean;
    };
    constructor(elementRef: ElementRef);
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * @deprecated
     *
     * @returns {Array<TerraSimpleTableHeaderCellInterface>}
     */
    /**
     * @deprecated
     *
     * @param value
     */
    headerList: Array<TerraSimpleTableHeaderCellInterface>;
    /**
     * @deprecated
     *
     * @returns {Array<TerraSimpleTableRowInterface>}
     */
    rowList: Array<TerraSimpleTableRowInterface<D>>;
    protected checkTooltipPlacement(placement: string): string;
    protected onHeaderCheckboxChange(): void;
    protected onRowCheckboxChange(row: TerraSimpleTableRowInterface<D>): void;
    private triggerOutputSelectedRowsChange();
    private checkHeaderCheckbox();
    private uncheckHeaderCheckbox();
    private setHeaderCheckboxIndeterminate();
    private updateHeaderCheckboxState();
    private selectAllRows();
    private resetSelectedRows();
    protected onCheckboxClick(event: Event): void;
    protected onRowClick(row: TerraSimpleTableRowInterface<D>): void;
    protected onKeydown(event: KeyboardEvent): void;
    private highlightSiblingRow(nextSibling);
    protected getTextAlign(item: TerraSimpleTableHeaderCellInterface): string;
}
