{"version":3,"sources":["app/components/dynamic-module-loader/terra-dynamic-module-loader.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAcuB;AAEvB,6BAAyC;AAQzC;IA0BI,2CAAoB,WAAoB;QAApB,gBAAW,GAAX,WAAW,CAAS;IAExC,CAAC;IAEM,2DAAe,GAAtB;QAEI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAkC,CAAC;QAC5D,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,uDAAW,GAAlB,UAAmB,OAAqB;QAEpC,IAAG,OAAO,CAAC,cAAc,CAAC,aAAa,CAAC,EACxC;YACI,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAChC;IACL,CAAC;IAEM,uDAAW,GAAlB;QAEI,IAAG,IAAI,CAAC,MAAM,EACd;YACI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;SACzB;IACL,CAAC;IAEO,2DAAe,GAAvB;QAAA,iBAyBC;QAvBG,IAAI,CAAC,WAAW,CAAC,kCAAkC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;aAC1E,IAAI,CAAC,UAAC,mBAAqD;YAExD,mBAAmB,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAC,OAA6B;gBAErE,IAAG,KAAI,CAAC,sBAAsB,KAAK,OAAO,CAAC,aAAa,CAAC,IAAI,EAC7D;oBACI,uBAAuB;oBACvB,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;oBAE5D,6DAA6D;oBAC7D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,GAAG,KAAI,CAAC,SAAS,CAAC;oBAExD,gDAAgD;oBAChD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAI,CAAC,cAAc,CAAC,CAAC,gDAAgD;oBAEtG,oDAAoD;oBACpD,KAAI,CAAC,qBAAqB,EAAE,CAAC;iBAChC;YACL,CAAC,CACJ,CAAC;QAEN,CAAC,CAAC,CAAC;IACX,CAAC;IAEO,iEAAqB,GAA7B;QAAA,iBAcC;QAZG,IAAG,CAAC,wBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,MAAM,EACtD;YACI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,KAA+C;gBAEjE,IAAG,CAAC,wBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,wBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,EAC9D;oBACI,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;iBAClD;YACL,CAAC,CACJ,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;SACjD;IACL,CAAC;IA1FD;QADC,gBAAS,CAAC,iBAAiB,EAAE,EAAC,IAAI,EAAE,uBAAgB,EAAC,CAAC;kCAChC,uBAAgB;8EAAC;IAGxC;QADC,YAAK,EAAE;;0EACe;IAGvB;QADC,YAAK,EAAE;;qFAC6B;IAMrC;QADC,YAAK,EAAE;;6EACkB;IAG1B;QADC,YAAK,EAAE;kCACW,KAAK;0EAA4C;IAGpE;QADC,YAAK,EAAE;;wEACsC;IArBrC,iCAAiC;QAL7C,gBAAS,CAAC;YACP,QAAQ,EAAE,6BAA6B;YACvC,QAAQ,EAAE,OAAO,CAAC,8CAA8C,CAAC;YACjE,MAAM,EAAI,CAAC,OAAO,CAAC,8CAA8C,CAAC,CAAC;SACtE,CAAC;yCA2BkC,eAAQ;OA1B/B,iCAAiC,CA8F7C;IAAD,wCAAC;CA9FD,AA8FC,IAAA;AA9FY,8EAAiC","file":"terra-dynamic-module-loader.component.js","sourcesContent":["import {\n    AfterViewInit,\n    Compiler,\n    Component,\n    ComponentFactory,\n    ComponentRef,\n    Input,\n    ModuleWithComponentFactories,\n    ModuleWithProviders,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { TerraMultiSplitViewInterface } from '../split-view/multi/interfaces/terra-multi-split-view.interface';\nimport { isNullOrUndefined } from 'util';\nimport { TerraDynamicLoadedComponentInputInterface } from './data/terra-dynamic-loaded-component-input.interface';\n\n@Component({\n    selector: 'terra-dynamic-module-loader',\n    template: require('./terra-dynamic-module-loader.component.html'),\n    styles:   [require('./terra-dynamic-module-loader.component.scss')]\n})\nexport class TerraDynamicModuleLoaderComponent implements AfterViewInit, OnChanges, OnDestroy\n{\n    @ViewChild('viewChildTarget', {read: ViewContainerRef})\n    public viewChildTarget:ViewContainerRef;\n\n    @Input()\n    public inputModule:any;\n\n    @Input()\n    public inputMainComponentName:string;\n\n    /**\n     * @deprecated use `inputInputs` instead\n     */\n    @Input()\n    public inputParameter:any; // TODO: remove input if old split-view is removed\n\n    @Input()\n    public inputInputs:Array<TerraDynamicLoadedComponentInputInterface>;\n\n    @Input()\n    public inputView:TerraMultiSplitViewInterface;\n    private resolvedData:ModuleWithProviders;\n\n    private cmpRef:ComponentRef<any>;\n\n    constructor(private jitCompiler:Compiler)\n    {\n    }\n\n    public ngAfterViewInit():void\n    {\n        this.resolvedData = this.inputModule as ModuleWithProviders;\n        this.updateComponent();\n    }\n\n    public ngOnChanges(changes:SimpleChanges):void\n    {\n        if(changes.hasOwnProperty('inputInputs'))\n        {\n            this.assignInputProperties();\n        }\n    }\n\n    public ngOnDestroy():void\n    {\n        if(this.cmpRef)\n        {\n            this.cmpRef.destroy();\n        }\n    }\n\n    private updateComponent():void\n    {\n        this.jitCompiler.compileModuleAndAllComponentsAsync(this.resolvedData.ngModule)\n            .then((moduleWithFactories:ModuleWithComponentFactories<any>) =>\n            {\n                moduleWithFactories.componentFactories.forEach((factory:ComponentFactory<any>):void =>\n                    {\n                        if(this.inputMainComponentName === factory.componentType.name)\n                        {\n                            // create the component\n                            this.cmpRef = this.viewChildTarget.createComponent(factory);\n\n                            // pass the instance of the loaded view back to the component\n                            this.cmpRef.instance.splitViewInstance = this.inputView;\n\n                            // pass the delivered parameter to the component\n                            this.cmpRef.instance.parameter = this.inputParameter; // TODO: deprecated if old split view is removed\n\n                            // add inputs to component for data binding purposes\n                            this.assignInputProperties();\n                        }\n                    }\n                );\n\n            });\n    }\n\n    private assignInputProperties():void\n    {\n        if(!isNullOrUndefined(this.inputInputs) && this.cmpRef)\n        {\n            this.inputInputs.forEach((input:TerraDynamicLoadedComponentInputInterface) =>\n                {\n                    if(!isNullOrUndefined(input) && !isNullOrUndefined(input.name))\n                    {\n                        this.cmpRef.instance[input.name] = input.value;\n                    }\n                }\n            );\n            this.cmpRef.changeDetectorRef.detectChanges();\n        }\n    }\n}\n"]}