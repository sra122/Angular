import { AfterContentChecked, OnInit } from '@angular/core';
import { TranslationService } from 'angular-l10n';
import { TerraNestedDataPickerBaseService } from './service/terra-nested-data-picker-base.service';
import { TerraNodeTreeConfig } from '../../components/tree/node-tree/data/terra-node-tree.config';
import { NestedPagerDataInterface } from './data/nested-pager-data.interface';
export declare class TerraNestedDataPickerComponent implements OnInit, AfterContentChecked {
    translation: TranslationService;
    nestedTreeConfig: TerraNodeTreeConfig<{}>;
    /**
     * @description Service, that is used to request the nested data from the server
     */
    inputNestedService: TerraNestedDataPickerBaseService<{}>;
    inputIsDisabled: boolean;
    /**
     * @description Tooltip that is shown on the TextInput
     */
    inputTooltipText: string;
    inputName: string;
    displayResetButton: boolean;
    displaySearch: boolean;
    toggleTree: boolean;
    isNotInitialCall: boolean;
    value: number | string;
    private inputDataService;
    private completeNestedData;
    private nestedDataName;
    private nestedList;
    constructor(translation: TranslationService, nestedTreeConfig: TerraNodeTreeConfig<{}>);
    ngAfterContentChecked(): void;
    ngOnInit(): void;
    writeValue(value: any): void;
    onSelectNode(): void;
    reset(): void;
    private updateCompleteNestedData(nested);
    onBlur(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    showTree(): void;
    private getNestedData(parentId);
    private getNestedDataByParent(parentNode);
    private getNestedDataByParentId(parentId);
    onTouchedCallback: () => void;
    onChangeCallback: (_: any) => void;
    addNodes(nestedData: NestedPagerDataInterface, parentId: number | string): void;
}
