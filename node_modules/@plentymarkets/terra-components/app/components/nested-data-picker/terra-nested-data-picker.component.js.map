{"version":3,"sources":["app/components/nested-data-picker/terra-nested-data-picker.component.ts"],"names":[],"mappings":"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","file":"terra-nested-data-picker.component.js","sourcesContent":["import {\n    AfterContentChecked,\n    Component,\n    forwardRef,\n    Input,\n    OnInit\n} from '@angular/core';\nimport { TranslationService } from 'angular-l10n';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NestedDataTreeConfig } from './config/nested-data-tree.config';\nimport { NestedDataInterface } from './data/nested-data.interface';\nimport { TerraNodeInterface } from '../tree/node-tree/data/terra-node.interface';\nimport { isNullOrUndefined } from 'util';\nimport { NestedValueInterface } from './data/nested-value.interface';\nimport { TerraNestedDataPickerBaseService } from './service/terra-nested-data-picker-base.service';\nimport { TerraNodeTreeConfig } from '../../components/tree/node-tree/data/terra-node-tree.config';\nimport { Observable } from 'rxjs/Observable';\nimport { NestedDetailDataInterface } from './data/nested-detail-data.interface';\nimport { NestedPagerDataInterface } from './data/nested-pager-data.interface';\n\n@Component({\n    selector:  'terra-nested-data-picker',\n    template:  require('./terra-nested-data-picker.component.html'),\n    styles:    [require('./terra-nested-data-picker.component.scss')],\n    providers: [\n        {\n            provide:     NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TerraNestedDataPickerComponent),\n            multi:       true\n        },\n        NestedDataTreeConfig,\n        TerraNodeTreeConfig\n    ]\n})\nexport class TerraNestedDataPickerComponent implements OnInit, AfterContentChecked\n{\n    /**\n     * @description Service, that is used to request the nested data from the server\n     */\n    @Input()\n    public inputNestedService:TerraNestedDataPickerBaseService<{}>;\n\n    @Input()\n    public inputIsDisabled:boolean;\n\n    /**\n     * @description Tooltip that is shown on the TextInput\n     */\n    @Input()\n    public inputTooltipText:string;\n\n    @Input()\n    public inputName:string;\n\n    @Input()\n    public displayResetButton:boolean = false;\n    @Input()\n    public displaySearch:boolean = false;\n\n    public toggleTree:boolean = false;\n    public isNotInitialCall:boolean;\n    public value:number | string;\n    private inputDataService:TerraNestedDataPickerBaseService<{}>;\n    private completeNestedData:NestedValueInterface;\n    private nestedDataName:string;\n    private nestedList:Array<TerraNodeInterface<NestedDataInterface<{}>>>;\n\n    constructor(public translation:TranslationService,\n                public nestedTreeConfig:TerraNodeTreeConfig<{}>)\n    {\n        this.value = null;\n        this.completeNestedData = {\n            id:               null,\n            isActive:         null,\n            isOpen:           null,\n            isVisible:        null,\n            name:             '',\n            tooltip:          '',\n            tooltipPlacement: '',\n        };\n        this.nestedList = [];\n        this.nestedDataName = '';\n        this.isNotInitialCall = false;\n    }\n\n    public ngAfterContentChecked():void\n    {\n        if(this.nestedTreeConfig.list.length === 0)\n        {\n            this.nestedTreeConfig.list = this.nestedList;\n        }\n    }\n\n    public ngOnInit():void\n    {\n        if(isNullOrUndefined(this.inputName))\n        {\n            this.inputName = this.translation.translate('terraNestedDataPicker.nested');\n        }\n        this.nestedTreeConfig.list = this.nestedList;\n        this.getNestedDataByParent(null);\n    }\n\n    // From ControlValueAccessor interface\n    public writeValue(value:any):void\n    {\n        if(!isNullOrUndefined(value))\n        {\n            this.inputNestedService.requestNestedDataById(value).subscribe((data:any) =>\n            {\n                if(isNullOrUndefined(this.nestedTreeConfig.findNodeById(value)))\n                {\n                    this.addNodes(data, null);\n                }\n\n                let nodeToSelect:TerraNodeInterface<NestedDataInterface<{}>> = this.nestedTreeConfig.findNodeById(value);\n\n                if(!isNullOrUndefined(nodeToSelect))\n                {\n                    this.nestedTreeConfig.currentSelectedNode = nodeToSelect;\n                    this.nestedDataName = this.nestedTreeConfig.currentSelectedNode.name;\n                }\n\n                this.value = value;\n\n                if(this.isNotInitialCall)\n                {\n                    this.updateCompleteNestedData(nodeToSelect);\n                    this.onTouchedCallback();\n                    this.onChangeCallback(this.value);\n                }\n            });\n        }\n    }\n\n    public onSelectNode():void\n    {\n        this.isNotInitialCall = true;\n        if(!isNullOrUndefined(this.nestedTreeConfig.currentSelectedNode))\n        {\n            this.nestedDataName = this.nestedTreeConfig.currentSelectedNode.name;\n            this.writeValue(this.nestedTreeConfig.currentSelectedNode.id);\n        }\n        this.toggleTree = !this.toggleTree;\n    }\n\n    public reset():void\n    {\n        this.nestedTreeConfig.currentSelectedNode = {\n            id:               null,\n            isActive:         null,\n            isOpen:           null,\n            isVisible:        null,\n            name:             '',\n            tooltip:          '',\n            tooltipPlacement: '',\n        };\n        this.nestedDataName = '';\n        this.value = 0;\n\n        this.onTouchedCallback();\n        this.onChangeCallback(this.value);\n    }\n\n    private updateCompleteNestedData(nested:TerraNodeInterface<NestedDataInterface<{}>>):void\n    {\n        this.completeNestedData.id = +nested.id;\n        this.completeNestedData.isActive = nested.isActive;\n        this.completeNestedData.isOpen = nested.isOpen;\n        this.completeNestedData.isVisible = nested.isVisible;\n        this.completeNestedData.name = nested.name;\n        this.completeNestedData.tooltip = nested.tooltip;\n        this.completeNestedData.tooltipPlacement = nested.tooltipPlacement;\n    }\n\n    // Set touched on blur\n    public onBlur():void\n    {\n        this.onTouchedCallback();\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn:any):void\n    {\n        this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn:any):void\n    {\n        this.onTouchedCallback = fn;\n    }\n\n    public showTree():void\n    {\n        this.toggleTree = !this.toggleTree;\n    }\n\n    private getNestedData(parentId:number | string):Observable<NestedPagerDataInterface>\n    {\n        let obs:Observable<NestedPagerDataInterface> = this.inputNestedService.requestNestedData(parentId);\n\n        obs.subscribe((data:NestedPagerDataInterface) =>\n        {\n            this.addNodes(data, parentId);\n        });\n\n        return obs;\n    }\n    private getNestedDataByParent(parentNode:NestedDataInterface<{}>):void\n    {\n        let id:number | string = null;\n\n        if(!isNullOrUndefined(parentNode))\n        {\n            id = parentNode.id;\n        }\n\n        this.inputNestedService.requestNestedData(id).subscribe((data:NestedPagerDataInterface) =>\n        {\n            if(isNullOrUndefined(parentNode))\n            {\n                this.addNodes(data, id);\n            }\n            else\n            {\n                this.addNodes(data, parentNode.id);\n            }\n        });\n    }\n    private getNestedDataByParentId(parentId:number | string):() => Observable<NestedPagerDataInterface>\n    {\n        return ():Observable<NestedPagerDataInterface> => this.getNestedData(parentId);\n    }\n    public onTouchedCallback:() => void = () => undefined;\n\n    public onChangeCallback:(_:any) => void = () => undefined;\n\n    public addNodes(nestedData:NestedPagerDataInterface, parentId:number | string):void\n    {\n\n        // List of Categories which will be turned into Nodes to add to the node tree\n        let entries:Array<{}> = nestedData.entries;\n\n        // Necessary for re-initializing of the Node Tree after data was loaded\n        if(this.nestedTreeConfig.list.length === 1 && this.nestedTreeConfig.list[0] === this.nestedTreeConfig.currentSelectedNode)\n        {\n            this.nestedTreeConfig.removeNodeById(this.nestedTreeConfig.currentSelectedNode.id);\n            this.nestedTreeConfig.list = [];\n        }\n\n        if(!isNullOrUndefined(entries))\n        {\n            entries.forEach((entry:NestedDataInterface<{}>) =>\n            {\n                let nestData:NestedDataInterface<{}> = entry;\n                let nestedDetail:NestedDetailDataInterface = null;\n\n                // If the node hasn't already been added the routine will be started\n                if(isNullOrUndefined(this.nestedTreeConfig.findNodeById(nestData.id)) && nestData.details.length > 0)\n                {\n                    nestedDetail = nestData.details[0];\n\n                    // Create Node to add to tree later\n                    let childNode:TerraNodeInterface<NestedDataInterface<{}>> = {\n                        id:               entry.id,\n                        name:             nestedDetail.name,\n                        isVisible:        true,\n                        tooltip:          'ID: ' + nestData.id,\n                        tooltipPlacement: 'top',\n                        value:            {\n                            data: nestData\n                        }\n                    };\n\n                    let parentNode:TerraNodeInterface<NestedDataInterface<{}>>;\n\n                    // If the category has a parent, the parent node is created from the parentId in the category data\n                    if(!isNullOrUndefined(nestData.parentId))\n                    {\n                        parentNode = this.nestedTreeConfig.findNodeById(nestData.parentId);\n                    }\n\n                    // If the parentNode is still null it is tried to create the parent node out of the given id\n                    if(isNullOrUndefined(parentNode))\n                    {\n                        if(isNullOrUndefined(parentId))\n                        {\n                            parentNode = null;\n                        }\n                        else\n                        {\n                            parentNode = this.nestedTreeConfig.findNodeById(parentId);\n                        }\n                    }\n                    // If the category has children the lazy-loading method will be added to the parent node\n                    if(nestData.hasChildren)\n                    {\n                        childNode.onLazyLoad = this.getNestedDataByParentId(childNode.id);\n                    }\n\n                    // The finished node is added to the node tree\n                    this.nestedTreeConfig.addNode(childNode, parentNode);\n                }\n            });\n        }\n        // Current List is updated\n        this.nestedList = this.nestedTreeConfig.list;\n        }\n\n}\n"]}