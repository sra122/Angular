"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var animations_1 = require("@angular/animations");
var util_1 = require("util");
var TerraPortletComponent = /** @class */ (function () {
    function TerraPortletComponent() {
        /**
         * @description If true, portlet gets highlighted on mouse hover.
         */
        this.inputHighlightPortlet = false;
        /**
         * @description If true, the portlet gets collapsable.
         */
        this.inputIsCollapsable = false;
        /**
         * @description If true, the portlet is collapsed (requires inputIsCollapsable = true).
         */
        this.inputCollapsed = false;
        /**
         * @description Sets the given buttons as a button group to the right side of the portlet header.
         */
        this.inputButtonList = [];
        this.inputCollapsedChange = new core_1.EventEmitter();
        this.inputPortletHeader = util_1.isNullOrUndefined(this.inputPortletHeader) ? '' : this.inputPortletHeader;
    }
    Object.defineProperty(TerraPortletComponent.prototype, "collapsedState", {
        get: function () {
            if (!this.inputIsCollapsable) {
                return 'expanded';
            }
            if (this.inputCollapsed) {
                return 'inputCollapsed';
            }
            return 'expanded';
        },
        enumerable: true,
        configurable: true
    });
    TerraPortletComponent.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (changes.hasOwnProperty('inputIsCollapsable') && !this.inputIsCollapsable) {
            this.inputCollapsed = false;
            setTimeout(function () {
                _this.inputCollapsedChange.emit(false);
            });
        }
    };
    /**
     * @description Changes the collapse state.
     */
    TerraPortletComponent.prototype.toggleCollapse = function () {
        this.inputCollapsed = !this.inputCollapsed;
        if (!this.inputIsCollapsable) {
            this.inputCollapsed = false;
        }
        this.inputCollapsedChange.emit(this.inputCollapsed);
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraPortletComponent.prototype, "inputHighlightPortlet", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraPortletComponent.prototype, "inputPortletHeader", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraPortletComponent.prototype, "inputIsCollapsable", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraPortletComponent.prototype, "inputCollapsed", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array)
    ], TerraPortletComponent.prototype, "inputButtonList", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], TerraPortletComponent.prototype, "inputCollapsedChange", void 0);
    TerraPortletComponent = __decorate([
        core_1.Component({
            selector: 'terra-portlet',
            styles: [require('./terra-portlet.component.scss')],
            template: require('./terra-portlet.component.html'),
            animations: [
                animations_1.trigger('collapsedState', [
                    animations_1.state('inputCollapsed', animations_1.style({
                        height: 0,
                        'padding-top': 0,
                        'padding-bottom': 0
                    })),
                    animations_1.state('expanded', animations_1.style({
                        height: '*'
                    })),
                    animations_1.transition('inputCollapsed <=> expanded', [
                        animations_1.animate(100)
                    ])
                ])
            ]
        }),
        __metadata("design:paramtypes", [])
    ], TerraPortletComponent);
    return TerraPortletComponent;
}());
exports.TerraPortletComponent = TerraPortletComponent;

//# sourceMappingURL=terra-portlet.component.js.map
