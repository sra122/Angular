{"version":3,"sources":["app/components/layouts/column-container/terra-two-columns-container.directive.ts"],"names":[],"mappings":"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","file":"terra-two-columns-container.directive.js","sourcesContent":["import {\n    Directive,\n    Host,\n    OnDestroy,\n    OnInit,\n    Optional\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Data,\n    NavigationEnd,\n    Router,\n    RouterEvent\n} from '@angular/router';\nimport { Event } from '@angular/router/src/events';\nimport { Observable } from 'rxjs/Observable';\nimport { TwoColumnHelper } from '../../../helpers/two-column.helper';\nimport { TerraTwoColumnsContainerComponent } from './terra-two-columns-container.component';\nimport { isNullOrUndefined } from 'util';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Directive({\n    selector: 'terra-2-col[mobileRouting]'\n})\nexport class TerraTwoColumnsContainerDirective implements OnInit, OnDestroy\n{\n    public subscription:Subscription;\n\n    private basePath:string;\n\n    constructor(private route:ActivatedRoute,\n                private router:Router,\n                @Host() @Optional() private twoColComponent:TerraTwoColumnsContainerComponent)\n    {\n        this.basePath = router.url;\n    }\n\n    public ngOnInit():void\n    {\n        let subscribable:Observable<Event> = this.router.events.filter((event:RouterEvent) =>\n        {\n            return event instanceof NavigationEnd && event.urlAfterRedirects === this.basePath;\n        });\n\n        this.subscription = subscribable.subscribe((event:NavigationEnd) =>\n        {\n            if(event.url !== event.urlAfterRedirects)\n            {\n                this.setColumnHidden('right');\n            }\n            else\n            {\n                this.setColumnHidden('left');\n            }\n        });\n\n        this.setColumnHidden('left');\n\n        this.route.data.subscribe((data:Data) =>\n        {\n            this.basePath = this.router.url;\n        });\n    }\n\n    public ngOnDestroy():void\n    {\n        this.subscription.unsubscribe();\n    }\n\n    private setColumnHidden(column:string):void\n    {\n        if(!isNullOrUndefined(this.twoColComponent))\n        {\n            if(column === 'right')\n            {\n                this.twoColComponent.leftColumn = TwoColumnHelper.leftRightColXS()\n                                                  + TwoColumnHelper.leftColMD(this.twoColComponent.leftColumnWidth)\n                                                  + TwoColumnHelper.leftColLG(this.twoColComponent.leftColumnWidth);\n                this.twoColComponent.rightColumn = TwoColumnHelper.leftRightHiddenXS()\n                                                   + TwoColumnHelper.rightColMD(this.twoColComponent.leftColumnWidth)\n                                                   + TwoColumnHelper.rightColLG(this.twoColComponent.leftColumnWidth);\n            }\n            else if(column === 'left')\n            {\n                this.twoColComponent.leftColumn = TwoColumnHelper.leftRightHiddenXS()\n                                                  + TwoColumnHelper.leftColMD(this.twoColComponent.leftColumnWidth)\n                                                  + TwoColumnHelper.leftColLG(this.twoColComponent.leftColumnWidth);\n                this.twoColComponent.rightColumn = TwoColumnHelper.leftRightColXS()\n                                                   + TwoColumnHelper.rightColMD(this.twoColComponent.leftColumnWidth)\n                                                   + TwoColumnHelper.rightColLG(this.twoColComponent.leftColumnWidth);\n            }\n        }\n    }\n}\n"]}