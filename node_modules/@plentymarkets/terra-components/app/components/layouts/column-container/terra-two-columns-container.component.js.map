{"version":3,"sources":["app/components/layouts/column-container/terra-two-columns-container.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAGuB;AACvB,wEAAqE;AAErE;;GAEG;AASH;IAgCI;QA3BQ,qBAAgB,GAAU,CAAC,CAAC;QA6BhC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,yCAAyC;IAC3F,CAAC;IA1BD,sBAAW,8DAAe;aAkB1B;YAEI,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC;aArBD,UAA2B,eAAsB;YAE7C,IAAG,eAAe,GAAG,EAAE,IAAI,eAAe,GAAG,CAAC,EAC9C;gBACI,OAAO,CAAC,KAAK,CAAC,4EAA4E;oBAC5E,oHAAoH,CAAC,CAAC;aACvI;YAED,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,mCAAe,CAAC,cAAc,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC;YAE/F,IAAI,CAAC,UAAU,GAAG,mCAAe,CAAC,cAAc,EAAE;kBAC9B,mCAAe,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC;kBAChD,mCAAe,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACrE,IAAI,CAAC,WAAW,GAAG,mCAAe,CAAC,cAAc,EAAE;kBAC9B,mCAAe,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC;kBACjD,mCAAe,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC3E,CAAC;;;OAAA;IAhBD;QADC,YAAK,EAAE;;;4EAiBP;IAzBQ,iCAAiC;QAR7C,gBAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,MAAM,EAAI,CAAC,OAAO,CAAC,8CAA8C,CAAC,CAAC;YACnE,QAAQ,EAAE,OAAO,CAAC,8CAA8C,CAAC;SACpE,CAAC;QACF;;WAEG;;;OACU,iCAAiC,CAoC7C;IAAD,wCAAC;CApCD,AAoCC,IAAA;AApCY,8EAAiC","file":"terra-two-columns-container.component.js","sourcesContent":["import {\n    Component,\n    Input\n} from '@angular/core';\nimport { TwoColumnHelper } from '../../../helpers/two-column.helper';\n\n/**\n * @author mfrank\n */\n@Component({\n    selector: 'terra-2-col',\n    styles:   [require('./terra-two-columns-container.component.scss')],\n    template: require('./terra-two-columns-container.component.html')\n})\n/**\n * @experimental TerraTwoColumnsContainerComponent is experimental and might be subject to drastic changes in the near future.\n */\nexport class TerraTwoColumnsContainerComponent\n{\n    public leftColumn:string;\n    public rightColumn:string;\n\n    private _leftColumnWidth:number = 2;\n\n\n    @Input()\n    public set leftColumnWidth(leftColumnWidth:number)\n    {\n        if(leftColumnWidth > 12 || leftColumnWidth < 1)\n        {\n            console.error('Given value for Input leftColumnWidth is lower than 1 or greater than 12. ' +\n                          'It has been limited to this range to prevent invalid rendering. Please check your input value to avoid this error.');\n        }\n\n        this._leftColumnWidth = Math.min(TwoColumnHelper.maxColumnWidth, Math.max(1, leftColumnWidth));\n\n        this.leftColumn = TwoColumnHelper.leftRightColXS()\n                          + TwoColumnHelper.leftColMD(this._leftColumnWidth)\n                          + TwoColumnHelper.leftColLG(this._leftColumnWidth);\n        this.rightColumn = TwoColumnHelper.leftRightColXS()\n                           + TwoColumnHelper.rightColMD(this._leftColumnWidth)\n                           + TwoColumnHelper.rightColLG(this._leftColumnWidth);\n    }\n\n    public get leftColumnWidth():number\n    {\n        return this._leftColumnWidth;\n    }\n\n    constructor()\n    {\n        this.leftColumnWidth = this._leftColumnWidth; // trigger calculation for default values\n    }\n}\n"]}