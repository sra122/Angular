"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var two_column_helper_1 = require("../../../helpers/two-column.helper");
/**
 * @author mfrank
 */
var TerraTwoColumnsContainerComponent = /** @class */ (function () {
    function TerraTwoColumnsContainerComponent() {
        this._leftColumnWidth = 2;
        this.leftColumnWidth = this._leftColumnWidth; // trigger calculation for default values
    }
    Object.defineProperty(TerraTwoColumnsContainerComponent.prototype, "leftColumnWidth", {
        get: function () {
            return this._leftColumnWidth;
        },
        set: function (leftColumnWidth) {
            if (leftColumnWidth > 12 || leftColumnWidth < 1) {
                console.error('Given value for Input leftColumnWidth is lower than 1 or greater than 12. ' +
                    'It has been limited to this range to prevent invalid rendering. Please check your input value to avoid this error.');
            }
            this._leftColumnWidth = Math.min(two_column_helper_1.TwoColumnHelper.maxColumnWidth, Math.max(1, leftColumnWidth));
            this.leftColumn = two_column_helper_1.TwoColumnHelper.leftRightColXS()
                + two_column_helper_1.TwoColumnHelper.leftColMD(this._leftColumnWidth)
                + two_column_helper_1.TwoColumnHelper.leftColLG(this._leftColumnWidth);
            this.rightColumn = two_column_helper_1.TwoColumnHelper.leftRightColXS()
                + two_column_helper_1.TwoColumnHelper.rightColMD(this._leftColumnWidth)
                + two_column_helper_1.TwoColumnHelper.rightColLG(this._leftColumnWidth);
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], TerraTwoColumnsContainerComponent.prototype, "leftColumnWidth", null);
    TerraTwoColumnsContainerComponent = __decorate([
        core_1.Component({
            selector: 'terra-2-col',
            styles: [require('./terra-two-columns-container.component.scss')],
            template: require('./terra-two-columns-container.component.html')
        })
        /**
         * @experimental TerraTwoColumnsContainerComponent is experimental and might be subject to drastic changes in the near future.
         */
        ,
        __metadata("design:paramtypes", [])
    ], TerraTwoColumnsContainerComponent);
    return TerraTwoColumnsContainerComponent;
}());
exports.TerraTwoColumnsContainerComponent = TerraTwoColumnsContainerComponent;

//# sourceMappingURL=terra-two-columns-container.component.js.map
