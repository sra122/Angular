{"version":3,"sources":["app/components/dynamic-component-loader/terra-dynamic-component-loader.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAauB;AACvB,6BAAyC;AAMzC;IAUI,8CAAoB,wBAAiD;QAAjD,6BAAwB,GAAxB,wBAAwB,CAAyB;IAErE,CAAC;IAEM,0DAAW,GAAlB,UAAmB,OAAqB;QAEpC,IAAG,OAAO,CAAC,gBAAgB,CAAC,EAC5B;YACI,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;IACL,CAAC;IAEM,8DAAe,GAAtB;QAEI,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,0DAAW,GAAlB;QAEI,IAAG,IAAI,CAAC,MAAM,EACd;YACI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;SACzB;IACL,CAAC;IAEO,8DAAe,GAAvB;QAEI,IAAG,CAAC,wBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,EAC1C;YACI,IAAI,gBAAgB,GAAyB,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAExH,IAAI,gBAAgB,GAAoB,IAAI,CAAC,eAAe,CAAC;YAC7D,gBAAgB,CAAC,KAAK,EAAE,CAAC;YAEzB,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;SACpE;IACL,CAAC;IA5CD;QADC,gBAAS,CAAC,iBAAiB,EAAE,EAAC,IAAI,EAAE,uBAAgB,EAAC,CAAC;kCAChC,uBAAgB;iFAAC;IAGxC;QADC,YAAK,EAAE;kCACc,WAAI;gFAAM;IANvB,oCAAoC;QAJhD,gBAAS,CAAC;YACP,QAAQ,EAAE,gCAAgC;YAC1C,QAAQ,EAAE,OAAO,CAAC,iDAAiD,CAAC;SACvE,CAAC;yCAW+C,+BAAwB;OAV5D,oCAAoC,CAgDhD;IAAD,2CAAC;CAhDD,AAgDC,IAAA;AAhDY,oFAAoC","file":"terra-dynamic-component-loader.component.js","sourcesContent":["import {\n    AfterViewInit,\n    Component,\n    ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n    selector: 'terra-dynamic-component-loader',\n    template: require('./terra-dynamic-component-loader.component.html'),\n})\nexport class TerraDynamicComponentLoaderComponent implements AfterViewInit, OnDestroy, OnChanges\n{\n    @ViewChild('viewChildTarget', {read: ViewContainerRef})\n    public viewChildTarget:ViewContainerRef;\n\n    @Input()\n    public inputComponent:Type<any>;\n\n    private cmpRef:ComponentRef<any>;\n\n    constructor(private componentFactoryResolver:ComponentFactoryResolver)\n    {\n    }\n\n    public ngOnChanges(changes:SimpleChanges):void\n    {\n        if(changes['inputComponent'])\n        {\n            this.ngOnDestroy();\n            this.updateComponent();\n        }\n    }\n\n    public ngAfterViewInit():void\n    {\n        this.updateComponent();\n    }\n\n    public ngOnDestroy():void\n    {\n        if(this.cmpRef)\n        {\n            this.cmpRef.destroy();\n        }\n    }\n\n    private updateComponent():void\n    {\n        if(!isNullOrUndefined(this.inputComponent))\n        {\n            let componentFactory:ComponentFactory<any> = this.componentFactoryResolver.resolveComponentFactory(this.inputComponent);\n\n            let viewContainerRef:ViewContainerRef = this.viewChildTarget;\n            viewContainerRef.clear();\n\n            this.cmpRef = viewContainerRef.createComponent(componentFactory);\n        }\n    }\n}\n"]}