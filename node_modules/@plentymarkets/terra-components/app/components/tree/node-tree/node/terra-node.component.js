"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var terra_node_tree_config_1 = require("../data/terra-node-tree.config");
var util_1 = require("util");
var TerraNodeComponent = /** @class */ (function () {
    function TerraNodeComponent() {
        this.tooltipPlacement = 'right';
    }
    TerraNodeComponent.prototype.ngOnInit = function () {
        if (!this.inputNode.tooltip) {
            this.tooltip = this.inputNode.name;
        }
        else {
            this.tooltip = this.inputNode.tooltip;
        }
        if (this.inputNode.tooltipPlacement) {
            this.tooltipPlacement = this.inputNode.tooltipPlacement;
        }
    };
    // handle the node click
    TerraNodeComponent.prototype.onNodeClick = function (event) {
        event.stopPropagation();
        // check if click function is set
        if (!util_1.isNullOrUndefined(this.inputNode.onClick)) {
            this.inputNode.onClick();
        }
        this.inputConfig.handleLazyLoading(this.inputNode);
        if (util_1.isNullOrUndefined(this.inputNode.selectable) || this.inputNode.selectable) {
            this.inputConfig.currentSelectedNode = this.inputNode;
        }
    };
    /**
     * @deprecated will be removed in the next major release.
     */
    TerraNodeComponent.prototype.onNodeDblClick = function (event) {
        event.stopPropagation();
        // check if click function is set
        if (!util_1.isNullOrUndefined(this.inputNode.onDblClick)) {
            this.inputNode.onDblClick();
        }
        this.inputConfig.handleLazyLoading(this.inputNode);
        if (util_1.isNullOrUndefined(this.inputNode.selectable) || this.inputNode.selectable) {
            this.inputConfig.currentSelectedNode = this.inputNode;
        }
    };
    TerraNodeComponent.prototype.handleIconClick = function (event) {
        event.stopPropagation();
        this.inputConfig.handleLazyLoading(this.inputNode);
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TerraNodeComponent.prototype, "inputNode", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", terra_node_tree_config_1.TerraNodeTreeConfig)
    ], TerraNodeComponent.prototype, "inputConfig", void 0);
    TerraNodeComponent = __decorate([
        core_1.Component({
            selector: 'terra-node',
            styles: [require('./terra-node.component.scss')],
            template: require('./terra-node.component.html')
        })
    ], TerraNodeComponent);
    return TerraNodeComponent;
}());
exports.TerraNodeComponent = TerraNodeComponent;

//# sourceMappingURL=terra-node.component.js.map
