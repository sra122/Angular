{"version":3,"sources":["app/components/tree/node-tree/example/terra-node-tree.component.example.ts"],"names":[],"mappings":"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","file":"terra-node-tree.component.example.js","sourcesContent":["import {\n    Component,\n    OnInit\n} from '@angular/core';\nimport { TerraNodeInterface } from '../data/terra-node.interface';\nimport { TerraNodeTreeConfig } from '../data/terra-node-tree.config';\n\nexport interface ExampleTreeData\n{\n    id:number;\n}\n\n@Component({\n    selector:  'terra-node-tree-example',\n    template:  require('./terra-node-tree.component.example.html'),\n    styles:    [require('./terra-node-tree.component.example.scss')],\n    providers: [TerraNodeTreeConfig]\n})\nexport class TerraNodeTreeComponentExample implements OnInit\n{\n    private nodeCounter:number = 0;\n\n\n    constructor(private nodeTreeConfig:TerraNodeTreeConfig<ExampleTreeData>)\n    {\n    }\n\n    public ngOnInit():void\n    {\n        this.createCompleteTree();\n    }\n\n    protected addNode():void\n    {\n        this.nodeTreeConfig.addNode({\n            name:      'Test' + this.nodeCounter,\n            id:        this.nodeCounter,\n            isVisible: true\n        });\n\n        this.nodeCounter++;\n    }\n\n    protected addExistingNode():void\n    {\n        this.nodeTreeConfig.addNode({\n            name: 'Test' + this.nodeCounter,\n            id:   0\n        });\n    }\n\n    protected findNodeById(id:string | number):void\n    {\n        let node:TerraNodeInterface<ExampleTreeData> = this.nodeTreeConfig.findNodeById(id);\n        alert(node.name);\n\n    }\n\n    protected deleteNodeById(id:string | number):void\n    {\n        this.nodeTreeConfig.removeNodeById(id);\n    }\n\n    protected getSelectedNode():void\n    {\n        console.log(this.nodeTreeConfig.currentSelectedNode);\n    }\n\n    protected deleteSelectedNode():void\n    {\n        this.nodeTreeConfig.removeNode(this.nodeTreeConfig.currentSelectedNode);\n    }\n\n    protected updateSelectedNode():void\n    {\n        this.nodeTreeConfig.currentSelectedNode.name = 'Terra';\n    }\n\n    protected updateNodeById(id:string | number):void\n    {\n        this.nodeTreeConfig.updateNodeById(id,\n            {\n                id:   id,\n                name: 'Terra'\n            });\n    }\n\n    protected addChildToNodeById(id:string | number):void\n    {\n        this.nodeTreeConfig.addChildToNodeById(id, {\n            id:        133,\n            name:      'myNewNode',\n            isVisible: true\n        });\n    }\n\n    protected setSelectedNode(id:string | number):void\n    {\n        this.nodeTreeConfig.setCurrentSelectedNodeById(id);\n    }\n\n    protected createCompleteTree():void\n    {\n        this.nodeTreeConfig.list = [\n            {\n                id:        11,\n                name:      'Test1',\n                isVisible: true,\n                children:  [\n                    {\n                        id:        12,\n                        name:      'Child1',\n                        isVisible: true,\n                        children:  [{\n                            id:        13,\n                            name:      'Subchild1',\n                            isVisible: true,\n                            onClick:   ():void =>\n                                       {\n                                           alert('Hello i am a click function');\n                                       }\n                        }]\n                    }\n                ]\n            },\n            {\n                id:        14,\n                name:      'Test2',\n                isVisible: true,\n            },\n            {\n                id:        15,\n                name:      'Test3',\n                isVisible: true,\n            }];\n    }\n\n    protected createTreeWithIcons():void\n    {\n        this.nodeTreeConfig.list = [\n            {\n                id:        1,\n                name:      'Ebay',\n                icon:      'icon-ebay',\n                isVisible: true,\n                children:  [{\n                    id:        2,\n                    name:      'Child1',\n                    isVisible: true,\n                    children:  [{\n                        id:        3,\n                        name:      'Subchild1',\n                        isVisible: true,\n                        onClick:   ():void =>\n                                   {\n                                       alert('Hello i am a click function');\n                                   }\n                    }]\n                }]\n            },\n            {\n                id:        4,\n                name:      'Ceres',\n                isVisible: true,\n                icon:      'icon-backend_ceres'\n            },\n            {\n                id:        5,\n                name:      'Amazon Prime',\n                isVisible: true,\n                icon:      'icon-ship_amaz_prime'\n\n            }];\n    }\n}\n"]}