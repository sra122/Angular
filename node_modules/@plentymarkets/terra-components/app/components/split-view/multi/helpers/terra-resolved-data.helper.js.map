{"version":3,"sources":["app/components/split-view/multi/helpers/terra-resolved-data.helper.ts"],"names":[],"mappings":";;AACA,6BAAyC;AAIzC;IAAA;IAiEA,CAAC;IA/DiB,uCAAe,GAA7B,UAA8B,gBAA0C,EAC1C,KAAS,EACT,IAAiC;QAE3D,IAAI,WAAW,GAA6C;YACxD,IAAI,EAAG,gBAAgB,CAAC,QAAQ,CAAC,GAAG;YACpC,KAAK,EAAE,KAAK;SACf,CAAC;QAEF,IAAI,YAAY,GAAyB;YACrC,OAAO,EAAG,gBAAgB,CAAC,OAAO;YAClC,QAAQ,EAAE,CAAC,WAAW,CAAC;SAC1B,CAAC;QAEF,IAAG,wBAAiB,CAAC,IAAI,CAAC,EAC1B;YACI,OAAO,CAAC,YAAY,CAAC,CAAC;SACzB;QAED,IAAI,mBAAmB,GAAyB,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC/G,IAAG,mBAAmB,EACtB;YACI,IAAG,wBAAiB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAClD;gBACI,mBAAmB,CAAC,QAAQ,GAAG,CAAC,WAAW,CAAC,CAAC;aAChD;iBAED;gBACI,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAClD;SACJ;aAED;YACI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC3B;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAEa,iDAAyB,GAAvC,UAAwC,OAAc,EAAE,gBAA6C;QAEjG,IAAG,wBAAiB,CAAC,OAAO,CAAC,IAAI,wBAAiB,CAAC,gBAAgB,CAAC,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EACrG;YACI,OAAO,SAAS,CAAC;SACpB;QAED,OAAO,gBAAgB,CAAC,IAAI,CAAC,UAAC,YAAkC,IAAK,OAAA,YAAY,CAAC,OAAO,KAAK,OAAO,EAAhC,CAAgC,CAAC,CAAC;IAC3G,CAAC;IAEa,iDAAyB,GAAvC,UAAwC,OAAc,EAAE,UAAiB,EACjC,gBAA6C;QAEjF,IAAI,YAAY,GAAyB,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;QAEnG,IAAG,wBAAiB,CAAC,UAAU,CAAC,EAChC;YACI,OAAO,SAAS,CAAC;SACpB;QAED,OAAO,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,KAA+C;YAC9E,OAAA,KAAK,CAAC,IAAI,KAAK,UAAU;QAAzB,CAAyB,CAC5B,CAAC;IACN,CAAC;IACL,8BAAC;AAAD,CAjEA,AAiEC,IAAA;AAjEY,0DAAuB","file":"terra-resolved-data.helper.js","sourcesContent":["import { ResolvedDataInterface } from '../interfaces/resolved-data.interface';\nimport { isNullOrUndefined } from 'util';\nimport { TerraDynamicLoadedComponentInputInterface } from '../../../dynamic-module-loader/data/terra-dynamic-loaded-component-input.interface';\nimport { ResolverListItemInterface } from '../interfaces/resolve-list-item.interface';\n\nexport class TerraResolvedDataHelper\n{\n    public static addResolvedData(resolverListItem:ResolverListItemInterface,\n                                  value:any,\n                                  data:Array<ResolvedDataInterface>):Array<ResolvedDataInterface>\n    {\n        let resolveData:TerraDynamicLoadedComponentInputInterface = {\n            name:  resolverListItem.resolver.key,\n            value: value\n        };\n\n        let resolvedData:ResolvedDataInterface = {\n            urlPart:  resolverListItem.urlPart,\n            resolves: [resolveData]\n        };\n\n        if(isNullOrUndefined(data))\n        {\n            return [resolvedData];\n        }\n\n        let alreadyResolvedData:ResolvedDataInterface = this.findResolvedDataByUrlPart(resolverListItem.urlPart, data);\n        if(alreadyResolvedData)\n        {\n            if(isNullOrUndefined(alreadyResolvedData.resolves))\n            {\n                alreadyResolvedData.resolves = [resolveData];\n            }\n            else\n            {\n                alreadyResolvedData.resolves.push(resolveData);\n            }\n        }\n        else\n        {\n            data.push(resolvedData);\n        }\n\n        return data;\n    }\n\n    public static findResolvedDataByUrlPart(urlPart:string, resolvedDataList:Array<ResolvedDataInterface>):ResolvedDataInterface\n    {\n        if(isNullOrUndefined(urlPart) || isNullOrUndefined(resolvedDataList) || resolvedDataList.length === 0)\n        {\n            return undefined;\n        }\n\n        return resolvedDataList.find((resolvedData:ResolvedDataInterface) => resolvedData.urlPart === urlPart);\n    }\n\n    public static findInputDataByResolveKey(urlPart:string, resolveKey:string,\n                                            resolvedDataList:Array<ResolvedDataInterface>):TerraDynamicLoadedComponentInputInterface\n    {\n        let resolvedData:ResolvedDataInterface = this.findResolvedDataByUrlPart(urlPart, resolvedDataList);\n\n        if(isNullOrUndefined(resolveKey))\n        {\n            return undefined;\n        }\n\n        return resolvedData.resolves.find((input:TerraDynamicLoadedComponentInputInterface) =>\n            input.name === resolveKey\n        );\n    }\n}\n"]}