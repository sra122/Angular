"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("util");
var TerraResolvedDataHelper = /** @class */ (function () {
    function TerraResolvedDataHelper() {
    }
    TerraResolvedDataHelper.addResolvedData = function (resolverListItem, value, data) {
        var resolveData = {
            name: resolverListItem.resolver.key,
            value: value
        };
        var resolvedData = {
            urlPart: resolverListItem.urlPart,
            resolves: [resolveData]
        };
        if (util_1.isNullOrUndefined(data)) {
            return [resolvedData];
        }
        var alreadyResolvedData = this.findResolvedDataByUrlPart(resolverListItem.urlPart, data);
        if (alreadyResolvedData) {
            if (util_1.isNullOrUndefined(alreadyResolvedData.resolves)) {
                alreadyResolvedData.resolves = [resolveData];
            }
            else {
                alreadyResolvedData.resolves.push(resolveData);
            }
        }
        else {
            data.push(resolvedData);
        }
        return data;
    };
    TerraResolvedDataHelper.findResolvedDataByUrlPart = function (urlPart, resolvedDataList) {
        if (util_1.isNullOrUndefined(urlPart) || util_1.isNullOrUndefined(resolvedDataList) || resolvedDataList.length === 0) {
            return undefined;
        }
        return resolvedDataList.find(function (resolvedData) { return resolvedData.urlPart === urlPart; });
    };
    TerraResolvedDataHelper.findInputDataByResolveKey = function (urlPart, resolveKey, resolvedDataList) {
        var resolvedData = this.findResolvedDataByUrlPart(urlPart, resolvedDataList);
        if (util_1.isNullOrUndefined(resolveKey)) {
            return undefined;
        }
        return resolvedData.resolves.find(function (input) {
            return input.name === resolveKey;
        });
    };
    return TerraResolvedDataHelper;
}());
exports.TerraResolvedDataHelper = TerraResolvedDataHelper;

//# sourceMappingURL=terra-resolved-data.helper.js.map
