"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
var terra_placement_enum_1 = require("../../../helpers/enums/terra-placement.enum");
var TerraToggleComponent = /** @class */ (function () {
    function TerraToggleComponent() {
        this.deactivated = new core_1.EventEmitter();
        this.activated = new core_1.EventEmitter();
        this.toggled = new core_1.EventEmitter();
        this.isActive = false;
        this.onTouchedCallback = function () { return undefined; };
        this.onChangeCallback = function (_) { return undefined; };
        this.inputTooltipPlacement = terra_placement_enum_1.TerraPlacementEnum.TOP;
    }
    TerraToggleComponent_1 = TerraToggleComponent;
    TerraToggleComponent.prototype.toggle = function () {
        if (!this.inputIsDisabled) {
            this.isActive = !this.isActive;
            this.toggled.emit(this.isActive);
            this.onChangeCallback(this.isActive);
            if (this.isActive) {
                this.activated.emit();
            }
            else {
                this.deactivated.emit();
            }
        }
    };
    // From ControlValueAccessor interface
    TerraToggleComponent.prototype.writeValue = function (value) {
        if (value !== this.isActive) {
            this.isActive = value;
        }
    };
    // From ControlValueAccessor interface
    TerraToggleComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    // From ControlValueAccessor interface
    TerraToggleComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraToggleComponent.prototype, "inputIsSmall", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraToggleComponent.prototype, "inputIsLarge", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraToggleComponent.prototype, "inputIsDisabled", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraToggleComponent.prototype, "inputIcon", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraToggleComponent.prototype, "inputIsAlignRight", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraToggleComponent.prototype, "inputIsHidden", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraToggleComponent.prototype, "inputTooltipText", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraToggleComponent.prototype, "inputTooltipPlacement", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], TerraToggleComponent.prototype, "deactivated", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], TerraToggleComponent.prototype, "activated", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], TerraToggleComponent.prototype, "toggled", void 0);
    TerraToggleComponent = TerraToggleComponent_1 = __decorate([
        core_1.Component({
            selector: 'terra-toggle',
            styles: [require('./terra-toggle.component.scss')],
            template: require('./terra-toggle.component.html'),
            providers: [
                {
                    provide: forms_1.NG_VALUE_ACCESSOR,
                    useExisting: core_1.forwardRef(function () { return TerraToggleComponent_1; }),
                    multi: true
                }
            ]
        }),
        __metadata("design:paramtypes", [])
    ], TerraToggleComponent);
    return TerraToggleComponent;
    var TerraToggleComponent_1;
}());
exports.TerraToggleComponent = TerraToggleComponent;

//# sourceMappingURL=terra-toggle.component.js.map
