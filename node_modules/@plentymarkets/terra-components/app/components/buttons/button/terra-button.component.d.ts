import { EventEmitter } from '@angular/core';
import { TerraPlacementEnum } from '../../../helpers/enums/terra-placement.enum';
export declare class TerraButtonComponent {
    /**
     * @description If true, the button gets the primary color blue. Default false.
     * @deprecated The button color depends on the input icon. Each icon has its own fixed color.
     */
    inputIsPrimary: boolean;
    /**
     * @description If true, the button gets the secondary color red. Default false.
     * @deprecated The button color depends on the input icon. Each icon has its own fixed color.
     */
    inputIsSecondary: boolean;
    /**
     * @description If true, the button gets the tertiary color green. Default false.
     * @deprecated The button color depends on the input icon. Each icon has its own fixed color.
     */
    inputIsTertiary: boolean;
    /** @description If true, the button will be small. Default false.*/
    inputIsSmall: boolean;
    /** @description If true, the button will be large. Default false.*/
    inputIsLarge: boolean;
    /** @description If true, the button will be disabled. Default false.*/
    inputIsDisabled: boolean;
    /** @description Set the caption.*/
    inputCaption: string;
    /** @description Set an icon (e.g. icon-save).*/
    inputIcon: string;
    /** @description Set the html native 'type' attribute, e.g., 'submit or 'reset'. Default 'button'.*/
    inputType: string;
    /** @description  If true, the button will be aligned to the right side of another element. Default false.*/
    inputIsAlignRight: boolean;
    /** @description If true, the button will be hidden. Default false.*/
    inputIsHidden: boolean;
    /** @description Set the tooltip.*/
    inputTooltipText: string;
    /** @description Set the tooltip placement (bottom, top, left, right). Default top.*/
    inputTooltipPlacement: TerraPlacementEnum;
    /**
     * @description If true, the button color changes to blue and indicates its active state. Default false.
     */
    inputIsActive: boolean;
    /**
     * @description If true, a triangular yellow flag appears at the upper right corner of the button to indicate, e.g.,
     * a state in which the button should be clicked by the user. Default false.
     */
    inputIsFlagged: boolean;
    /**
     * @description If true, a none-clickable element is set to optically divide a vertical button group. Default false.
     */
    inputIsDivider: boolean;
    /**
     * @description If true, the button will appear as a link which changes to blue on hover. Default false.
     */
    inputIsLink: boolean;
    inputIsHighlighted: boolean;
    /**
     * @description If true, the button gets full colored background (only for 'add' and 'delete' function group).
     * Default false
     */
    inputIsMajor: boolean;
    outputClicked: EventEmitter<Event>;
    protected currentTooltipPlacement: string;
    constructor();
    private click(event);
    private setTooltipPlacement(event);
}
