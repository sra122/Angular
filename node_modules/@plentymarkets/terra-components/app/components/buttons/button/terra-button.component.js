"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var util_1 = require("util");
var terra_placement_enum_1 = require("../../../helpers/enums/terra-placement.enum");
var TerraButtonComponent = /** @class */ (function () {
    function TerraButtonComponent() {
        this.outputClicked = new core_1.EventEmitter();
        this.inputTooltipPlacement = terra_placement_enum_1.TerraPlacementEnum.TOP;
        this.inputType = 'button';
        this.inputIsActive = false;
        this.inputIsFlagged = false;
        this.inputIsDivider = false;
        this.inputIsHidden = false;
        this.inputIsLink = false;
        this.inputIsDisabled = false;
        this.inputIsHighlighted = false;
        this.inputIsMajor = false;
        this.currentTooltipPlacement = this.inputTooltipPlacement;
    }
    TerraButtonComponent.prototype.click = function (event) {
        if (util_1.isNullOrUndefined(this.inputIsDisabled) || this.inputIsDisabled === false) {
            this.outputClicked.emit(event);
        }
    };
    TerraButtonComponent.prototype.setTooltipPlacement = function (event) {
        if (util_1.isNullOrUndefined(this.inputTooltipText)) {
            return;
        }
        var minimalDistanceToWindowEdge = 100;
        this.currentTooltipPlacement = this.inputTooltipPlacement;
        if (window.innerWidth - event.clientX < minimalDistanceToWindowEdge) {
            this.currentTooltipPlacement = terra_placement_enum_1.TerraPlacementEnum.LEFT;
        }
        else if (event.clientX < minimalDistanceToWindowEdge) {
            this.currentTooltipPlacement = terra_placement_enum_1.TerraPlacementEnum.RIGHT;
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsPrimary", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsSecondary", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsTertiary", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsSmall", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsLarge", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsDisabled", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraButtonComponent.prototype, "inputCaption", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraButtonComponent.prototype, "inputIcon", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraButtonComponent.prototype, "inputType", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsAlignRight", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsHidden", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraButtonComponent.prototype, "inputTooltipText", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraButtonComponent.prototype, "inputTooltipPlacement", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsActive", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsFlagged", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsDivider", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsLink", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsHighlighted", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraButtonComponent.prototype, "inputIsMajor", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], TerraButtonComponent.prototype, "outputClicked", void 0);
    TerraButtonComponent = __decorate([
        core_1.Component({
            selector: 'terra-button',
            styles: [require('./terra-button.component.scss')],
            template: require('./terra-button.component.html')
        }),
        __metadata("design:paramtypes", [])
    ], TerraButtonComponent);
    return TerraButtonComponent;
}());
exports.TerraButtonComponent = TerraButtonComponent;

//# sourceMappingURL=terra-button.component.js.map
