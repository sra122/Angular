{"version":3,"sources":["app/components/editors/base-editor/terra-base-editor.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAOuB;AACvB,6CAAkD;AAClD,wCAGwB;AACxB,6BAAyC;AAiBzC;IAkBI,kCAAsB,WAA8B,EAC9B,SAAoB;QADpB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAW;QA4ChC,qBAAgB,GAAmB,cAAW,OAAA,SAAS,EAAT,CAAS,CAAC;QACxD,sBAAiB,GAAmB,cAAW,OAAA,SAAS,EAAT,CAAS,CAAC;QA3C/D,yBAAyB;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC;QAC5E,IAAI,CAAC,OAAO,GAAG;YACX,OAAO,EAAE;gBACL,CAAC,MAAM;oBACN,QAAQ;oBACR,WAAW;oBACX,QAAQ,CAAC,CAAQ,kBAAkB;aACvC;SACJ,CAAC;IACN,CAAC;iCA/BQ,wBAAwB;IAiC1B,2CAAQ,GAAf;QAEI,IAAI,CAAC,cAAc,GAAG,wBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;QAC7F,oDAAoD;QACpD,IAAG,IAAI,CAAC,gBAAgB,EACxB;YACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC;SAC5C;IACL,CAAC;IAEM,6CAAU,GAAjB,UAAkB,KAAY;QAE1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAEM,mDAAgB,GAAvB,UAAwB,EAAkB;QAEtC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAEM,oDAAiB,GAAxB,UAAyB,EAAa;QAElC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAChC,CAAC;IAEM,wCAAK,GAAZ;QAEI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,KAAK,EAAE,CAAC;IACrE,CAAC;IA1DD;QADC,YAAK,EAAE;;sEACuB;IAG/B;QADC,YAAK,EAAE;;sEACuB;IAG/B;QADC,YAAK,EAAE;;sEACuB;IAG/B;QADC,YAAK,EAAE;;oEACqB;IAZpB,wBAAwB;QAfpC,gBAAS,CAAC;YACP,QAAQ,EAAG,mBAAmB;YAC9B,QAAQ,EAAG,OAAO,CAAC,oCAAoC,CAAC;YACxD,MAAM,EAAK;gBACP,OAAO,CAAC,oCAAoC,CAAC;gBAC7C,OAAO,CAAC,6BAA6B,CAAC;gBACtC,OAAO,CAAC,2BAA2B,CAAC;gBACpC,OAAO,CAAC,yCAAyC,CAAC,CAAC,QAAQ,EAAE;aAChE;YACD,SAAS,EAAE,CAAC;oBACR,OAAO,EAAM,yBAAiB;oBAC9B,WAAW,EAAE,0BAAwB;oBACrC,KAAK,EAAQ,IAAI;iBACpB,CAAC;SACL,CAAC;yCAmBoC,iCAAkB;YACpB,iBAAU;OAnBjC,wBAAwB,CAiEpC;IAAD,+BAAC;;CAjED,AAiEC,IAAA;AAjEY,4DAAwB","file":"terra-base-editor.component.js","sourcesContent":["import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\nimport { TranslationService } from 'angular-l10n';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n    selector:  'terra-base-editor',\n    template:  require('./terra-base-editor.component.html'),\n    styles:    [\n        require('./terra-base-editor.component.scss'),\n        require('quill/dist/quill.bubble.css'),\n        require('quill/dist/quill.snow.css'),\n        require('./terra-base-editor.component.glob.scss').toString()\n    ],\n    providers: [{\n        provide:     NG_VALUE_ACCESSOR,\n        useExisting: TerraBaseEditorComponent,\n        multi:       true\n    }]\n})\nexport class TerraBaseEditorComponent implements OnInit, ControlValueAccessor\n{\n    @Input()\n    public inputHeaderLabel:string;\n\n    @Input()\n    public inputPlaceholder:string;\n\n    @Input()\n    public inputFixedHeight:string;\n\n    @Input()\n    public inputMinHeight:string;\n\n    protected placeholder:string;\n    protected value:string;\n    protected modules:{ [index:string]:Object };\n\n    constructor(protected translation:TranslationService,\n                protected myElement:ElementRef)\n    {\n        // initialize placeholder\n        this.placeholder = this.translation.translate('terraNoteEditor.insertText');\n        this.modules = {\n            toolbar: [\n                ['bold',\n                 'italic',\n                 'underline',\n                 'strike']        // toggled buttons\n            ]\n        };\n    }\n\n    public ngOnInit():void\n    {\n        this.inputMinHeight = isNullOrUndefined(this.inputMinHeight) ? '100px' : this.inputMinHeight;\n        // overwrite default placeholder if input is defined\n        if(this.inputPlaceholder)\n        {\n            this.placeholder = this.inputPlaceholder;\n        }\n    }\n\n    public writeValue(value:string):void\n    {\n        this.value = value;\n    }\n\n    public registerOnChange(fn:(_:any) => void):void\n    {\n        this.onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn:() => void):void\n    {\n        this.onTouchedCallback = fn;\n    }\n\n    public focus():void\n    {\n        this.myElement.nativeElement.querySelector('.ql-editor').focus();\n    }\n\n    protected onChangeCallback:(_:any) => void = ():void => undefined;\n    protected onTouchedCallback:(_:any) => void = ():void => undefined;\n}\n"]}