{"version":3,"sources":["app/components/editors/syntax-editor/terra-syntax-editor.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAKuB;AACvB,iDAAoD;AACpD,iBAAe;AACf,8BAA4B;AAC5B,iCAA+B;AAC/B,0BAAwB;AACxB,iCAA+B;AAC/B,2BAAyB;AACzB,2BAAyB;AACzB,2BAAyB;AACzB,+BAA6B;AAC7B,2BAAyB;AACzB,0BAAwB;AACxB,2BAAyB;AACzB,kCAAgC;AAQhC;IAaI;QAEI,IAAI,CAAC,YAAY,GAAG;YAChB,QAAQ,EAAE,KAAK;SAClB,CAAC;IACN,CAAC;IAEM,oDAAe,GAAtB;QAEI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,CAAC;QACzC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,eAAe,GAAG,QAAQ,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IAEM,sDAAiB,GAAxB,UAAyB,IAAiC;QAEtD,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAC9D,CAAC;IAGD,sBAAW,uDAAe;aAA1B,UAA2B,KAAY;YAEnC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;;;OAAA;IAGD,sBAAW,iDAAS;aAMpB;YAEI,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;aATD,UAAqB,KAAY;YAE7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;;;OAAA;IAzCD;QADC,gBAAS,CAAC,WAAW,CAAC;kCACT,mCAAkB;8DAAC;IAGjC;QADC,YAAK,EAAE;;qEACqB;IAG7B;QADC,YAAK,EAAE;kCACY,MAAM;oEAAC;IAwB3B;QADC,YAAK,EAAE;;;qEAKP;IAGD;QADC,YAAK,EAAE;;;+DAKP;IA5CQ,0BAA0B;QALtC,gBAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;YAC/B,QAAQ,EAAE,OAAO,CAAC,sCAAsC,CAAC;YACzD,MAAM,EAAI,CAAC,OAAO,CAAC,sCAAsC,CAAC,CAAC;SAC9D,CAAC;;OACW,0BAA0B,CAkDtC;IAAD,iCAAC;CAlDD,AAkDC,IAAA;AAlDY,gEAA0B","file":"terra-syntax-editor.component.js","sourcesContent":["import {\n    AfterViewInit,\n    Component,\n    Input,\n    ViewChild\n} from '@angular/core';\nimport { AceEditorComponent } from 'ng2-ace-editor';\nimport 'brace';\nimport 'brace/theme/chrome';\nimport 'brace/mode/typescript';\nimport 'brace/mode/css';\nimport 'brace/mode/javascript';\nimport 'brace/mode/json';\nimport 'brace/mode/scss';\nimport 'brace/mode/html';\nimport 'brace/mode/markdown';\nimport 'brace/mode/twig';\nimport 'brace/mode/php';\nimport 'brace/mode/text';\nimport 'brace/ext/error_marker';\nimport { TerraSyntaxEditorData } from './data/terra-syntax-editor.data';\n\n@Component({\n    selector: 'terra-syntax-editor',\n    template: require('./terra-syntax-editor.component.html'),\n    styles:   [require('./terra-syntax-editor.component.scss')]\n})\nexport class TerraSyntaxEditorComponent implements AfterViewInit\n{\n    @ViewChild('aceEditor')\n    public editor:AceEditorComponent;\n\n    @Input()\n    public inputReadOnly:boolean;\n\n    @Input()\n    public inputOptions:Object;\n    private _inputEditorMode:string;\n    private _inputText:string;\n\n    constructor()\n    {\n        this.inputOptions = {\n            maxLines: 10000\n        };\n    }\n\n    public ngAfterViewInit():void\n    {\n        this.editor.getEditor().clearSelection();\n        this.editor.getEditor().$blockScrolling = Infinity;\n        this.editor.getEditor().setShowPrintMargin(false);\n    }\n\n    public setAnnotationList(list:Array<TerraSyntaxEditorData>):void\n    {\n        this.editor.getEditor().getSession().setAnnotations(list);\n    }\n\n    @Input()\n    public set inputEditorMode(value:string)\n    {\n        this._inputEditorMode = value;\n        this.editor.setMode(value);\n    }\n\n    @Input()\n    public set inputText(value:string)\n    {\n        this._inputText = value;\n        this.editor.setText(value);\n    }\n\n    public get inputText():string\n    {\n        return this._inputText;\n    }\n}\n"]}