{"version":3,"sources":["app/components/file-browser/file-list/file-list.component.ts"],"names":[],"mappings":"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","file":"file-list.component.js","sourcesContent":["import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { TerraBaseStorageService } from '../terra-base-storage.interface';\nimport { TerraFileBrowserComponent } from '../terra-file-browser.component';\nimport { TerraFileBrowserService } from '../terra-file-browser.service';\nimport {\n    DefaultLocale,\n    L10nDatePipe,\n    TranslationService\n} from 'angular-l10n';\nimport { TerraUploadProgress } from '../model/terra-upload-progress';\nimport {\n    isNull,\n    isNullOrUndefined,\n    isNumber\n} from 'util';\nimport { TerraBasePrivateStorageService } from '../terra-base-private-storage.interface';\nimport { TerraStorageObjectList } from '../model/terra-storage-object-list';\nimport { PathHelper } from '../../../helpers/path.helper';\nimport { TerraSimpleTableComponent } from '../../tables/simple/terra-simple-table.component';\nimport { TerraStorageObject } from '../model/terra-storage-object';\nimport { FileTypeHelper } from '../../../helpers/fileType.helper';\nimport { TerraSimpleTableRowInterface } from '../../tables/simple/row/terra-simple-table-row.interface';\nimport { ClipboardHelper } from '../../../helpers/clipboard.helper';\nimport { TerraSimpleTableCellInterface } from '../../tables/simple/cell/terra-simple-table-cell.interface';\nimport { TerraButtonInterface } from '../../buttons/button/data/terra-button.interface';\nimport { TerraSimpleTableHeaderCellInterface } from '../../tables/simple/cell/terra-simple-table-header-cell.interface';\n\n\n@Component({\n    selector: 'terra-file-list',\n    template: require('./file-list.component.html'),\n    styles:   [require('./file-list.component.scss')]\n})\nexport class TerraFileListComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy\n{\n    @Input()\n    public inputStorageServices:Array<TerraBaseStorageService> = null;\n\n    protected translationPrefix:string = 'terraFileBrowser';\n\n    protected isDragActive:boolean = false;\n    protected progress:TerraUploadProgress = null;\n\n    protected storageList:TerraStorageObjectList;\n\n    protected showNewDirectoryPrompt:boolean = false;\n\n    protected objectsToDelete:Array<TerraStorageObject> = [];\n\n    protected selectedStorageObjects:Array<TerraStorageObject> = [];\n\n    protected fileTableHeaderList:Array<TerraSimpleTableHeaderCellInterface> = [];\n\n    protected fileTableRowList:Array<TerraSimpleTableRowInterface<TerraStorageObject>> = [];\n\n    private _activeStorageService:TerraBaseStorageService;\n\n    public get activeStorageService():TerraBaseStorageService\n    {\n        if(!isNullOrUndefined(this._activeStorageService))\n        {\n            return this._activeStorageService;\n        }\n\n        if(!isNullOrUndefined(this.inputStorageServices))\n        {\n            return this.inputStorageServices[0];\n        }\n\n        return null;\n    }\n\n    public set activeStorageService(service:TerraBaseStorageService)\n    {\n        if(service !== this._activeStorageService)\n        {\n            if(!isNullOrUndefined(this.storageSubscription))\n            {\n                this.storageSubscription.unsubscribe();\n                this.storageSubscription = null;\n            }\n            if(!isNullOrUndefined(this.progressSubscription))\n            {\n                this.progressSubscription.unsubscribe();\n                this.progressSubscription = null;\n            }\n\n            this.storageList = null;\n            this._currentStorageRoot = null;\n            this._activeStorageService = service;\n            if(this.imagePreviewObject)\n            {\n                this.imagePreviewObject = null;\n                this.parentFileBrowser.splitConfig.hideImagePreview();\n            }\n            this.renderFileList();\n            this.storageSubscription = this.activeStorageService.getStorageList().subscribe((storageList:TerraStorageObjectList):void =>\n            {\n                this.storageList = storageList;\n                this.renderFileList();\n            });\n            this.progressSubscription = this.activeStorageService.queue.status.subscribe((progress:TerraUploadProgress) =>\n            {\n                this.progress = progress;\n\n                if(!isNullOrUndefined(this.progress))\n                {\n                    if(isNumber(this.progress.sizeUploaded))\n                    {\n                        this.progress.sizeUploaded = PathHelper.sizeString(this.progress.sizeUploaded);\n                    }\n                    if(isNumber(this.progress.sizeTotal))\n                    {\n                        this.progress.sizeTotal = PathHelper.sizeString(this.progress.sizeTotal);\n                    }\n                }\n                this.changeDetector.detectChanges();\n            });\n        }\n\n    }\n\n    @ViewChild('fileDropzone', {read: ElementRef})\n    private fileDropzoneElement:ElementRef;\n\n    @ViewChild(TerraSimpleTableComponent)\n    private fileTableComponent:TerraSimpleTableComponent<TerraStorageObject>;\n\n    private dragSubscription:Subscription;\n\n    private storageSubscription:Subscription;\n\n    private progressSubscription:Subscription;\n\n    private _currentStorageRoot:TerraStorageObject;\n\n    private imagePreviewTimeout:number;\n\n    private imagePreviewObject:TerraStorageObject;\n\n    public get currentStorageRoot():TerraStorageObject\n    {\n        if(!isNullOrUndefined(this._currentStorageRoot))\n        {\n            return this._currentStorageRoot;\n        }\n\n        if(!isNullOrUndefined(this.storageList))\n        {\n            return this.storageList.root;\n        }\n\n        return null;\n    }\n\n    public set currentStorageRoot(storageObject:TerraStorageObject)\n    {\n        if((isNullOrUndefined(storageObject) || storageObject.isDirectory) && this._currentStorageRoot !== storageObject)\n        {\n            if(this.imagePreviewObject && storageObject !== this.imagePreviewObject)\n            {\n                this.imagePreviewObject = null;\n                this.parentFileBrowser.splitConfig.hideImagePreview();\n            }\n\n            this._currentStorageRoot = storageObject;\n            this.renderFileList();\n        }\n    }\n\n    public get parentStorageObjects():Array<TerraStorageObject>\n    {\n        let current:TerraStorageObject = this.currentStorageRoot;\n        let parents:Array<TerraStorageObject> = [];\n\n        if(!isNullOrUndefined(this.imagePreviewObject))\n        {\n            parents.push(this.imagePreviewObject);\n        }\n\n        while(!isNullOrUndefined(current))\n        {\n            parents.push(current);\n            current = current.parent;\n        }\n\n        return parents.reverse();\n    }\n\n    private _newDirectoryName:string = '';\n\n    public get newDirectoryName():string\n    {\n        return this._newDirectoryName;\n    }\n\n    public set newDirectoryName(name:string)\n    {\n        this._newDirectoryName = this.activeStorageService.prepareKey(name, true, true);\n    }\n\n    protected get _deleteCount():number\n    {\n        if(isNullOrUndefined(this.objectsToDelete))\n        {\n            return 0;\n        }\n\n        return this.objectsToDelete\n                   .map((object:TerraStorageObject) =>\n                   {\n                       return object.fileCount;\n                   })\n                   .reduce((sum:number, current:number) =>\n                   {\n                       return sum + current;\n                   }, 0);\n    }\n\n    private datePipe:L10nDatePipe = new L10nDatePipe();\n\n    @DefaultLocale()\n    private defaultLocale:string;\n\n    constructor(private changeDetector:ChangeDetectorRef,\n                private fileBrowserService:TerraFileBrowserService,\n                private translationService:TranslationService,\n                @Inject(forwardRef(() => TerraFileBrowserComponent)) protected parentFileBrowser:TerraFileBrowserComponent)\n    {\n    }\n\n    public ngOnInit():void\n    {\n        if(!isNullOrUndefined(this.inputStorageServices) && this.inputStorageServices.length > 0)\n        {\n            this.activeStorageService = this.inputStorageServices[0];\n        }\n        else\n        {\n            console.error('At least one instance of TerraBaseStorageService is required');\n        }\n\n        this.dragSubscription = this.fileBrowserService.isDragActive.subscribe((isDragActive:boolean) =>\n        {\n            this.isDragActive = isDragActive;\n            this.changeDetector.detectChanges();\n        });\n\n        this.parentFileBrowser.onSelectedUrlChange.subscribe((selectedUrl:string) =>\n        {\n            if(selectedUrl && this.storageList)\n            {\n                let object:TerraStorageObject = this.storageList.flatList.find(\n                    (storage:TerraStorageObject):boolean => storage.publicUrl === selectedUrl);\n\n                if(!isNullOrUndefined(object))\n                {\n                    this.currentStorageRoot = object.parent;\n                    if(FileTypeHelper.isWebImage(object.key))\n                    {\n                        this.imagePreviewObject = object;\n                        this.parentFileBrowser.splitConfig.showImagePreview(object, this.activeStorageService);\n                    }\n                    this.fileTableComponent.inputHighlightedRow = this.fileTableRowList.find(\n                        (r:TerraSimpleTableRowInterface<TerraStorageObject>):boolean => r.value === object);\n                }\n            }\n        });\n    }\n\n    public ngAfterViewInit():void\n    {\n        this.fileBrowserService.addDropzone(this.fileDropzoneElement.nativeElement);\n    }\n\n    public ngOnChanges(changes:SimpleChanges):void\n    {\n        if(changes.hasOwnProperty('inputStorageServices') && isNull(changes['inputStorageServices'].previousValue))\n        {\n            this.activeStorageService = this.inputStorageServices[0];\n        }\n    }\n\n    public ngOnDestroy():void\n    {\n        if(!isNullOrUndefined(this.storageSubscription))\n        {\n            this.storageSubscription.unsubscribe();\n        }\n\n        if(!isNullOrUndefined(this.dragSubscription))\n        {\n            this.dragSubscription.unsubscribe();\n        }\n\n        this.fileBrowserService.removeDropzone(this.fileDropzoneElement.nativeElement);\n\n    }\n\n    protected createDirectory():void\n    {\n        let path:string = PathHelper.join(\n            this.currentStorageRoot ? this.currentStorageRoot.key : '/',\n            this.newDirectoryName\n        );\n        this.showNewDirectoryPrompt = false;\n        this._newDirectoryName = null;\n        this.activeStorageService.createDirectory(path);\n    }\n\n    protected deleteObjects():void\n    {\n        let keyList:Array<string> = [];\n        let extractKeys:Function = (objects:Array<TerraStorageObject>):void =>\n        {\n            objects.forEach((object:TerraStorageObject) =>\n            {\n                keyList.push(object.key);\n                if(object.isDirectory)\n                {\n                    extractKeys(object.children);\n                }\n            });\n        };\n        extractKeys(this.objectsToDelete);\n        this.activeStorageService.deleteFiles(keyList);\n        this.objectsToDelete = [];\n        if(!isNullOrUndefined(this.imagePreviewObject) && keyList.indexOf(this.imagePreviewObject.key))\n        {\n            this.imagePreviewObject = null;\n            this.parentFileBrowser.splitConfig.hideImagePreview();\n        }\n    }\n\n    private renderFileList():void\n    {\n        if(!isNullOrUndefined(this.activeStorageService))\n        {\n            this.createHeaderListDependingOnAccessLevel();\n        }\n\n        if(!isNullOrUndefined(this.currentStorageRoot))\n        {\n            this.fillTableRowList();\n        }\n        else\n        {\n            this.fileTableRowList = [];\n        }\n\n        this.selectedStorageObjects = [];\n        this.parentFileBrowser.outputSelectedChange.emit(null);\n        this.changeDetector.detectChanges();\n    }\n\n    private fillTableRowList():void\n    {\n        this.fileTableRowList = this.currentStorageRoot.children.filter((storageObject:TerraStorageObject) =>\n            {\n                return storageObject.isFile || this.parentFileBrowser.inputAllowFolders;\n            }\n        ).sort((objectA:TerraStorageObject, objectB:TerraStorageObject) =>\n            {\n                return objectA.name.localeCompare(objectB.name);\n            }\n        ).filter((storageObject:TerraStorageObject) => this.isAllowed(storageObject.key))\n                                    .map((storageObject:TerraStorageObject) =>\n                                    {\n                                        return this.createTableRow(storageObject);\n                                    });\n    }\n\n    private createTableRow(storageObject:TerraStorageObject):TerraSimpleTableRowInterface<TerraStorageObject>\n    {\n        let cellList:Array<TerraSimpleTableCellInterface> = [];\n\n        cellList.push(\n            {\n                caption: storageObject.name,\n                icon:    storageObject.icon\n            }\n        );\n\n        if(!(this.activeStorageService instanceof TerraBasePrivateStorageService))\n        {\n            cellList.push({\n                caption: storageObject.isFile ? storageObject.publicUrl : ''\n            });\n\n            this.addClipboardButton(storageObject, cellList);\n        }\n\n        cellList.push(\n            {\n                caption: storageObject.isFile ? storageObject.sizeString : ''\n            },\n            {\n                caption: storageObject.isFile ? this.datePipe.transform(storageObject.lastModified, this.defaultLocale, 'medium') : ''\n            }\n        );\n\n        if(this.activeStorageService instanceof TerraBasePrivateStorageService && storageObject.isFile)\n        {\n            this.addDownloadButton(storageObject, cellList);\n        }\n\n        this.addDeleteButton(storageObject, cellList);\n\n        return {\n            cellList: cellList,\n            value:    storageObject,\n            disabled: !this.isAllowed(storageObject.key)\n        };\n    }\n\n    private addClipboardButton(storageObject:TerraStorageObject, cellList:Array<TerraSimpleTableCellInterface>):void\n    {\n        let clipboardButton:TerraButtonInterface = {\n            icon:             'icon-copy_clipboard',\n            clickFunction:    (event:Event):void =>\n                              {\n                                  ClipboardHelper.copyText(storageObject.publicUrl);\n                                  event.stopPropagation();\n                              },\n            tooltipText:      this.translationService.translate(this.translationPrefix + '.copyToClipboard'),\n            tooltipPlacement: 'left'\n        };\n\n        cellList.push(\n            {\n                buttonList: storageObject.isFile ? [clipboardButton] : []\n            }\n        );\n    }\n\n    private addDownloadButton(storageObject:TerraStorageObject, cellList:Array<TerraSimpleTableCellInterface>):void\n    {\n        cellList.push({\n            buttonList: [{\n                icon:             'icon-download',\n                clickFunction:    (event:Event):void =>\n                                  {\n                                      (<TerraBasePrivateStorageService> this.activeStorageService).downloadFile(storageObject.key);\n                                      event.stopPropagation();\n                                  },\n                tooltipText:      this.translationService.translate(this.translationPrefix + '.downloadFile'),\n                tooltipPlacement: 'left'\n            }]\n        });\n    }\n\n    private addDeleteButton(storageObject:TerraStorageObject, cellList:Array<TerraSimpleTableCellInterface>):void\n    {\n        cellList.push({\n            buttonList: [{\n                icon:             'icon-delete',\n                clickFunction:    (event:Event):void =>\n                                  {\n                                      this.objectsToDelete = [storageObject];\n                                      event.stopPropagation();\n                                  },\n                isSecondary:      true,\n                tooltipText:      storageObject.isFile ?\n                                      this.translationService.translate(this.translationPrefix + '.deleteFile') :\n                                      this.translationService.translate(this.translationPrefix + '.deleteFolder'),\n                tooltipPlacement: 'left'\n            }]\n        });\n    }\n\n    private createHeaderListDependingOnAccessLevel():void\n    {\n        if(this.activeStorageService instanceof TerraBasePrivateStorageService)\n        {\n            this.createPrivateHeaderList();\n        }\n        else\n        {\n            this.createPublicHeaderList();\n        }\n    }\n\n    private createPublicHeaderList():void\n    {\n        this.fileTableHeaderList = [\n            {\n                caption: this.translationService.translate(this.translationPrefix + '.fileName'),\n                width:   '30%'\n            },\n            {\n                caption: this.translationService.translate(this.translationPrefix + '.fileURL'),\n                width:   '50%'\n            },\n            {\n                caption: '',\n                width:   '1'\n            },\n            {\n                caption: this.translationService.translate(this.translationPrefix + '.fileSize'),\n                width:   '7.5%'\n            },\n            {\n                caption: this.translationService.translate(this.translationPrefix + '.lastChange'),\n                width:   '12.5%'\n            },\n            {\n                caption: '',\n                width:   '1'\n            }\n        ];\n    }\n\n    private createPrivateHeaderList():void\n    {\n        this.fileTableHeaderList = [\n            {\n                caption: this.translationService.translate(this.translationPrefix + '.fileName'),\n                width:   '80%'\n            },\n            {\n                caption: this.translationService.translate(this.translationPrefix + '.fileSize'),\n                width:   '7.5%'\n            },\n            {\n                caption: this.translationService.translate(this.translationPrefix + '.lastChange'),\n                width:   '12.5%'\n            },\n            {\n                caption: '',\n                width:   '1'\n            },\n            {\n                caption: '',\n                width:   '1'\n            }\n        ];\n    }\n\n    private isAllowed(filename:string):boolean\n    {\n        if(isNullOrUndefined(filename))\n        {\n            return false;\n        }\n\n        return this.parentFileBrowser.inputAllowedExtensions.length <= 0\n               || this.parentFileBrowser.inputAllowedExtensions.indexOf(PathHelper.extName(filename).toUpperCase()) >= 0\n               || PathHelper.isDirectory(filename);\n    }\n\n    protected onActiveRowChange(row:TerraSimpleTableRowInterface<TerraStorageObject>):void\n    {\n        if(isNullOrUndefined(this.imagePreviewTimeout))\n        {\n            clearTimeout(this.imagePreviewTimeout);\n        }\n        let debounceFn:Function = ():void =>\n        {\n            let storageObject:TerraStorageObject = row.value;\n\n            if(!isNullOrUndefined(storageObject) && FileTypeHelper.isWebImage(storageObject.key))\n            {\n                this.imagePreviewObject = storageObject;\n                this.parentFileBrowser.splitConfig.showImagePreview(storageObject, this.activeStorageService);\n            }\n            else\n            {\n                this.imagePreviewObject = null;\n                this.parentFileBrowser.splitConfig.hideImagePreview();\n            }\n\n            this.parentFileBrowser.outputSelectedChange.emit(storageObject);\n        };\n        this.imagePreviewTimeout = setTimeout(debounceFn.bind(this), 500);\n    }\n\n    public onSelectionChange(rows:Array<TerraSimpleTableRowInterface<TerraStorageObject>>):void\n    {\n        this.selectedStorageObjects = rows.map((row:TerraSimpleTableRowInterface<TerraStorageObject>) =>\n        {\n            return row.value;\n        });\n    }\n\n    public onFileSelect(event:Event):void\n    {\n        let target:any = event.target || event.srcElement;\n\n        if(!isNullOrUndefined(target) && !isNullOrUndefined(target.files))\n        {\n            this.uploadFiles(target.files);\n\n            // unset value of file input to allow selecting same file again\n            (<HTMLInputElement> event.target).value = '';\n        }\n    }\n\n    public onFileDrop(event:DragEvent):void\n    {\n        if(!isNullOrUndefined(event.dataTransfer.files))\n        {\n            this.uploadFiles(event.dataTransfer.files);\n        }\n    }\n\n    private uploadFiles(fileList:FileList | Array<File>):void\n    {\n        let uploadPrefix:string = this.currentStorageRoot ? this.currentStorageRoot.key : '/';\n        this.activeStorageService\n            .uploadFiles(\n                fileList,\n                uploadPrefix\n            );\n    }\n\n}\n"]}