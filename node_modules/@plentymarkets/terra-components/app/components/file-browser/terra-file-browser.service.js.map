{"version":3,"sources":["app/components/file-browser/terra-file-browser.service.ts"],"names":[],"mappings":"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","file":"terra-file-browser.service.js","sourcesContent":["import {\n    Injectable,\n    NgZone\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { isNullOrUndefined } from 'util';\n\n@Injectable()\nexport class TerraFileBrowserService\n{\n    public isDragActive:BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n    private dropzones:Array<HTMLElement> = [];\n    private globalListenersDefined:boolean = false;\n    private dragenterTarget:EventTarget = null;\n\n    constructor(private zone:NgZone)\n    {\n    }\n\n    public addDropzone(dropzone:HTMLElement):void\n    {\n        if(!this.globalListenersDefined)\n        {\n            this.setupGlobalListeners();\n        }\n        this.dropzones.push(dropzone);\n    }\n\n    public removeDropzone(dropzone:HTMLElement):void\n    {\n        let idx:number = this.dropzones.indexOf(dropzone);\n        if(idx >= 0)\n        {\n            this.dropzones.splice(idx, 1);\n        }\n    }\n\n    private isDropzone(element:HTMLElement):boolean\n    {\n        return this.dropzones.some(\n            (dropzone:HTMLElement) =>\n            {\n                return dropzone.contains(element);\n            }\n        );\n    }\n\n    private setupGlobalListeners():void\n    {\n        this.zone.runOutsideAngular(() =>\n        {\n            let setEffect:(event:Event) => void = (event:DragEvent):void =>\n            {\n                if(this.isDropzone(<HTMLElement> event.target))\n                {\n                    event.dataTransfer.effectAllowed = 'copy';\n                    event.dataTransfer.dropEffect = 'copy';\n                }\n                else\n                {\n                    event.dataTransfer.effectAllowed = 'none';\n                    event.dataTransfer.dropEffect = 'none';\n                }\n            };\n\n            let isFileEvent:(event:DragEvent) => boolean = (event:DragEvent):boolean =>\n            {\n                return !isNullOrUndefined(event.dataTransfer.types) && event.dataTransfer.types.indexOf('Files') >= 0;\n            };\n\n            window.addEventListener('dragenter', (event:DragEvent) =>\n            {\n                if(isFileEvent(event))\n                {\n                    this.dragenterTarget = event.target;\n                    event.preventDefault();\n                    if(!this.isDragActive.value)\n                    {\n                        this.isDragActive.next(true);\n                    }\n                }\n            });\n\n            window.addEventListener('dragover', (event:DragEvent) =>\n            {\n                if(isFileEvent(event))\n                {\n                    event.preventDefault();\n                    setEffect(event);\n                }\n            });\n\n            window.addEventListener('dragleave', (event:DragEvent) =>\n            {\n                if(isFileEvent(event) && event.target === this.dragenterTarget)\n                {\n                    this.dragenterTarget = null;\n                    this.isDragActive.next(false);\n                }\n            });\n\n            window.addEventListener('drop', (event:DragEvent) =>\n            {\n                if(isFileEvent(event))\n                {\n                    event.preventDefault();\n                    this.dragenterTarget = null;\n                    if(this.isDragActive.value)\n                    {\n                        this.isDragActive.next(false);\n                    }\n                }\n            });\n\n        });\n        this.globalListenersDefined = true;\n    }\n}\n"]}