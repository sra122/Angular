"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var terra_base_service_1 = require("../../service/terra-base.service");
var TerraBaseStorageService = /** @class */ (function (_super) {
    __extends(TerraBaseStorageService, _super);
    function TerraBaseStorageService() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TerraBaseStorageService.prototype.prepareKey = function (value, isName, isDirectory) {
        if (isName === void 0) { isName = false; }
        if (isDirectory === void 0) { isDirectory = false; }
        value = value
            .replace(/\s+/g, '_') // Replace whitespaces
            .replace(/ä/g, 'ae') // Replace special characters
            .replace(/ö/g, 'oe')
            .replace(/ü/g, 'ue')
            .replace(/Ä/g, 'Ae')
            .replace(/Ö/g, 'Oe')
            .replace(/Ü/g, 'Ue')
            .replace(/ß/g, 'ss')
            .replace(/[^A-Za-z0-9\-_\/.]/g, '_'); // Remove all remaining special characters
        if (isName) {
            // remove slashes in names to avoid creating subdirectories
            value = value.replace(/\//g, '_');
        }
        if (isDirectory) {
            value = value.replace(/\./g, '_');
        }
        return value;
    };
    return TerraBaseStorageService;
}(terra_base_service_1.TerraBaseService));
exports.TerraBaseStorageService = TerraBaseStorageService;

//# sourceMappingURL=terra-base-storage.interface.js.map
