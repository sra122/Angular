{"version":3,"sources":["app/components/file-browser/model/terra-upload-item.ts"],"names":[],"mappings":"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","file":"terra-upload-item.js","sourcesContent":["import { TerraBaseStorageService } from '../terra-base-storage.interface';\nimport { isNullOrUndefined } from 'util';\nimport { PathHelper } from '../../../helpers/path.helper';\n\nexport type UploadCallback = (response:string, status:number, headers:{ [key:string]:string }) => void;\n\nexport class TerraUploadItem\n{\n    public static DONE:TerraUploadItem = new TerraUploadItem(null, null, null);\n\n    public xhr:XMLHttpRequest;\n    public uploaded:boolean = false;\n\n    public get filename():string\n    {\n        let filenames:Array<string> = this.file.name.split('.');\n        let extname:string = filenames.pop();\n        return this.uploadService.prepareKey(this.file.name, true);\n    }\n\n    public get pathname():string\n    {\n        let pathname:string = this.uploadService.prepareKey(PathHelper.join(this.path, this.filename));\n\n        if(pathname.charAt(0) === '/')\n        {\n            pathname = pathname.substr(1);\n        }\n        return pathname;\n    }\n\n    private beforeUploadList:Array<(file:File) => void> = [];\n    private onSuccessList:Array<UploadCallback> = [];\n    private onCancelList:Array<UploadCallback> = [];\n    private onErrorList:Array<UploadCallback> = [];\n    private onProgressList:Array<(progress:number) => void> = [];\n\n    constructor(public file:File, private path:string, private uploadService:TerraBaseStorageService)\n    {\n        if(isNullOrUndefined(file))\n        {\n            this.uploaded = true;\n        }\n        if(!isNullOrUndefined(this.path) && this.path.charAt(0) === '/')\n        {\n            this.path = this.path.substr(1);\n        }\n    }\n\n    public beforeUpload(callback:(file:File) => void):TerraUploadItem\n    {\n        this.beforeUploadList.push(callback);\n        return this;\n    }\n\n    public onSuccess(callback:UploadCallback):TerraUploadItem\n    {\n        this.onSuccessList.push(callback);\n        return this;\n    }\n\n    public onError(callback:UploadCallback):TerraUploadItem\n    {\n        this.onErrorList.push(callback);\n        return this;\n    }\n\n    public onCancel(callback:UploadCallback):TerraUploadItem\n    {\n        this.onCancelList.push(callback);\n        return this;\n    }\n\n    public onProgress(callback:(progress:number) => void):TerraUploadItem\n    {\n        this.onProgressList.push(callback);\n        return this;\n    }\n\n    public cancelUpload():void\n    {\n        this.uploadService.queue.remove(this);\n        if(!isNullOrUndefined(this.xhr))\n        {\n            this.xhr.abort();\n        }\n    }\n\n\n    public emit(event:string, ...args:Array<any>):void\n    {\n        if(['beforeUpload',\n            'onSuccess',\n            'onError',\n            'onCancel',\n            'onProgress'].indexOf(event) >= 0)\n        {\n            this['_' + event].forEach((callback:(...args:Array<any>) => void) =>\n            {\n                callback(...args);\n            });\n\n            if(['onSuccess',\n                'onError',\n                'onCancel'].indexOf(event) >= 0)\n            {\n                this.uploaded = true;\n            }\n        }\n    }\n}\n"]}