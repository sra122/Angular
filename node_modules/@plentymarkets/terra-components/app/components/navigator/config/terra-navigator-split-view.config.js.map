{"version":3,"sources":["app/components/navigator/config/terra-navigator-split-view.config.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,yFAAqF;AACrF,6BAGc;AAEd,sCAA2C;AAE3C;;;GAGG;AAEH;IAAsD,iDAAoB;IAQtE;QAAA,YAEI,iBAAO,SAaV;QAXG,KAAI,CAAC,0BAA0B,GAAG,IAAI,iBAAU,CAC5C,UAAC,UAA4D;YAEzD,KAAI,CAAC,0BAA0B,GAAG,UAAU,CAAC;QACjD,CAAC,CAAC,CAAC;QAEP,KAAI,CAAC,qBAAqB,GAAG,IAAI,iBAAU,CACvC,UAAC,UAAqD;YAElD,KAAI,CAAC,qBAAqB,GAAG,UAAU,CAAC;QAC5C,CAAC,CAAC,CAAC;;IACX,CAAC;IAEM,qDAAa,GAApB,UAAqB,gBAA+C;QAEhE,IAAG,IAAI,CAAC,qBAAqB,EAC7B;YACI,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACrD;IACL,CAAC;IAEM,wDAAgB,GAAvB,UAAwB,KAA2C;QAE/D,IAAG,IAAI,CAAC,0BAA0B,EAClC;YACI,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/C;IACL,CAAC;IAvCQ,6BAA6B;QADzC,iBAAU,EAAE;;OACA,6BAA6B,CAwCzC;IAAD,oCAAC;CAxCD,AAwCC,CAxCqD,8CAAoB,GAwCzE;AAxCY,sEAA6B","file":"terra-navigator-split-view.config.js","sourcesContent":["import { TerraSplitConfigBase } from '../../split-view/data/terra-split-config-base';\nimport {\n    Observable,\n    Subscriber\n} from 'rxjs';\nimport { TerraNavigatorNodeInterface } from '../data/terra-navigator-node.interface';\nimport { Injectable } from '@angular/core';\n\n/**\n * @author mscharf\n * @deprecated since `terra-navigator` is now deprecated\n */\n@Injectable()\nexport class TerraNavigatorSplitViewConfig<D> extends TerraSplitConfigBase\n{\n    public observableNodeClicked:Observable<TerraNavigatorNodeInterface<D>>;\n    public observableUpdateActiveItem:Observable<Array<TerraNavigatorNodeInterface<D>>>;\n\n    private subscriberNodeClicked:Subscriber<TerraNavigatorNodeInterface<D>>;\n    private subscriberUpdateActiveItem:Subscriber<Array<TerraNavigatorNodeInterface<D>>>;\n\n    constructor()\n    {\n        super();\n\n        this.observableUpdateActiveItem = new Observable<Array<TerraNavigatorNodeInterface<D>>>(\n            (subscriber:Subscriber<Array<TerraNavigatorNodeInterface<D>>>):void =>\n            {\n                this.subscriberUpdateActiveItem = subscriber;\n            });\n\n        this.observableNodeClicked = new Observable<TerraNavigatorNodeInterface<D>>(\n            (subscriber:Subscriber<TerraNavigatorNodeInterface<D>>):void =>\n            {\n                this.subscriberNodeClicked = subscriber;\n            });\n    }\n\n    public openNextLevel(currentLevelItem:TerraNavigatorNodeInterface<D>):void\n    {\n        if(this.subscriberNodeClicked)\n        {\n            this.subscriberNodeClicked.next(currentLevelItem);\n        }\n    }\n\n    public updateActiveItem(nodes:Array<TerraNavigatorNodeInterface<D>>):void\n    {\n        if(this.subscriberUpdateActiveItem)\n        {\n            this.subscriberUpdateActiveItem.next(nodes);\n        }\n    }\n}\n"]}