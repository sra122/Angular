{"version":3,"sources":["app/components/navigator/button-group/terra-button-group.component.ts"],"names":[],"mappings":"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","file":"terra-button-group.component.js","sourcesContent":["import {\n    Component,\n    Input,\n    OnInit\n} from '@angular/core';\nimport { TerraNavigatorSplitViewConfig } from '../config/terra-navigator-split-view.config';\nimport { TerraNavigatorNodeInterface } from '../data/terra-navigator-node.interface';\nimport { TerraButtonGroupInterface } from './data/terra-button-group.interface';\nimport { isNullOrUndefined } from 'util';\n\n/**\n * @author mscharf\n * @deprecated since `terra-navigator` is now deprecated\n */\n@Component({\n    selector: 'terra-button-group',\n    template: require('./terra-button-group.component.html'),\n    styles:   [require('./terra-button-group.component.scss')]\n})\nexport class TerraButtonGroupComponent<D> implements OnInit\n{\n    @Input()\n    public parameter:any;\n\n    private buttonList:Array<TerraButtonGroupInterface>;\n\n    public constructor(private terraNavigatorSplitViewConfig:TerraNavigatorSplitViewConfig<D>)\n    {\n        this.buttonList = [];\n    }\n\n    public ngOnInit():void\n    {\n        this.terraNavigatorSplitViewConfig.observableUpdateActiveItem\n            .subscribe((nodes:Array<TerraNavigatorNodeInterface<D>>) =>\n            {\n                this.setRecursiveItemActive(nodes);\n            });\n\n        this.parameter.nodes\n            .forEach((item:TerraNavigatorNodeInterface<D>) =>\n            {\n                let hasChildren:boolean = false;\n\n                if(!isNullOrUndefined(item.children))\n                {\n                    hasChildren = true;\n                }\n\n                let button:TerraButtonGroupInterface = {\n                    caption:       item.nodeName,\n                    clickFunction: ():void =>\n                                   {\n                                       this.terraNavigatorSplitViewConfig.openNextLevel(item);\n\n                                       item.isButtonClicked = true;\n\n                                       this.buttonList\n                                           .forEach((btnItem:TerraButtonGroupInterface):void =>\n                                           {\n                                               btnItem.isActive = false;\n                                           });\n\n                                       button.isActive = true;\n                                   },\n                    hasChildren:   hasChildren,\n                    isVisible:     isNullOrUndefined(item.isVisible) || item.isVisible,\n                };\n\n                this.buttonList\n                    .push(button);\n\n                if(!isNullOrUndefined(item.nodeIcon))\n                {\n                    this.buttonList[this.buttonList.length - 1].icon = item.nodeIcon;\n                }\n            });\n\n        this.setRecursiveItemActive(this.parameter.nodes);\n    }\n\n    private setRecursiveItemActive(list:Array<TerraNavigatorNodeInterface<D>>):void\n    {\n        list.forEach((item:TerraNavigatorNodeInterface<D>) =>\n        {\n            if(item.isActive)\n            {\n                setTimeout(() =>\n                {\n                    this.terraNavigatorSplitViewConfig\n                        .openNextLevel(item);\n                });\n\n                let btn:TerraButtonGroupInterface =\n                    this.buttonList.find((button:TerraButtonGroupInterface) =>\n                    {\n                        return button.caption === item.nodeName;\n                    });\n\n                if(!isNullOrUndefined(btn))\n                {\n                    btn.isActive = item.isActive;\n                }\n            }\n            else\n            {\n                if(item.children)\n                {\n                    this.setRecursiveItemActive(item.children);\n                }\n            }\n        });\n    }\n}\n"]}