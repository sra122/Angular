{"version":3,"sources":["app/components/breadcrumbs/terra-breadcrumbs.component.ts"],"names":[],"mappings":"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","file":"terra-breadcrumbs.component.js","sourcesContent":["import { Component } from '@angular/core';\nimport { TerraBreadcrumbsService } from './service/terra-breadcrumbs.service';\nimport {\n    ActivatedRoute,\n    Route,\n    Router,\n    Routes\n} from '@angular/router';\nimport { isNullOrUndefined } from 'util';\nimport { TerraBreadcrumb } from './terra-breadcrumb';\nimport { TerraBreadcrumbContainer } from './terra-breadcrumb-container';\n\n@Component(\n    {\n        selector:  'terra-breadcrumbs',\n        styles:    [require('./terra-breadcrumbs.component.scss')],\n        template:  require('./terra-breadcrumbs.component.html'),\n        providers: [TerraBreadcrumbsService]\n    }\n)\nexport class TerraBreadcrumbsComponent\n{\n    protected mouseLeft:string = '0px';\n    protected isTooltipDisabled:boolean = false;\n\n    constructor(public readonly breadcrumbsService:TerraBreadcrumbsService,\n                private activatedRoute:ActivatedRoute,\n                private router:Router)\n    {\n        this.breadcrumbsService.initialPath =\n            this.getCompletePathByRoute(this.activatedRoute.snapshot.routeConfig, this.router.config, '');\n    }\n\n    // identical code exists in TerraRouterHelper in terra\n    private getCompletePathByRoute(routeToFind:Route, routeConfig:Routes, parentPath:string):string\n    {\n        let path:string = null;\n\n        if(!isNullOrUndefined(routeConfig))\n        {\n            for(let route of routeConfig)\n            {\n                if(route === routeToFind)\n                {\n                    path = parentPath + '/' + route.path;\n\n                    if(parentPath.length === 0)\n                    {\n                        path = route.path;\n                    }\n\n                    return path;\n                }\n                else if(route.children)\n                {\n                    path = this.getCompletePathByRoute(routeToFind, route.children, parentPath);\n\n                    if(!isNullOrUndefined(path))\n                    {\n                        path = route.path + '/' + path;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return path;\n    }\n\n    protected get breadcrumbContainers():Array<TerraBreadcrumbContainer>\n    {\n        return this.breadcrumbsService.containers;\n    }\n\n    protected closeBreadcrumb(container:TerraBreadcrumbContainer, breadcrumb:TerraBreadcrumb, event:Event):void\n    {\n        event.stopPropagation();\n\n        this.breadcrumbsService.closeBreadcrumb(container, breadcrumb);\n    }\n\n    protected checkActiveRoute(bcc:TerraBreadcrumb, container:HTMLLIElement):boolean\n    {\n        let isRouteActive:boolean = this.breadcrumbsService.checkActiveRoute(bcc);\n\n        if(!isNullOrUndefined(container) && isRouteActive)\n        {\n            container.scrollIntoView();\n        }\n\n        return isRouteActive;\n    }\n\n    protected calculatePosition(container:HTMLLIElement, contextMenu:HTMLUListElement):void\n    {\n        let containerClientRect:ClientRect = container.getBoundingClientRect();\n        let contextMenuClientRect:ClientRect = contextMenu.getBoundingClientRect();\n\n        let isOutsideRight:boolean = (contextMenuClientRect.width + containerClientRect.left) > window.innerWidth;\n\n        let left:number = 0;\n\n        if(isOutsideRight)\n        {\n            left = window.innerWidth - contextMenuClientRect.width;\n        }\n        else\n        {\n            left = containerClientRect.left;\n        }\n\n        this.mouseLeft = left + 'px';\n    }\n\n    protected checkLastBreadcrumbContainer(index:number):boolean\n    {\n        let nextContainer:TerraBreadcrumbContainer = this.breadcrumbContainers[index + 1];\n\n        return !isNullOrUndefined(nextContainer) &&\n               !isNullOrUndefined(nextContainer.currentSelectedBreadcrumb) &&\n               !nextContainer.currentSelectedBreadcrumb.isHidden;\n    }\n\n    protected checkTooltip(el:HTMLElement):void\n    {\n        let curOverflow:string = el.style.overflow;\n\n        // 'hide' overflow to get correct scrollWidth\n        if(!curOverflow || curOverflow === 'visible')\n        {\n            el.style.overflow = 'hidden';\n        }\n\n        // check if is overflowing\n        let isOverflowing:boolean = el.clientWidth < el.scrollWidth;\n\n        // 'reset' overflow to initial state\n        el.style.overflow = curOverflow;\n\n        this.isTooltipDisabled = !isOverflowing;\n    }\n}\n"]}