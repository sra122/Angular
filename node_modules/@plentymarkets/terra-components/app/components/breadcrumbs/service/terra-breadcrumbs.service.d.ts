import { TerraBreadcrumb } from '../terra-breadcrumb';
import { Router } from '@angular/router';
import { TranslationService } from 'angular-l10n';
import { TerraBreadcrumbContainer } from '../terra-breadcrumb-container';
export declare class TerraBreadcrumbsService {
    private router;
    private translation;
    private _containers;
    private _initialPath;
    private initialRoute;
    constructor(router: Router, translation: TranslationService);
    initialPath: string;
    readonly containers: Array<TerraBreadcrumbContainer>;
    private handleBreadcrumbForUrl(shortUrl, fullUrl);
    private handleBreadcrumb(route, url, urlPartsCount);
    private getBreadcrumbLabel(route);
    private updateBreadcrumbVisibilities(breadcrumbContainer, parentBreadcrumb);
    private findActivatedRouteSnapshot(activatedRouteSnapshot);
    private findRoute(url, routeConfig);
    checkActiveRoute(breadcrumb: TerraBreadcrumb): boolean;
    /**
     * Close the breadcrumb by given url
     * @param {string} url Url to close the breadcrumb.
     */
    closeBreadcrumbByUrl(url: string): void;
    /**
     * Update the breadcrumb name by given url
     * @param {string} url Url to update the breadcrumb.
     * @param {string} name If not given, it will be automatically update the name by the label of the route data.
     */
    updateBreadcrumbNameByUrl(url: string, name?: string): void;
    private findBreadcrumbContainerByUrl(url);
    private findBreadcrumbByUrl(url);
    closeBreadcrumb(breadcrumbContainer: TerraBreadcrumbContainer, breadcrumb: TerraBreadcrumb): void;
    private removeBreadcrumbContainer(breadcrumbContainer);
    private removeBreadcrumbsByParent(container, parent);
}
