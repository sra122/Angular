{"version":3,"sources":["app/components/tile/box/terra-tile-box.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAGuB;AAEvB,oEAAgE;AAEhE;;;GAGG;AAMH;IAAA;IA2EA,CAAC;IAxCW,+CAAe,GAAvB,UAAwB,KAAW;QAE/B,KAAK,CAAC,eAAe,EAAE,CAAC;IAC5B,CAAC;IAEO,uDAAuB,GAA/B;QAEI,IAAI,WAAW,GAAW,KAAK,CAAC;QAChC,IAAI,MAAM,GAAW,KAAK,CAAC;QAC3B,IAAI,UAAU,GAAW,KAAK,CAAC;QAE/B,QAAO,IAAI,CAAC,UAAU,EACtB;YACI,KAAK,wCAAiB,CAAC,UAAU;gBAE7B,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV,KAAK,wCAAiB,CAAC,IAAI;gBAEvB,MAAM,GAAG,IAAI,CAAC;gBACd,MAAM;YAEV,KAAK,wCAAiB,CAAC,SAAS;gBAE5B,UAAU,GAAG,IAAI,CAAC;gBAClB,MAAM;YAEV;gBACI,WAAW,GAAG,IAAI,CAAC;SAC1B;QAED,OAAO;YACH,UAAU,EAAG,WAAW;YACxB,IAAI,EAAS,MAAM;YACnB,SAAS,EAAI,UAAU;YACvB,WAAW,EAAE,IAAI,CAAC,eAAe;YACjC,WAAW,EAAE,IAAI,CAAC,eAAe;SACpC,CAAC;IACN,CAAC;IAvED;QADC,YAAK,EAAE;;6DACiB;IAGzB;QADC,YAAK,EAAE;;gEACoB;IAG5B;QADC,YAAK,EAAE;;4DACgB;IAGxB;QADC,YAAK,EAAE;;iEACqB;IAG7B;QADC,YAAK,EAAE;;kEACuB;IAG/B;QADC,YAAK,EAAE;;kEACuB;IAG/B;QADC,YAAK,EAAE;;oEACyB;IAGjC;QADC,YAAK,EAAE;;+DACoB;IAG5B;QADC,YAAK,EAAE;;6DAC4B;IAGpC;QADC,YAAK,EAAE;;kEACuB;IAG/B;QADC,YAAK,EAAE;kCACe,KAAK;kEAAuB;IAjC1C,qBAAqB;QALjC,gBAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,MAAM,EAAI,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;YACtD,QAAQ,EAAE,OAAO,CAAC,iCAAiC,CAAC;SACvD,CAAC;OACW,qBAAqB,CA2EjC;IAAD,4BAAC;CA3ED,AA2EC,IAAA;AA3EY,sDAAqB","file":"terra-tile-box.component.js","sourcesContent":["import {\n    Component,\n    Input\n} from '@angular/core';\nimport { TerraButtonInterface } from '../../buttons/button/data/terra-button.interface';\nimport { TerraTileBoxColor } from './data/terra-tile-box-color';\n\n/**\n * @author mkunze\n * @deprecated use `terra-card` instead.\n */\n@Component({\n    selector: 'terra-tile-box',\n    styles:   [require('./terra-tile-box.component.scss')],\n    template: require('./terra-tile-box.component.html')\n})\nexport class TerraTileBoxComponent\n{\n    @Input()\n    public inputTitle:string;\n\n    @Input()\n    public inputSubTitle:string;\n\n    @Input()\n    public inputText:string;\n\n    @Input()\n    public inputImagePath:string;\n\n    @Input()\n    public inputIsSelected:boolean;\n\n    @Input()\n    public inputIsDragging:boolean;\n\n    @Input()\n    public inputIsDropTarget:boolean;\n\n    @Input()\n    public inputIsHover:boolean;\n\n    @Input()\n    public inputColor:TerraTileBoxColor; // default LIGHT_BLUE\n\n    @Input()\n    public inputIsLineView:boolean;\n\n    @Input()\n    public inputButtonList:Array<TerraButtonInterface>;\n\n    private stopPropagation(event:Event):void\n    {\n        event.stopPropagation();\n    }\n\n    private setClassesToTileBoxItem():Object\n    {\n        let isLightBlue:boolean = false;\n        let isBlue:boolean = false;\n        let isDarkBlue:boolean = false;\n\n        switch(this.inputColor)\n        {\n            case TerraTileBoxColor.LIGHT_BLUE:\n\n                isLightBlue = true;\n                break;\n\n            case TerraTileBoxColor.BLUE:\n\n                isBlue = true;\n                break;\n\n            case TerraTileBoxColor.DARK_BLUE:\n\n                isDarkBlue = true;\n                break;\n\n            default:\n                isLightBlue = true;\n        }\n\n        return {\n            light_blue:  isLightBlue,\n            blue:        isBlue,\n            dark_blue:   isDarkBlue,\n            is_selected: this.inputIsSelected,\n            is_dragging: this.inputIsDragging\n        };\n    }\n}\n"]}