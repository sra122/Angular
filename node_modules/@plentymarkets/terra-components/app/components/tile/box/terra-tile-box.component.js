"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var terra_tile_box_color_1 = require("./data/terra-tile-box-color");
/**
 * @author mkunze
 * @deprecated use `terra-card` instead.
 */
var TerraTileBoxComponent = /** @class */ (function () {
    function TerraTileBoxComponent() {
    }
    TerraTileBoxComponent.prototype.stopPropagation = function (event) {
        event.stopPropagation();
    };
    TerraTileBoxComponent.prototype.setClassesToTileBoxItem = function () {
        var isLightBlue = false;
        var isBlue = false;
        var isDarkBlue = false;
        switch (this.inputColor) {
            case terra_tile_box_color_1.TerraTileBoxColor.LIGHT_BLUE:
                isLightBlue = true;
                break;
            case terra_tile_box_color_1.TerraTileBoxColor.BLUE:
                isBlue = true;
                break;
            case terra_tile_box_color_1.TerraTileBoxColor.DARK_BLUE:
                isDarkBlue = true;
                break;
            default:
                isLightBlue = true;
        }
        return {
            light_blue: isLightBlue,
            blue: isBlue,
            dark_blue: isDarkBlue,
            is_selected: this.inputIsSelected,
            is_dragging: this.inputIsDragging
        };
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraTileBoxComponent.prototype, "inputTitle", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraTileBoxComponent.prototype, "inputSubTitle", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraTileBoxComponent.prototype, "inputText", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraTileBoxComponent.prototype, "inputImagePath", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraTileBoxComponent.prototype, "inputIsSelected", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraTileBoxComponent.prototype, "inputIsDragging", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraTileBoxComponent.prototype, "inputIsDropTarget", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraTileBoxComponent.prototype, "inputIsHover", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], TerraTileBoxComponent.prototype, "inputColor", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraTileBoxComponent.prototype, "inputIsLineView", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array)
    ], TerraTileBoxComponent.prototype, "inputButtonList", void 0);
    TerraTileBoxComponent = __decorate([
        core_1.Component({
            selector: 'terra-tile-box',
            styles: [require('./terra-tile-box.component.scss')],
            template: require('./terra-tile-box.component.html')
        })
    ], TerraTileBoxComponent);
    return TerraTileBoxComponent;
}());
exports.TerraTileBoxComponent = TerraTileBoxComponent;

//# sourceMappingURL=terra-tile-box.component.js.map
