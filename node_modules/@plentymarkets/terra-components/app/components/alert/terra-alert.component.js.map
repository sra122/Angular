{"version":3,"sources":["app/components/alert/terra-alert.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA2C;AAE3C,6BAGc;AAEd;;GAEG;AAEH;IAOI;QAFO,WAAM,GAA8B,EAAE,CAAC;QAI1C,IAAG,CAAC,qBAAmB,CAAC,UAAU,EAClC;YACI,MAAM,IAAI,KAAK,CAAC,6FAA6F,CAAC,CAAC;SAClH;IACL,CAAC;4BAbQ,mBAAmB;IAed,+BAAW,GAAzB;QAEI,IAAG,aAAM,CAAC,qBAAmB,CAAC,QAAQ,CAAC,EACvC;YACI,qBAAmB,CAAC,UAAU,GAAG,IAAI,CAAC;YACtC,qBAAmB,CAAC,QAAQ,GAAG,IAAI,qBAAmB,EAAE,CAAC;YACzD,qBAAmB,CAAC,UAAU,GAAG,KAAK,CAAC;SAC1C;QAED,OAAO,qBAAmB,CAAC,QAAQ,CAAC;IACxC,CAAC;IAEM,wCAAU,GAAjB,UAAkB,CAAQ;QAEtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IAEM,+CAAiB,GAAxB,UAAyB,KAAyB;QAE9C,IAAG,wBAAiB,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAC5C;YACI,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;SACjC;QAED,IAAI,KAAK,GAAe,IAAI,WAAW,CAAC,QAAQ,EAAE;YAC9C,MAAM,EAAE;gBACJ,OAAO,EAAW,KAAK,CAAC,GAAG;gBAC3B,IAAI,EAAc,KAAK,CAAC,IAAI;gBAC5B,gBAAgB,EAAE,KAAK,CAAC,gBAAgB;gBACxC,UAAU,EAAQ,KAAK,CAAC,UAAU;aACrC;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IACD,0CAA0C;IACnC,sCAAQ,GAAf,UAAgB,KAAyB;QAErC,IAAG,wBAAiB,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAC5C;YACI,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;SACjC;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACb,GAAG,EAAe,KAAK,CAAC,GAAG;YAC3B,IAAI,EAAc,KAAK,CAAC,IAAI;YAC5B,gBAAgB,EAAE,KAAK,CAAC,gBAAgB;YACxC,UAAU,EAAQ,KAAK,CAAC,UAAU;SACrC,CAAC,CAAC;IACP,CAAC;IAEM,oDAAsB,GAA7B,UAA8B,UAAiB;QAE3C,KAAiB,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;YAAxB,IAAI,OAAK,SAAA;YAET,IAAG,OAAK,CAAC,UAAU,KAAK,UAAU,EAClC;gBACI,IAAI,KAAK,GAAU,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAK,CAAC,CAAC;gBAE9C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aAC1B;SACJ;IACL,CAAC;IA3Ec,4BAAQ,GAAuB,IAAI,CAAC;IACpC,8BAAU,GAAW,KAAK,CAAC;IAHjC,mBAAmB;QAD/B,iBAAU,EAAE;;OACA,mBAAmB,CA8E/B;IAAD,0BAAC;;CA9ED,AA8EC,IAAA;AA9EY,kDAAmB","file":"terra-alert.component.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { TerraAlertInterface } from './data/terra-alert.interface';\nimport {\n    isNull,\n    isNullOrUndefined\n} from 'util';\n\n/**\n * @author mkunze\n */\n@Injectable()\nexport class TerraAlertComponent\n{\n    private static instance:TerraAlertComponent = null;\n    private static isCreating:boolean = false;\n\n    public alerts:Array<TerraAlertInterface> = [];\n\n    constructor()\n    {\n        if(!TerraAlertComponent.isCreating)\n        {\n            throw new Error('You can\\'t call new in Singleton instances! Call TerraAlertComponent.getInstance() instead.');\n        }\n    }\n\n    public static getInstance():TerraAlertComponent\n    {\n        if(isNull(TerraAlertComponent.instance))\n        {\n            TerraAlertComponent.isCreating = true;\n            TerraAlertComponent.instance = new TerraAlertComponent();\n            TerraAlertComponent.isCreating = false;\n        }\n\n        return TerraAlertComponent.instance;\n    }\n\n    public closeAlert(i:number):void\n    {\n        this.alerts.splice(i, 1);\n    }\n\n    public addAlertForPlugin(alert:TerraAlertInterface):void\n    {\n        if(isNullOrUndefined(alert.dismissOnTimeout))\n        {\n            alert.dismissOnTimeout = 5000;\n        }\n\n        let event:CustomEvent = new CustomEvent('status', {\n            detail: {\n                message:          alert.msg,\n                type:             alert.type,\n                dismissOnTimeout: alert.dismissOnTimeout,\n                identifier:       alert.identifier\n            }\n        });\n\n        window.parent.window.dispatchEvent(event);\n    }\n    /** @description is used to add an alert*/\n    public addAlert(alert:TerraAlertInterface):void\n    {\n        if(isNullOrUndefined(alert.dismissOnTimeout))\n        {\n            alert.dismissOnTimeout = 5000;\n        }\n\n        this.alerts.push({\n            msg:              alert.msg,\n            type:             alert.type,\n            dismissOnTimeout: alert.dismissOnTimeout,\n            identifier:       alert.identifier\n        });\n    }\n\n    public closeAlertByIdentifier(identifier:string):void\n    {\n        for(let alert of this.alerts)\n        {\n            if(alert.identifier === identifier)\n            {\n                let index:number = this.alerts.indexOf(alert);\n\n                this.closeAlert(index);\n            }\n        }\n    }\n}\n"]}